; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.220 

	TITLE	f:\tech\blkmover\cur_ver\sys\2000\iomon.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUID_MAX_POWER_SAVINGS
PUBLIC	_GUID_MIN_POWER_SAVINGS
PUBLIC	_GUID_TYPICAL_POWER_SAVINGS
PUBLIC	_NO_SUBGROUP_GUID
PUBLIC	_ALL_POWERSCHEMES_GUID
PUBLIC	_GUID_POWERSCHEME_PERSONALITY
PUBLIC	_GUID_ACTIVE_POWERSCHEME
PUBLIC	_GUID_VIDEO_SUBGROUP
PUBLIC	_GUID_VIDEO_POWERDOWN_TIMEOUT
PUBLIC	_GUID_VIDEO_ADAPTIVE_POWERDOWN
PUBLIC	_GUID_MONITOR_POWER_ON
PUBLIC	_GUID_DISK_SUBGROUP
PUBLIC	_GUID_DISK_POWERDOWN_TIMEOUT
PUBLIC	_GUID_DISK_ADAPTIVE_POWERDOWN
PUBLIC	_GUID_SLEEP_SUBGROUP
PUBLIC	_GUID_SLEEP_IDLE_THRESHOLD
PUBLIC	_GUID_STANDBY_TIMEOUT
PUBLIC	_GUID_HIBERNATE_TIMEOUT
PUBLIC	_GUID_HIBERNATE_FASTS4_POLICY
PUBLIC	_GUID_CRITICAL_POWER_TRANSITION
PUBLIC	_GUID_SYSTEM_AWAYMODE
PUBLIC	_GUID_ALLOW_AWAYMODE
PUBLIC	_GUID_ALLOW_STANDBY_STATES
PUBLIC	_GUID_ALLOW_RTC_WAKE
PUBLIC	_GUID_SYSTEM_BUTTON_SUBGROUP
PUBLIC	_GUID_POWERBUTTON_ACTION
PUBLIC	_GUID_POWERBUTTON_ACTION_FLAGS
PUBLIC	_GUID_SLEEPBUTTON_ACTION
PUBLIC	_GUID_SLEEPBUTTON_ACTION_FLAGS
PUBLIC	_GUID_USERINTERFACEBUTTON_ACTION
PUBLIC	_GUID_LIDCLOSE_ACTION
PUBLIC	_GUID_LIDCLOSE_ACTION_FLAGS
PUBLIC	_GUID_LIDOPEN_POWERSTATE
PUBLIC	_GUID_BATTERY_SUBGROUP
PUBLIC	_GUID_BATTERY_DISCHARGE_ACTION_0
PUBLIC	_GUID_BATTERY_DISCHARGE_LEVEL_0
PUBLIC	_GUID_BATTERY_DISCHARGE_FLAGS_0
PUBLIC	_GUID_BATTERY_DISCHARGE_ACTION_1
PUBLIC	_GUID_BATTERY_DISCHARGE_LEVEL_1
PUBLIC	_GUID_BATTERY_DISCHARGE_FLAGS_1
PUBLIC	_GUID_BATTERY_DISCHARGE_ACTION_2
PUBLIC	_GUID_BATTERY_DISCHARGE_LEVEL_2
PUBLIC	_GUID_BATTERY_DISCHARGE_FLAGS_2
PUBLIC	_GUID_BATTERY_DISCHARGE_ACTION_3
PUBLIC	_GUID_BATTERY_DISCHARGE_LEVEL_3
PUBLIC	_GUID_BATTERY_DISCHARGE_FLAGS_3
PUBLIC	_GUID_PROCESSOR_SETTINGS_SUBGROUP
PUBLIC	_GUID_PROCESSOR_THROTTLE_POLICY
PUBLIC	_GUID_PROCESSOR_THROTTLE_MAXIMUM
PUBLIC	_GUID_PROCESSOR_THROTTLE_MINIMUM
PUBLIC	_GUID_PROCESSOR_IDLESTATE_POLICY
PUBLIC	_GUID_PROCESSOR_PERFSTATE_POLICY
PUBLIC	_GUID_SYSTEM_COOLING_POLICY
PUBLIC	_GUID_LOCK_CONSOLE_ON_WAKE
PUBLIC	_GUID_ACDC_POWER_SOURCE
PUBLIC	_GUID_LIDSWITCH_STATE_CHANGE
PUBLIC	_GUID_BATTERY_PERCENTAGE_REMAINING
PUBLIC	_GUID_IDLE_BACKGROUND_TASK
PUBLIC	_GUID_BACKGROUND_TASK_NOTIFICATION
PUBLIC	_GUID_APPLAUNCH_BUTTON
PUBLIC	_GUID_PCIEXPRESS_SETTINGS_SUBGROUP
PUBLIC	_GUID_PCIEXPRESS_ASPM_POLICY
PUBLIC	_WHEA_RECORD_CREATOR_GUID
PUBLIC	_CMC_NOTIFY_TYPE_GUID
PUBLIC	_CPE_NOTIFY_TYPE_GUID
PUBLIC	_MCE_NOTIFY_TYPE_GUID
PUBLIC	_PCIe_NOTIFY_TYPE_GUID
PUBLIC	_INIT_NOTIFY_TYPE_GUID
PUBLIC	_NMI_NOTIFY_TYPE_GUID
PUBLIC	_BOOT_NOTIFY_TYPE_GUID
PUBLIC	_GENERIC_NOTIFY_TYPE_GUID
PUBLIC	_PROCESSOR_GENERIC_SECTION_GUID
PUBLIC	_X86_PROCESSOR_SPECIFIC_SECTION_GUID
PUBLIC	_IA64_PROCESSOR_SPECIFIC_SECTION_GUID
PUBLIC	_X64_PROCESSOR_SPECIFIC_SECTION_GUID
PUBLIC	_PLATFORM_MEMORY_SECTION_GUID
PUBLIC	_PCIEXPRESS_SECTION_GUID
PUBLIC	_PCIX_BUS_SECTION_GUID
PUBLIC	_PCIX_COMPONENT_SECTION_GUID
PUBLIC	_NMI_SECTION_GUID
PUBLIC	_GENERIC_SECTION_GUID
PUBLIC	_WHEA_PACKET_SECTION_GUID
PUBLIC	_PLATFORM_CACHE_SECTION_GUID
PUBLIC	_PARTITION_ENTRY_UNUSED_GUID
PUBLIC	_PARTITION_SYSTEM_GUID
PUBLIC	_PARTITION_MSFT_RESERVED_GUID
PUBLIC	_PARTITION_BASIC_DATA_GUID
PUBLIC	_PARTITION_LDM_METADATA_GUID
PUBLIC	_PARTITION_LDM_DATA_GUID
PUBLIC	_PARTITION_MSFT_RECOVERY_GUID
PUBLIC	_GUID_DEVINTERFACE_DISK
PUBLIC	_GUID_DEVINTERFACE_CDROM
PUBLIC	_GUID_DEVINTERFACE_PARTITION
PUBLIC	_GUID_DEVINTERFACE_TAPE
PUBLIC	_GUID_DEVINTERFACE_WRITEONCEDISK
PUBLIC	_GUID_DEVINTERFACE_VOLUME
PUBLIC	_GUID_DEVINTERFACE_MEDIUMCHANGER
PUBLIC	_GUID_DEVINTERFACE_FLOPPY
PUBLIC	_GUID_DEVINTERFACE_CDCHANGER
PUBLIC	_GUID_DEVINTERFACE_STORAGEPORT
PUBLIC	_MOUNTDEV_MOUNTED_DEVICE_GUID
PUBLIC	_MSWmi_MofData_GUID
PUBLIC	_MSWmi_ProviderInfo_GUID
PUBLIC	_MSWmi_PnPDeviceId_GUID
PUBLIC	_MSWmi_PnPInstanceNames_GUID
PUBLIC	_MSWmi_Guid_GUID
PUBLIC	_MSWmi_GuidRegistrationInfo_GUID
PUBLIC	_MSAcpiInfo_GUID
PUBLIC	_MSSmBios_RawSMBiosTables_GUID
PUBLIC	_MSSmBios_SMBiosEventlog_GUID
PUBLIC	_MSSmBios_SysidUUID_GUID
PUBLIC	_MSSmBios_SysidUUIDList_GUID
PUBLIC	_MSSmBios_Sysid1394_GUID
PUBLIC	_MSSmBios_Sysid1394List_GUID
PUBLIC	_MSMCAEvent_SwitchToCMCPolling_GUID
PUBLIC	_MSMCAEvent_SwitchToCPEPolling_GUID
PUBLIC	_MSMCAEvent_Header_GUID
PUBLIC	_MSMCAEvent_BusError_GUID
PUBLIC	_MSMCAEvent_TLBError_GUID
PUBLIC	_MSMCAEvent_MemoryHierarchyError_GUID
PUBLIC	_MSMCAEvent_CPUError_GUID
PUBLIC	_MSMCAEvent_MemoryError_GUID
PUBLIC	_MSMCAEvent_PCIBusError_GUID
PUBLIC	_MSMCAEvent_PCIComponentError_GUID
PUBLIC	_MSMCAEvent_SystemEventError_GUID
PUBLIC	_MSMCAEvent_SMBIOSError_GUID
PUBLIC	_MSMCAEvent_PlatformSpecificError_GUID
PUBLIC	_MSMCAEvent_InvalidError_GUID
PUBLIC	_MSMCAEvent_MemoryPageRemoved_GUID
PUBLIC	_MSMCAInfo_Entry_GUID
PUBLIC	_MSMCAInfo_RawMCAData_GUID
PUBLIC	_MSMCAInfo_RawCMCEvent_GUID
PUBLIC	_MSMCAInfo_RawMCAEvent_GUID
PUBLIC	_MSMCAInfo_RawCorrectedPlatformEvent_GUID
PUBLIC	_MSPower_DeviceEnable_GUID
PUBLIC	_MSPower_DeviceWakeEnable_GUID
PUBLIC	_MSNdis_NetworkAddress_GUID
PUBLIC	_MSNdis_NetworkShortAddress_GUID
PUBLIC	_MSNdis_NetworkLinkSpeed_GUID
PUBLIC	_MSNdis_EnumerateAdapter_GUID
PUBLIC	_MSNdis_NotifyAdapterRemoval_GUID
PUBLIC	_MSNdis_NotifyAdapterArrival_GUID
PUBLIC	_MSNdis_NdisEnumerateVc_GUID
PUBLIC	_MSNdis_NotifyVcRemoval_GUID
PUBLIC	_MSNdis_NotifyVcArrival_GUID
PUBLIC	_MSNdis_NotifyFilterRemoval_GUID
PUBLIC	_MSNdis_NotifyFilterArrival_GUID
PUBLIC	_MSNdis_DeviceWakeOnMagicPacketOnly_GUID
PUBLIC	_MSNdis_HardwareStatus_GUID
PUBLIC	_MSNdis_MediaSupported_GUID
PUBLIC	_MSNdis_MediaInUse_GUID
PUBLIC	_MSNdis_MaximumLookahead_GUID
PUBLIC	_MSNdis_MaximumFrameSize_GUID
PUBLIC	_MSNdis_LinkSpeed_GUID
PUBLIC	_MSNdis_TransmitBufferSpace_GUID
PUBLIC	_MSNdis_ReceiveBufferSpace_GUID
PUBLIC	_MSNdis_TransmitBlockSize_GUID
PUBLIC	_MSNdis_ReceiveBlockSize_GUID
PUBLIC	_MSNdis_VendorID_GUID
PUBLIC	_MSNdis_VendorDescription_GUID
PUBLIC	_MSNdis_CurrentPacketFilter_GUID
PUBLIC	_MSNdis_CurrentLookahead_GUID
PUBLIC	_MSNdis_DriverVersion_GUID
PUBLIC	_MSNdis_MaximumTotalSize_GUID
PUBLIC	_MSNdis_MacOptions_GUID
PUBLIC	_MSNdis_MediaConnectStatus_GUID
PUBLIC	_MSNdis_MaximumSendPackets_GUID
PUBLIC	_MSNdis_VendorDriverVersion_GUID
PUBLIC	_MSNdis_VlanIdentifier_GUID
PUBLIC	_MSNdis_PhysicalMediumType_GUID
PUBLIC	_MSNdis_TransmitsOk_GUID
PUBLIC	_MSNdis_ReceivesOk_GUID
PUBLIC	_MSNdis_TransmitsError_GUID
PUBLIC	_MSNdis_ReceiveError_GUID
PUBLIC	_MSNdis_ReceiveNoBuffer_GUID
PUBLIC	_MSNdis_CoHardwareStatus_GUID
PUBLIC	_MSNdis_CoMediaSupported_GUID
PUBLIC	_MSNdis_CoMediaInUse_GUID
PUBLIC	_MSNdis_CoLinkSpeed_GUID
PUBLIC	_MSNdis_CoVendorId_GUID
PUBLIC	_MSNdis_CoVendorDescription_GUID
PUBLIC	_MSNdis_CoDriverVersion_GUID
PUBLIC	_MSNdis_CoMacOptions_GUID
PUBLIC	_MSNdis_CoMediaConnectStatus_GUID
PUBLIC	_MSNdis_CoVendorDriverVersion_GUID
PUBLIC	_MSNdis_CoMinimumLinkSpeed_GUID
PUBLIC	_MSNdis_CoTransmitPdusOk_GUID
PUBLIC	_MSNdis_CoReceivePdusOk_GUID
PUBLIC	_MSNdis_CoTransmitPduErrors_GUID
PUBLIC	_MSNdis_CoReceivePduErrors_GUID
PUBLIC	_MSNdis_CoReceivePdusNoBuffer_GUID
PUBLIC	_MSNdis_AtmSupportedVcRates_GUID
PUBLIC	_MSNdis_AtmSupportedServiceCategory_GUID
PUBLIC	_MSNdis_AtmSupportedAalTypes_GUID
PUBLIC	_MSNdis_AtmHardwareCurrentAddress_GUID
PUBLIC	_MSNdis_AtmMaxActiveVcs_GUID
PUBLIC	_MSNdis_AtmMaxActiveVciBits_GUID
PUBLIC	_MSNdis_AtmMaxActiveVpiBits_GUID
PUBLIC	_MSNdis_AtmMaxAal0PacketSize_GUID
PUBLIC	_MSNdis_AtmMaxAal1PacketSize_GUID
PUBLIC	_MSNdis_AtmMaxAal34PacketSize_GUID
PUBLIC	_MSNdis_AtmMaxAal5PacketSize_GUID
PUBLIC	_MSNdis_AtmReceiveCellsOk_GUID
PUBLIC	_MSNdis_AtmTransmitCellsOk_GUID
PUBLIC	_MSNdis_AtmReceiveCellsDropped_GUID
PUBLIC	_MSNdis_EthernetPermanentAddress_GUID
PUBLIC	_MSNdis_EthernetCurrentAddress_GUID
PUBLIC	_MSNdis_EthernetMulticastList_GUID
PUBLIC	_MSNdis_EthernetMaximumMulticastListSize_GUID
PUBLIC	_MSNdis_EthernetMacOptions_GUID
PUBLIC	_MSNdis_EthernetReceiveErrorAlignment_GUID
PUBLIC	_MSNdis_EthernetOneTransmitCollision_GUID
PUBLIC	_MSNdis_EthernetMoreTransmitCollisions_GUID
PUBLIC	_MSNdis_TokenRingPermanentAddress_GUID
PUBLIC	_MSNdis_TokenRingCurrentAddress_GUID
PUBLIC	_MSNdis_TokenRingCurrentFunctional_GUID
PUBLIC	_MSNdis_TokenRingCurrentGroup_GUID
PUBLIC	_MSNdis_TokenRingLastOpenStatus_GUID
PUBLIC	_MSNdis_TokenRingCurrentRingStatus_GUID
PUBLIC	_MSNdis_TokenRingCurrentRingState_GUID
PUBLIC	_MSNdis_TokenRingLineErrors_GUID
PUBLIC	_MSNdis_TokenRingLostFrames_GUID
PUBLIC	_MSNdis_FddiLongPermanentAddress_GUID
PUBLIC	_MSNdis_FddiLongCurrentAddress_GUID
PUBLIC	_MSNdis_FddiLongMulticastList_GUID
PUBLIC	_MSNdis_FddiLongMaximumListSize_GUID
PUBLIC	_MSNdis_FddiShortPermanentAddress_GUID
PUBLIC	_MSNdis_FddiShortCurrentAddress_GUID
PUBLIC	_MSNdis_FddiShortMulticastList_GUID
PUBLIC	_MSNdis_FddiShortMaximumListSize_GUID
PUBLIC	_MSNdis_FddiAttachmentType_GUID
PUBLIC	_MSNdis_FddiUpstreamNodeLong_GUID
PUBLIC	_MSNdis_FddiDownstreamNodeLong_GUID
PUBLIC	_MSNdis_FddiFrameErrors_GUID
PUBLIC	_MSNdis_FddiFramesLost_GUID
PUBLIC	_MSNdis_FddiRingManagmentState_GUID
PUBLIC	_MSNdis_FddiLctFailures_GUID
PUBLIC	_MSNdis_FddiLemRejects_GUID
PUBLIC	_MSNdis_FddiLConnectionState_GUID
PUBLIC	_MSNdis_ObjectHeader_GUID
PUBLIC	_MSNdis_WmiMethodHeader_GUID
PUBLIC	_MSNdis_WmiSetHeader_GUID
PUBLIC	_MSNdis_WmiOutputInfo_GUID
PUBLIC	_MSNdis_WmiEnumAdapter_GUID
PUBLIC	_MSNdis_LinkStateData_GUID
PUBLIC	_MSNdis_LinkParameters_GUID
PUBLIC	_MSNdis_InterruptModerationParameters_GUID
PUBLIC	_MSNdis_StatisticsInfo_GUID
PUBLIC	_MSNdis_PortStateData_GUID
PUBLIC	_MSNdis_PortAuthParameters_GUID
PUBLIC	_MSNdis_PortChar_GUID
PUBLIC	_MSNdis_PortArray_GUID
PUBLIC	_MSNdis_PciDeviceProperty_GUID
PUBLIC	_MSNdis_WmiTcpLargeSendOffloadV1_IPv4_GUID
PUBLIC	_MSNdis_WmiTcpLargeSendOffloadV1_GUID
PUBLIC	_MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_GUID
PUBLIC	_MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_GUID
PUBLIC	_MSNdis_WmiTcpIpChecksumOffload_GUID
PUBLIC	_MSNdis_WmiIPSecOffloadV1_Supported_GUID
PUBLIC	_MSNdis_WmiIPSecOffloadV1_IPv4AH_GUID
PUBLIC	_MSNdis_WmiIPSecOffloadV1_IPv4ESP_GUID
PUBLIC	_MSNdis_WmiIPSecOffloadV1_GUID
PUBLIC	_MSNdis_WmiTcpLargeSendOffloadV2_IPv4_GUID
PUBLIC	_MSNdis_WmiTcpLargeSendOffloadV2_IPv6_GUID
PUBLIC	_MSNdis_WmiTcpLargeSendOffloadV2_GUID
PUBLIC	_MSNdis_WmiOffload_GUID
PUBLIC	_MSNdis_TcpOffloadParameters_GUID
PUBLIC	_MSNdis_WmiTcpConnectionOffload_GUID
PUBLIC	_MSNdis_LinkState_GUID
PUBLIC	_MSNdis_QueryInterruptModeration_GUID
PUBLIC	_MSNdis_SetInterruptModeration_GUID
PUBLIC	_MSNdis_SetLinkParameters_GUID
PUBLIC	_MSNdis_QueryStatisticsInfo_GUID
PUBLIC	_MSNdis_QueryPortState_GUID
PUBLIC	_MSNdis_EnumeratePorts_GUID
PUBLIC	_MSNdis_SetPortParameters_GUID
PUBLIC	_MSNdis_QueryPciDeviceCustomProperty_GUID
PUBLIC	_MSNdis_EnumerateAdapterEx_GUID
PUBLIC	_MSNdis_TcpOffloadCurrentConfig_GUID
PUBLIC	_MSNdis_TcpOffloadHardwareConfig_GUID
PUBLIC	_MSNdis_SetTcpOffloadParameters_GUID
PUBLIC	_MSNdis_TcpConnectionOffloadCurrentConfig_GUID
PUBLIC	_MSNdis_TcpConnectionOffloadHardwareConfig_GUID
PUBLIC	_MSNdis_80211_BaseServiceSetIdentifier_GUID
PUBLIC	_MSNdis_80211_ServiceSetIdentifier_GUID
PUBLIC	_MSNdis_80211_NetworkType_GUID
PUBLIC	_MSNdis_80211_NetworkTypesSupported_GUID
PUBLIC	_MSNdis_80211_NetworkTypeInUse_GUID
PUBLIC	_MSNdis_80211_PowerMode_GUID
PUBLIC	_MSNdis_80211_TransmitPowerLevel_GUID
PUBLIC	_MSNdis_80211_ReceivedSignalStrength_GUID
PUBLIC	_MSNdis_80211_ReceivedSignalStrengthEventTrigger_GUID
PUBLIC	_MSNdis_80211_NetworkInfrastructure_GUID
PUBLIC	_MSNdis_80211_ConfigurationFH_GUID
PUBLIC	_MSNdis_80211_ConfigurationInfo_GUID
PUBLIC	_MSNdis_80211_WLanBssId_GUID
PUBLIC	_MSNdis_80211_BSSIList_GUID
PUBLIC	_MSNdis_80211_InfrastructureMode_GUID
PUBLIC	_MSNdis_80211_FragmentationThreshold_GUID
PUBLIC	_MSNdis_80211_RTSThreshold_GUID
PUBLIC	_MSNdis_80211_NumberOfAntennas_GUID
PUBLIC	_MSNdis_80211_ReceiveAntennaSelected_GUID
PUBLIC	_MSNdis_80211_TransmitAntennaSelected_GUID
PUBLIC	_MSNdis_80211_DataRates_GUID
PUBLIC	_MSNdis_80211_DesiredDataRates_GUID
PUBLIC	_MSNdis_80211_Configuration_GUID
PUBLIC	_MSNdis_80211_Statistics_GUID
PUBLIC	_MSNdis_80211_AddWEP_GUID
PUBLIC	_MSNdis_80211_RemoveWEP_GUID
PUBLIC	_MSNdis_80211_Disassociate_GUID
PUBLIC	_MSNdis_80211_BssIdListScan_GUID
PUBLIC	_MSNdis_80211_AuthenticationMode_GUID
PUBLIC	_MSNdis_80211_PrivacyFilter_GUID
PUBLIC	_MSNdis_80211_WEPStatus_GUID
PUBLIC	_MSNdis_80211_ReloadDefaults_GUID
PUBLIC	_MSNdis_StatusResetStart_GUID
PUBLIC	_MSNdis_StatusResetEnd_GUID
PUBLIC	_MSNdis_StatusMediaConnect_GUID
PUBLIC	_MSNdis_StatusMediaDisconnect_GUID
PUBLIC	_MSNdis_StatusMediaSpecificIndication_GUID
PUBLIC	_MSNdis_StatusLinkSpeedChange_GUID
PUBLIC	_MSNdis_StatusProtocolBind_GUID
PUBLIC	_MSNdis_StatusProtocolUnbind_GUID
PUBLIC	_MSNdis_StatusDevicePowerOn_GUID
PUBLIC	_MSNdis_StatusDevicePowerOff_GUID
PUBLIC	_MSNdis_StatusTaskOffloadChange_GUID
PUBLIC	_MSNdis_StatusPacketFilterChange_GUID
PUBLIC	_MSNdis_StatusNetworkChange_GUID
PUBLIC	_MSNdis_StatusOperationalStatus_GUID
PUBLIC	_MSNdis_StatusLinkState_GUID
PUBLIC	_MSNdis_StatusPortState_GUID
PUBLIC	_MSNdis_StatusMediaSpecificIndicationEx_GUID
PUBLIC	_MSNdis_StatusDot11ScanConfirm_GUID
PUBLIC	_MSNdis_StatusDot11MPDUMaxLengthChange_GUID
PUBLIC	_MSNdis_StatusDot11AssociationStart_GUID
PUBLIC	_MSNdis_StatusDot11AssociationCompletion_GUID
PUBLIC	_MSNdis_StatusDot11ConnectionStart_GUID
PUBLIC	_MSNdis_StatusDot11ConnectionCompletion_GUID
PUBLIC	_MSNdis_StatusDot11RoamingStart_GUID
PUBLIC	_MSNdis_StatusDot11RoamingCompletion_GUID
PUBLIC	_MSNdis_StatusDot11Disassociation_GUID
PUBLIC	_MSNdis_StatusDot11TkipmicFailure_GUID
PUBLIC	_MSNdis_StatusDot11PmkidCandidateList_GUID
PUBLIC	_MSNdis_StatusDot11PhyStateChange_GUID
PUBLIC	_MSNdis_StatusDot11LinkQuality_GUID
PUBLIC	_MSKeyboard_PortInformation_GUID
PUBLIC	_MSKeyboard_ExtendedID_GUID
PUBLIC	_MSMouse_PortInformation_GUID
PUBLIC	_MSMouse_ClassInformation_GUID
PUBLIC	_MSKeyboard_ClassInformation_GUID
PUBLIC	_MSAgp_Information_GUID
PUBLIC	_MSAcpi_ThermalZoneTemperature_GUID
PUBLIC	_MSDiskDriver_Geometry_GUID
PUBLIC	_MSDiskDriver_PerformanceData_GUID
PUBLIC	_MSDiskDriver_Performance_GUID
PUBLIC	_MSStorageDriver_FailurePredictStatus_GUID
PUBLIC	_MSStorageDriver_FailurePredictData_GUID
PUBLIC	_MSStorageDriver_ATAPISmartData_GUID
PUBLIC	_MSStorageDriver_FailurePredictThresholds_GUID
PUBLIC	_MSStorageDriver_FailurePredictEvent_GUID
PUBLIC	_MSStorageDriver_FailurePredictFunction_GUID
PUBLIC	_MSStorageDriver_ScsiInfoExceptions_GUID
PUBLIC	_MSIde_PortDeviceInfo_GUID
PUBLIC	_MSSerial_PortName_GUID
PUBLIC	_MSSerial_CommInfo_GUID
PUBLIC	_MSSerial_HardwareConfiguration_GUID
PUBLIC	_MSSerial_PerformanceInformation_GUID
PUBLIC	_MSSerial_CommProperties_GUID
PUBLIC	_MSParallel_AllocFreeCounts_GUID
PUBLIC	_MSParallel_DeviceBytesTransferred_GUID
PUBLIC	_MSRedbook_DriverInformationGuid
PUBLIC	_MSRedbook_PerformanceGuid
PUBLIC	_RegisteredGuids_GUID
PUBLIC	_MSTapeDriveParam_GUID
PUBLIC	_MSTapeMediaCapacity_GUID
PUBLIC	_MSTapeSymbolicName_GUID
PUBLIC	_MSTapeDriveProblemEvent_GUID
PUBLIC	_MSTapeProblemIoError_GUID
PUBLIC	_MSTapeProblemDeviceError_GUID
PUBLIC	_MSChangerParameters_GUID
PUBLIC	_MSChangerProblemEvent_GUID
PUBLIC	_MSChangerProblemDeviceError_GUID
PUBLIC	_MSDeviceUI_FirmwareRevision_GUID
PUBLIC	_MSVerifierIrpLogEntry_GUID
PUBLIC	_MSVerifierIrpLogInformation_GUID
PUBLIC	_WmiMonitorBrightness_GUID
PUBLIC	_WmiMonitorBrightnessMethods_GUID
PUBLIC	_WmiMonitorBrightnessEvent_GUID
PUBLIC	_WmiMonitorRawEEdidV1Block_GUID
PUBLIC	_WmiMonitorDescriptorMethods_GUID
PUBLIC	_WmiMonitorID_GUID
PUBLIC	_WmiMonitorSupportedDisplayFeatures_GUID
PUBLIC	_WmiMonitorBasicDisplayParams_GUID
PUBLIC	_WmiMonitorConnectionParams_GUID
PUBLIC	_WmiMonitorAnalogVideoInputParams_GUID
PUBLIC	_WmiMonitorDigitalVideoInputParams_GUID
PUBLIC	_WmiMonitorColorXYZinCIE_GUID
PUBLIC	_WmiMonitorColorCharacteristics_GUID
PUBLIC	_VideoModeDescriptor_GUID
PUBLIC	_WmiMonitorListedSupportedSourceModes_GUID
PUBLIC	_FrequencyRangeDescriptor_GUID
PUBLIC	_WmiMonitorListedFrequencyRanges_GUID
PUBLIC	_KernelPerfState_GUID
PUBLIC	_KernelPerfStates_GUID
PUBLIC	_KernelIdleState_GUID
PUBLIC	_KernelIdleStates_GUID
PUBLIC	_KernelPerfStateChange_GUID
PUBLIC	_KernelPerfStateDomainChange_GUID
PUBLIC	_KernelIdleStateChange_GUID
PUBLIC	_KernelThermalConstraintChange_GUID
PUBLIC	_IdleStateAccounting_GUID
PUBLIC	_IdleAccounting_GUID
PUBLIC	_KernelThermalPolicyChange_GUID
PUBLIC	_ProcessorPerformance_GUID
PUBLIC	_DiskPerfGuid
PUBLIC	_THERMAL_ZONE_GUID
PUBLIC	_GlobalLoggerGuid
PUBLIC	_GenericMessageGuid
PUBLIC	_ProcessGuid
PUBLIC	_ThreadGuid
PUBLIC	_PageFaultGuid
PUBLIC	_DiskIoGuid
PUBLIC	_FileIoGuid
PUBLIC	_TcpIpGuid
PUBLIC	_UdpIpGuid
PUBLIC	_ImageLoadGuid
PUBLIC	_RegistryGuid
PUBLIC	_TraceErrorGuid
PUBLIC	_HardFaultGuid
PUBLIC	_WmiEventLoggerGuid
PUBLIC	_MS_SYSTEM_INFORMATION_GUID
PUBLIC	_DbgPrintGuid
_DATA	SEGMENT
COMM	_DiskPerfRegistryPath:QWORD
_DATA	ENDS
;	COMDAT _DbgPrintGuid
CONST	SEGMENT
_DbgPrintGuid DD 013976d09H
	DW	0a327H
	DW	0438cH
	DB	095H
	DB	0bH
	DB	07fH
	DB	03H
	DB	019H
	DB	028H
	DB	015H
	DB	0c7H
CONST	ENDS
;	COMDAT _MS_SYSTEM_INFORMATION_GUID
CONST	SEGMENT
_MS_SYSTEM_INFORMATION_GUID DD 098a2b9d7H
	DW	094ddH
	DW	0496aH
	DB	084H
	DB	07eH
	DB	067H
	DB	0a5H
	DB	055H
	DB	07aH
	DB	059H
	DB	0f2H
CONST	ENDS
;	COMDAT _WmiEventLoggerGuid
CONST	SEGMENT
_WmiEventLoggerGuid DD 044608a51H
	DW	01851H
	DW	04456H
	DB	098H
	DB	0b2H
	DB	0b3H
	DB	00H
	DB	0e9H
	DB	031H
	DB	0eeH
	DB	041H
CONST	ENDS
;	COMDAT _HardFaultGuid
CONST	SEGMENT
_HardFaultGuid DD 03d6fa8d2H
	DW	0fe05H
	DW	011d0H
	DB	09dH
	DB	0daH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0d7H
	DB	0baH
	DB	07cH
CONST	ENDS
;	COMDAT _TraceErrorGuid
CONST	SEGMENT
_TraceErrorGuid DD 0398191dcH
	DW	02da7H
	DW	011d3H
	DB	08bH
	DB	098H
	DB	00H
	DB	080H
	DB	05fH
	DB	085H
	DB	0d7H
	DB	0c6H
CONST	ENDS
;	COMDAT _RegistryGuid
CONST	SEGMENT
_RegistryGuid DD 0ae53722eH
	DW	0c863H
	DW	011d2H
	DB	086H
	DB	059H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0a3H
	DB	021H
	DB	0a1H
CONST	ENDS
;	COMDAT _ImageLoadGuid
CONST	SEGMENT
_ImageLoadGuid DD 02cb15d1dH
	DW	05fc1H
	DW	011d2H
	DB	0abH
	DB	0e1H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	011H
	DB	0f5H
	DB	018H
CONST	ENDS
;	COMDAT _UdpIpGuid
CONST	SEGMENT
_UdpIpGuid DD	0bf3a50c5H
	DW	0a9c9H
	DW	04988H
	DB	0a0H
	DB	05H
	DB	02dH
	DB	0f0H
	DB	0b7H
	DB	0c8H
	DB	0fH
	DB	080H
CONST	ENDS
;	COMDAT _TcpIpGuid
CONST	SEGMENT
_TcpIpGuid DD	09a280ac0H
	DW	0c8e0H
	DW	011d1H
	DB	084H
	DB	0e2H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	098H
	DB	0a2H
CONST	ENDS
;	COMDAT _FileIoGuid
CONST	SEGMENT
_FileIoGuid DD	090cbdc39H
	DW	04a3eH
	DW	011d1H
	DB	084H
	DB	0f4H
	DB	00H
	DB	00H
	DB	0f8H
	DB	04H
	DB	064H
	DB	0e3H
CONST	ENDS
;	COMDAT _DiskIoGuid
CONST	SEGMENT
_DiskIoGuid DD	03d6fa8d4H
	DW	0fe05H
	DW	011d0H
	DB	09dH
	DB	0daH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0d7H
	DB	0baH
	DB	07cH
CONST	ENDS
;	COMDAT _PageFaultGuid
CONST	SEGMENT
_PageFaultGuid DD 03d6fa8d3H
	DW	0fe05H
	DW	011d0H
	DB	09dH
	DB	0daH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0d7H
	DB	0baH
	DB	07cH
CONST	ENDS
;	COMDAT _ThreadGuid
CONST	SEGMENT
_ThreadGuid DD	03d6fa8d1H
	DW	0fe05H
	DW	011d0H
	DB	09dH
	DB	0daH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0d7H
	DB	0baH
	DB	07cH
CONST	ENDS
;	COMDAT _ProcessGuid
CONST	SEGMENT
_ProcessGuid DD	03d6fa8d0H
	DW	0fe05H
	DW	011d0H
	DB	09dH
	DB	0daH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0d7H
	DB	0baH
	DB	07cH
CONST	ENDS
;	COMDAT _GenericMessageGuid
CONST	SEGMENT
_GenericMessageGuid DD 08d40301fH
	DW	0ab4aH
	DW	011d2H
	DB	09aH
	DB	093H
	DB	00H
	DB	080H
	DB	05fH
	DB	085H
	DB	0d7H
	DB	0c6H
CONST	ENDS
;	COMDAT _GlobalLoggerGuid
CONST	SEGMENT
_GlobalLoggerGuid DD 0e8908abcH
	DW	0aa84H
	DW	011d2H
	DB	09aH
	DB	093H
	DB	00H
	DB	080H
	DB	05fH
	DB	085H
	DB	0d7H
	DB	0c6H
CONST	ENDS
;	COMDAT _THERMAL_ZONE_GUID
CONST	SEGMENT
_THERMAL_ZONE_GUID DD 0a1bc18c0H
	DW	0a7c8H
	DW	011d1H
	DB	0bfH
	DB	03cH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _DiskPerfGuid
CONST	SEGMENT
_DiskPerfGuid DD 0bdd865d1H
	DW	0d7c1H
	DW	011d0H
	DB	0a5H
	DB	01H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _ProcessorPerformance_GUID
CONST	SEGMENT
_ProcessorPerformance_GUID DD 07fd18652H
	DW	0cfeH
	DW	040d2H
	DB	0b0H
	DB	0a1H
	DB	0bH
	DB	06H
	DB	06aH
	DB	087H
	DB	075H
	DB	09eH
CONST	ENDS
;	COMDAT _KernelThermalPolicyChange_GUID
CONST	SEGMENT
_KernelThermalPolicyChange_GUID DD 0aca5a8f7H
	DW	096caH
	DW	04397H
	DB	0baH
	DB	0deH
	DB	043H
	DB	0beH
	DB	02fH
	DB	057H
	DB	07dH
	DB	051H
CONST	ENDS
;	COMDAT _IdleAccounting_GUID
CONST	SEGMENT
_IdleAccounting_GUID DD 0e2a26f78H
	DW	0ae07H
	DW	04ee0H
	DB	0a3H
	DB	0fH
	DB	0ceH
	DB	035H
	DB	04fH
	DB	05aH
	DB	094H
	DB	0cdH
CONST	ENDS
;	COMDAT _IdleStateAccounting_GUID
CONST	SEGMENT
_IdleStateAccounting_GUID DD 05280028aH
	DW	0c24fH
	DW	043ecH
	DB	0b2H
	DB	07dH
	DB	0a9H
	DB	060H
	DB	0a7H
	DB	0eH
	DB	031H
	DB	09aH
CONST	ENDS
;	COMDAT _KernelThermalConstraintChange_GUID
CONST	SEGMENT
_KernelThermalConstraintChange_GUID DD 0a852c2c8H
	DW	01a4cH
	DW	0423bH
	DB	08cH
	DB	02cH
	DB	0f3H
	DB	0dH
	DB	082H
	DB	093H
	DB	01aH
	DB	088H
CONST	ENDS
;	COMDAT _KernelIdleStateChange_GUID
CONST	SEGMENT
_KernelIdleStateChange_GUID DD 04838fe4fH
	DW	0f71cH
	DW	04e51H
	DB	09eH
	DB	0ccH
	DB	084H
	DB	030H
	DB	0a7H
	DB	0acH
	DB	04cH
	DB	06cH
CONST	ENDS
;	COMDAT _KernelPerfStateDomainChange_GUID
CONST	SEGMENT
_KernelPerfStateDomainChange_GUID DD 0995e6b7fH
	DW	0d653H
	DW	0497aH
	DB	0b9H
	DB	078H
	DB	036H
	DB	0a3H
	DB	0cH
	DB	029H
	DB	0bfH
	DB	01H
CONST	ENDS
;	COMDAT _KernelPerfStateChange_GUID
CONST	SEGMENT
_KernelPerfStateChange_GUID DD 0a5b32dddH
	DW	07f39H
	DW	04abcH
	DB	0b8H
	DB	092H
	DB	090H
	DB	0eH
	DB	043H
	DB	0b5H
	DB	09eH
	DB	0bbH
CONST	ENDS
;	COMDAT _KernelIdleStates_GUID
CONST	SEGMENT
_KernelIdleStates_GUID DD 0ba138e10H
	DW	0e250H
	DW	04ad7H
	DB	086H
	DB	016H
	DB	0cfH
	DB	01aH
	DB	07aH
	DB	0d4H
	DB	010H
	DB	0e7H
CONST	ENDS
;	COMDAT _KernelIdleState_GUID
CONST	SEGMENT
_KernelIdleState_GUID DD 046bdcf4aH
	DW	0e076H
	DW	04550H
	DB	082H
	DB	0b2H
	DB	09fH
	DB	032H
	DB	0edH
	DB	0edH
	DB	03eH
	DB	07fH
CONST	ENDS
;	COMDAT _KernelPerfStates_GUID
CONST	SEGMENT
_KernelPerfStates_GUID DD 05708cc20H
	DW	07d40H
	DW	04bf4H
	DB	0b4H
	DB	0aaH
	DB	02bH
	DB	01H
	DB	033H
	DB	08dH
	DB	01H
	DB	026H
CONST	ENDS
;	COMDAT _KernelPerfState_GUID
CONST	SEGMENT
_KernelPerfState_GUID DD 08c7980e1H
	DW	0f62bH
	DW	0419eH
	DB	0aaH
	DB	082H
	DB	027H
	DB	06cH
	DB	08dH
	DB	06H
	DB	04aH
	DB	01fH
CONST	ENDS
;	COMDAT _WmiMonitorListedFrequencyRanges_GUID
CONST	SEGMENT
_WmiMonitorListedFrequencyRanges_GUID DD 0e86e9525H
	DW	065b6H
	DW	04b85H
	DB	095H
	DB	0c5H
	DB	00H
	DB	0beH
	DB	0acH
	DB	0c9H
	DB	075H
	DB	0edH
CONST	ENDS
;	COMDAT _FrequencyRangeDescriptor_GUID
CONST	SEGMENT
_FrequencyRangeDescriptor_GUID DD 0f4546078H
	DW	0f3b2H
	DW	0417eH
	DB	094H
	DB	0cdH
	DB	047H
	DB	0eaH
	DB	030H
	DB	06cH
	DB	057H
	DB	051H
CONST	ENDS
;	COMDAT _WmiMonitorListedSupportedSourceModes_GUID
CONST	SEGMENT
_WmiMonitorListedSupportedSourceModes_GUID DD 06dc76655H
	DW	063cH
	DW	04524H
	DB	0a8H
	DB	062H
	DB	0b8H
	DB	041H
	DB	0cH
	DB	026H
	DB	028H
	DB	01bH
CONST	ENDS
;	COMDAT _VideoModeDescriptor_GUID
CONST	SEGMENT
_VideoModeDescriptor_GUID DD 04a97ed30H
	DW	0bfaaH
	DW	0491aH
	DB	09dH
	DB	0fdH
	DB	0b4H
	DB	03aH
	DB	0deH
	DB	0dbH
	DB	0f8H
	DB	0e3H
CONST	ENDS
;	COMDAT _WmiMonitorColorCharacteristics_GUID
CONST	SEGMENT
_WmiMonitorColorCharacteristics_GUID DD 0ea324793H
	DW	051bbH
	DW	0486aH
	DB	0aaH
	DB	09dH
	DB	0fH
	DB	055H
	DB	052H
	DB	035H
	DB	034H
	DB	013H
CONST	ENDS
;	COMDAT _WmiMonitorColorXYZinCIE_GUID
CONST	SEGMENT
_WmiMonitorColorXYZinCIE_GUID DD 01faf041H
	DW	0842cH
	DW	04230H
	DB	0a3H
	DB	01eH
	DB	013H
	DB	035H
	DB	042H
	DB	08cH
	DB	0d8H
	DB	0f0H
CONST	ENDS
;	COMDAT _WmiMonitorDigitalVideoInputParams_GUID
CONST	SEGMENT
_WmiMonitorDigitalVideoInputParams_GUID DD 051565945H
	DW	0498aH
	DW	04a77H
	DB	0acH
	DB	0c6H
	DB	015H
	DB	01bH
	DB	0ecH
	DB	0c8H
	DB	05H
	DB	0caH
CONST	ENDS
;	COMDAT _WmiMonitorAnalogVideoInputParams_GUID
CONST	SEGMENT
_WmiMonitorAnalogVideoInputParams_GUID DD 0a56dbcf9H
	DW	0c4f0H
	DW	044a8H
	DB	09cH
	DB	01bH
	DB	0bbH
	DB	03bH
	DB	03fH
	DB	077H
	DB	04bH
	DB	04dH
CONST	ENDS
;	COMDAT _WmiMonitorConnectionParams_GUID
CONST	SEGMENT
_WmiMonitorConnectionParams_GUID DD 02e2d2463H
	DW	0b537H
	DW	04da7H
	DB	08eH
	DB	0eeH
	DB	051H
	DB	030H
	DB	06fH
	DB	01fH
	DB	048H
	DB	02fH
CONST	ENDS
;	COMDAT _WmiMonitorBasicDisplayParams_GUID
CONST	SEGMENT
_WmiMonitorBasicDisplayParams_GUID DD 09831b7e6H
	DW	09acH
	DW	0491fH
	DB	08dH
	DB	07H
	DB	03cH
	DB	03dH
	DB	064H
	DB	09dH
	DB	082H
	DB	040H
CONST	ENDS
;	COMDAT _WmiMonitorSupportedDisplayFeatures_GUID
CONST	SEGMENT
_WmiMonitorSupportedDisplayFeatures_GUID DD 09fa9c28bH
	DW	05e5cH
	DW	04035H
	DB	0a5H
	DB	0f8H
	DB	067H
	DB	0d4H
	DB	055H
	DB	04fH
	DB	08dH
	DB	04H
CONST	ENDS
;	COMDAT _WmiMonitorID_GUID
CONST	SEGMENT
_WmiMonitorID_GUID DD 0671a8285H
	DW	04edbH
	DW	04caeH
	DB	099H
	DB	0feH
	DB	069H
	DB	0a1H
	DB	05cH
	DB	048H
	DB	0c0H
	DB	0bcH
CONST	ENDS
;	COMDAT _WmiMonitorDescriptorMethods_GUID
CONST	SEGMENT
_WmiMonitorDescriptorMethods_GUID DD 05341576eH
	DW	075c4H
	DW	04aebH
	DB	0a8H
	DB	02bH
	DB	087H
	DB	03cH
	DB	0d3H
	DB	0c6H
	DB	0b3H
	DB	084H
CONST	ENDS
;	COMDAT _WmiMonitorRawEEdidV1Block_GUID
CONST	SEGMENT
_WmiMonitorRawEEdidV1Block_GUID DD 0faee1471H
	DW	05149H
	DW	04a68H
	DB	0acH
	DB	02cH
	DB	0bfH
	DB	096H
	DB	0ecH
	DB	09H
	DB	0f0H
	DB	04H
CONST	ENDS
;	COMDAT _WmiMonitorBrightnessEvent_GUID
CONST	SEGMENT
_WmiMonitorBrightnessEvent_GUID DD 0123c80d2H
	DW	0937fH
	DW	04cfeH
	DB	080H
	DB	0f4H
	DB	0c4H
	DB	0dH
	DB	059H
	DB	06eH
	DB	048H
	DB	0b7H
CONST	ENDS
;	COMDAT _WmiMonitorBrightnessMethods_GUID
CONST	SEGMENT
_WmiMonitorBrightnessMethods_GUID DD 0479b20b4H
	DW	05559H
	DW	046feH
	DB	0beH
	DB	097H
	DB	07dH
	DB	022H
	DB	021H
	DB	054H
	DB	042H
	DB	01fH
CONST	ENDS
;	COMDAT _WmiMonitorBrightness_GUID
CONST	SEGMENT
_WmiMonitorBrightness_GUID DD 0d43412acH
	DW	067f9H
	DW	04fbbH
	DB	0a0H
	DB	081H
	DB	017H
	DB	052H
	DB	0a2H
	DB	0c3H
	DB	03eH
	DB	084H
CONST	ENDS
;	COMDAT _MSVerifierIrpLogInformation_GUID
CONST	SEGMENT
_MSVerifierIrpLogInformation_GUID DD 01e2c2980H
	DW	0f7dbH
	DW	046aaH
	DB	082H
	DB	0eH
	DB	087H
	DB	034H
	DB	0fcH
	DB	0c2H
	DB	01fH
	DB	04cH
CONST	ENDS
;	COMDAT _MSVerifierIrpLogEntry_GUID
CONST	SEGMENT
_MSVerifierIrpLogEntry_GUID DD 045068237H
	DW	0595dH
	DW	04c7dH
	DB	0bdH
	DB	080H
	DB	0f8H
	DB	04aH
	DB	0dcH
	DB	02H
	DB	057H
	DB	0f8H
CONST	ENDS
;	COMDAT _MSDeviceUI_FirmwareRevision_GUID
CONST	SEGMENT
_MSDeviceUI_FirmwareRevision_GUID DD 04504b1d4H
	DW	0c5eeH
	DW	04df6H
	DB	095H
	DB	01fH
	DB	016H
	DB	018H
	DB	0eH
	DB	03dH
	DB	0d8H
	DB	015H
CONST	ENDS
;	COMDAT _MSChangerProblemDeviceError_GUID
CONST	SEGMENT
_MSChangerProblemDeviceError_GUID DD 056b396a8H
	DW	0b95H
	DW	042feH
	DB	0bbH
	DB	0ceH
	DB	0d3H
	DB	06fH
	DB	0daH
	DB	090H
	DB	04fH
	DB	08eH
CONST	ENDS
;	COMDAT _MSChangerProblemEvent_GUID
CONST	SEGMENT
_MSChangerProblemEvent_GUID DD 045db06a5H
	DW	020d5H
	DW	04de3H
	DB	0a3H
	DB	06cH
	DB	03aH
	DB	0b9H
	DB	074H
	DB	060H
	DB	0aH
	DB	04cH
CONST	ENDS
;	COMDAT _MSChangerParameters_GUID
CONST	SEGMENT
_MSChangerParameters_GUID DD 024eb52acH
	DW	07c77H
	DW	0438bH
	DB	0abH
	DB	061H
	DB	0d0H
	DB	024H
	DB	0daH
	DB	0b0H
	DB	0c0H
	DB	03aH
CONST	ENDS
;	COMDAT _MSTapeProblemDeviceError_GUID
CONST	SEGMENT
_MSTapeProblemDeviceError_GUID DD 043ec6b13H
	DW	010bbH
	DW	04bf6H
	DB	0b7H
	DB	016H
	DB	01cH
	DB	01eH
	DB	02fH
	DB	010H
	DB	0bbH
	DB	05fH
CONST	ENDS
;	COMDAT _MSTapeProblemIoError_GUID
CONST	SEGMENT
_MSTapeProblemIoError_GUID DD 058fd29f9H
	DW	0b516H
	DW	040fdH
	DB	087H
	DB	01aH
	DB	07eH
	DB	0e7H
	DB	06dH
	DB	05bH
	DB	0b5H
	DB	03eH
CONST	ENDS
;	COMDAT _MSTapeDriveProblemEvent_GUID
CONST	SEGMENT
_MSTapeDriveProblemEvent_GUID DD 0bc4dd36cH
	DW	0fa66H
	DW	04080H
	DB	087H
	DB	0a0H
	DB	0cH
	DB	059H
	DB	022H
	DB	0ebH
	DB	078H
	DB	087H
CONST	ENDS
;	COMDAT _MSTapeSymbolicName_GUID
CONST	SEGMENT
_MSTapeSymbolicName_GUID DD 03fb828f7H
	DW	0f119H
	DW	04066H
	DB	0b1H
	DB	0e6H
	DB	0dbH
	DB	040H
	DB	07cH
	DB	0e9H
	DB	0deH
	DB	091H
CONST	ENDS
;	COMDAT _MSTapeMediaCapacity_GUID
CONST	SEGMENT
_MSTapeMediaCapacity_GUID DD 08c2147a4H
	DW	0ff29H
	DW	04336H
	DB	0b8H
	DB	0a4H
	DB	022H
	DB	07bH
	DB	054H
	DB	0ccH
	DB	09H
	DB	066H
CONST	ENDS
;	COMDAT _MSTapeDriveParam_GUID
CONST	SEGMENT
_MSTapeDriveParam_GUID DD 0b9a8cfd5H
	DW	08d72H
	DW	047a4H
	DB	0acH
	DB	0eH
	DB	028H
	DB	04aH
	DB	032H
	DB	00H
	DB	0f4H
	DB	0fbH
CONST	ENDS
;	COMDAT _RegisteredGuids_GUID
CONST	SEGMENT
_RegisteredGuids_GUID DD 0e3dff7bdH
	DW	03915H
	DW	011d2H
	DB	091H
	DB	03H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	098H
	DB	0a2H
CONST	ENDS
;	COMDAT _MSRedbook_PerformanceGuid
CONST	SEGMENT
_MSRedbook_PerformanceGuid DD 0b90550e8H
	DW	0ae0aH
	DW	011d1H
	DB	0a5H
	DB	071H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0a3H
	DB	047H
	DB	030H
CONST	ENDS
;	COMDAT _MSRedbook_DriverInformationGuid
CONST	SEGMENT
_MSRedbook_DriverInformationGuid DD 0b90550e7H
	DW	0ae0aH
	DW	011d1H
	DB	0a5H
	DB	071H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0a3H
	DB	047H
	DB	030H
CONST	ENDS
;	COMDAT _MSParallel_DeviceBytesTransferred_GUID
CONST	SEGMENT
_MSParallel_DeviceBytesTransferred_GUID DD 089fef2d6H
	DW	0654bH
	DW	011d2H
	DB	09eH
	DB	015H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	08eH
	DB	0f4H
	DB	081H
CONST	ENDS
;	COMDAT _MSParallel_AllocFreeCounts_GUID
CONST	SEGMENT
_MSParallel_AllocFreeCounts_GUID DD 04bbb69eaH
	DW	06853H
	DW	011d2H
	DB	08eH
	DB	0ceH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	08eH
	DB	0f4H
	DB	081H
CONST	ENDS
;	COMDAT _MSSerial_CommProperties_GUID
CONST	SEGMENT
_MSSerial_CommProperties_GUID DD 08209ec2aH
	DW	02d6bH
	DW	011d2H
	DB	0baH
	DB	049H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSSerial_PerformanceInformation_GUID
CONST	SEGMENT
_MSSerial_PerformanceInformation_GUID DD 056415accH
	DW	0b16dH
	DW	011d1H
	DB	0bdH
	DB	098H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	0beH
	DB	02dH
CONST	ENDS
;	COMDAT _MSSerial_HardwareConfiguration_GUID
CONST	SEGMENT
_MSSerial_HardwareConfiguration_GUID DD 0270b9b86H
	DW	0b16dH
	DW	011d1H
	DB	0bdH
	DB	098H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	0beH
	DB	02dH
CONST	ENDS
;	COMDAT _MSSerial_CommInfo_GUID
CONST	SEGMENT
_MSSerial_CommInfo_GUID DD 0edb16a62H
	DW	0b16cH
	DW	011d1H
	DB	0bdH
	DB	098H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	0beH
	DB	02dH
CONST	ENDS
;	COMDAT _MSSerial_PortName_GUID
CONST	SEGMENT
_MSSerial_PortName_GUID DD 0a0ec11a8H
	DW	0b16cH
	DW	011d1H
	DB	0bdH
	DB	098H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	0beH
	DB	02dH
CONST	ENDS
;	COMDAT _MSIde_PortDeviceInfo_GUID
CONST	SEGMENT
_MSIde_PortDeviceInfo_GUID DD 053f5630fH
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _MSStorageDriver_ScsiInfoExceptions_GUID
CONST	SEGMENT
_MSStorageDriver_ScsiInfoExceptions_GUID DD 01101d829H
	DW	0167bH
	DW	04ebfH
	DB	0acH
	DB	0aeH
	DB	028H
	DB	0caH
	DB	0b7H
	DB	0c3H
	DB	048H
	DB	02H
CONST	ENDS
;	COMDAT _MSStorageDriver_FailurePredictFunction_GUID
CONST	SEGMENT
_MSStorageDriver_FailurePredictFunction_GUID DD 078ebc105H
	DW	04cf9H
	DW	011d2H
	DB	0baH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSStorageDriver_FailurePredictEvent_GUID
CONST	SEGMENT
_MSStorageDriver_FailurePredictEvent_GUID DD 078ebc104H
	DW	04cf9H
	DW	011d2H
	DB	0baH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSStorageDriver_FailurePredictThresholds_GUID
CONST	SEGMENT
_MSStorageDriver_FailurePredictThresholds_GUID DD 0dae10783H
	DW	0cc31H
	DW	04d2aH
	DB	08aH
	DB	0fH
	DB	086H
	DB	01cH
	DB	04H
	DB	07H
	DB	07aH
	DB	095H
CONST	ENDS
;	COMDAT _MSStorageDriver_ATAPISmartData_GUID
CONST	SEGMENT
_MSStorageDriver_ATAPISmartData_GUID DD 078ebc103H
	DW	04cf9H
	DW	011d2H
	DB	0baH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSStorageDriver_FailurePredictData_GUID
CONST	SEGMENT
_MSStorageDriver_FailurePredictData_GUID DD 078ebc103H
	DW	04cf9H
	DW	011d2H
	DB	0baH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSStorageDriver_FailurePredictStatus_GUID
CONST	SEGMENT
_MSStorageDriver_FailurePredictStatus_GUID DD 078ebc102H
	DW	04cf9H
	DW	011d2H
	DB	0baH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSDiskDriver_Performance_GUID
CONST	SEGMENT
_MSDiskDriver_Performance_GUID DD 0bdd865d1H
	DW	0d7c1H
	DW	011d0H
	DB	0a5H
	DB	01H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSDiskDriver_PerformanceData_GUID
CONST	SEGMENT
_MSDiskDriver_PerformanceData_GUID DD 0bdd865d2H
	DW	0d7c1H
	DW	011d0H
	DB	0a5H
	DB	01H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSDiskDriver_Geometry_GUID
CONST	SEGMENT
_MSDiskDriver_Geometry_GUID DD 025007f51H
	DW	057c2H
	DW	011d1H
	DB	0a5H
	DB	028H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSAcpi_ThermalZoneTemperature_GUID
CONST	SEGMENT
_MSAcpi_ThermalZoneTemperature_GUID DD 0a1bc18c0H
	DW	0a7c8H
	DW	011d1H
	DB	0bfH
	DB	03cH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSAgp_Information_GUID
CONST	SEGMENT
_MSAgp_Information_GUID DD 08c27fbedH
	DW	01c7bH
	DW	047e4H
	DB	0a6H
	DB	049H
	DB	0eH
	DB	038H
	DB	09dH
	DB	03aH
	DB	0daH
	DB	04fH
CONST	ENDS
;	COMDAT _MSKeyboard_ClassInformation_GUID
CONST	SEGMENT
_MSKeyboard_ClassInformation_GUID DD 04731f899H
	DW	071cbH
	DW	011d1H
	DB	0a5H
	DB	02cH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSMouse_ClassInformation_GUID
CONST	SEGMENT
_MSMouse_ClassInformation_GUID DD 04731f89bH
	DW	071cbH
	DW	011d1H
	DB	0a5H
	DB	02cH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSMouse_PortInformation_GUID
CONST	SEGMENT
_MSMouse_PortInformation_GUID DD 04731f89cH
	DW	071cbH
	DW	011d1H
	DB	0a5H
	DB	02cH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSKeyboard_ExtendedID_GUID
CONST	SEGMENT
_MSKeyboard_ExtendedID_GUID DD 06ac4e23dH
	DW	0a950H
	DW	04518H
	DB	08bH
	DB	02bH
	DB	0aaH
	DB	04dH
	DB	0cdH
	DB	05fH
	DB	0e1H
	DB	04aH
CONST	ENDS
;	COMDAT _MSKeyboard_PortInformation_GUID
CONST	SEGMENT
_MSKeyboard_PortInformation_GUID DD 04731f89aH
	DW	071cbH
	DW	011d1H
	DB	0a5H
	DB	02cH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11LinkQuality_GUID
CONST	SEGMENT
_MSNdis_StatusDot11LinkQuality_GUID DD 0a3285184H
	DW	0ea99H
	DW	048edH
	DB	082H
	DB	05eH
	DB	0a4H
	DB	026H
	DB	0b1H
	DB	01cH
	DB	027H
	DB	054H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11PhyStateChange_GUID
CONST	SEGMENT
_MSNdis_StatusDot11PhyStateChange_GUID DD 0deb45316H
	DW	071b5H
	DW	04736H
	DB	0bdH
	DB	0efH
	DB	0aH
	DB	09eH
	DB	09fH
	DB	04eH
	DB	062H
	DB	0dcH
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11PmkidCandidateList_GUID
CONST	SEGMENT
_MSNdis_StatusDot11PmkidCandidateList_GUID DD 026d8b8f6H
	DW	0db82H
	DW	049ebH
	DB	08bH
	DB	0f3H
	DB	04cH
	DB	013H
	DB	0eH
	DB	0f0H
	DB	069H
	DB	050H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11TkipmicFailure_GUID
CONST	SEGMENT
_MSNdis_StatusDot11TkipmicFailure_GUID DD 0442c2ae4H
	DW	09bc5H
	DW	04b90H
	DB	0a8H
	DB	089H
	DB	045H
	DB	05eH
	DB	0f2H
	DB	020H
	DB	0f4H
	DB	0eeH
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11Disassociation_GUID
CONST	SEGMENT
_MSNdis_StatusDot11Disassociation_GUID DD 03fbeb6fcH
	DW	0fe2H
	DW	043fdH
	DB	0b2H
	DB	0adH
	DB	0bdH
	DB	099H
	DB	0b5H
	DB	0f9H
	DB	03eH
	DB	013H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11RoamingCompletion_GUID
CONST	SEGMENT
_MSNdis_StatusDot11RoamingCompletion_GUID DD 0dd9d47d1H
	DW	0282bH
	DW	041e4H
	DB	0b9H
	DB	024H
	DB	066H
	DB	036H
	DB	088H
	DB	017H
	DB	0fcH
	DB	0d3H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11RoamingStart_GUID
CONST	SEGMENT
_MSNdis_StatusDot11RoamingStart_GUID DD 0b2412d0dH
	DW	026c8H
	DW	04f4eH
	DB	093H
	DB	0dfH
	DB	0f7H
	DB	0b7H
	DB	05H
	DB	0a0H
	DB	0b4H
	DB	033H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11ConnectionCompletion_GUID
CONST	SEGMENT
_MSNdis_StatusDot11ConnectionCompletion_GUID DD 096efd9c9H
	DW	07f1bH
	DW	04a89H
	DB	0bcH
	DB	04H
	DB	03eH
	DB	09eH
	DB	027H
	DB	017H
	DB	065H
	DB	0f1H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11ConnectionStart_GUID
CONST	SEGMENT
_MSNdis_StatusDot11ConnectionStart_GUID DD 07b74299dH
	DW	0998fH
	DW	04454H
	DB	0adH
	DB	08H
	DB	0c5H
	DB	0afH
	DB	028H
	DB	057H
	DB	06dH
	DB	01bH
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11AssociationCompletion_GUID
CONST	SEGMENT
_MSNdis_StatusDot11AssociationCompletion_GUID DD 0458bbea7H
	DW	045a4H
	DW	04ae2H
	DB	0b1H
	DB	076H
	DB	0e5H
	DB	01fH
	DB	096H
	DB	0fcH
	DB	05H
	DB	068H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11AssociationStart_GUID
CONST	SEGMENT
_MSNdis_StatusDot11AssociationStart_GUID DD 03927843bH
	DW	06980H
	DW	04b48H
	DB	0b1H
	DB	05bH
	DB	04dH
	DB	0e5H
	DB	09H
	DB	077H
	DB	0acH
	DB	040H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11MPDUMaxLengthChange_GUID
CONST	SEGMENT
_MSNdis_StatusDot11MPDUMaxLengthChange_GUID DD 01d6560ecH
	DW	08e48H
	DW	04a3eH
	DB	09fH
	DB	0d5H
	DB	0a0H
	DB	01bH
	DB	069H
	DB	08dH
	DB	0b6H
	DB	0c5H
CONST	ENDS
;	COMDAT _MSNdis_StatusDot11ScanConfirm_GUID
CONST	SEGMENT
_MSNdis_StatusDot11ScanConfirm_GUID DD 08500591eH
	DW	0a0c7H
	DW	04efbH
	DB	093H
	DB	042H
	DB	0b6H
	DB	074H
	DB	0b0H
	DB	02H
	DB	0cbH
	DB	0e6H
CONST	ENDS
;	COMDAT _MSNdis_StatusMediaSpecificIndicationEx_GUID
CONST	SEGMENT
_MSNdis_StatusMediaSpecificIndicationEx_GUID DD 0aaacfca7H
	DW	0954aH
	DW	04632H
	DB	0a1H
	DB	06eH
	DB	0a8H
	DB	0a6H
	DB	037H
	DB	093H
	DB	0a9H
	DB	0e5H
CONST	ENDS
;	COMDAT _MSNdis_StatusPortState_GUID
CONST	SEGMENT
_MSNdis_StatusPortState_GUID DD 01dac0dfeH
	DW	043e5H
	DW	044b7H
	DB	0b7H
	DB	059H
	DB	07bH
	DB	0f4H
	DB	06dH
	DB	0e3H
	DB	02eH
	DB	081H
CONST	ENDS
;	COMDAT _MSNdis_StatusLinkState_GUID
CONST	SEGMENT
_MSNdis_StatusLinkState_GUID DD 064c6f797H
	DW	0878cH
	DW	04311H
	DB	092H
	DB	046H
	DB	065H
	DB	0dbH
	DB	0a8H
	DB	09cH
	DB	03aH
	DB	061H
CONST	ENDS
;	COMDAT _MSNdis_StatusOperationalStatus_GUID
CONST	SEGMENT
_MSNdis_StatusOperationalStatus_GUID DD 0f917b663H
	DW	0845eH
	DW	04d3dH
	DB	0b6H
	DB	0d4H
	DB	015H
	DB	0ebH
	DB	027H
	DB	0afH
	DB	081H
	DB	0c5H
CONST	ENDS
;	COMDAT _MSNdis_StatusNetworkChange_GUID
CONST	SEGMENT
_MSNdis_StatusNetworkChange_GUID DD 0ca8a56f9H
	DW	0ce81H
	DW	040e6H
	DB	0a7H
	DB	0fH
	DB	0a0H
	DB	067H
	DB	0a4H
	DB	076H
	DB	0e9H
	DB	0e9H
CONST	ENDS
;	COMDAT _MSNdis_StatusPacketFilterChange_GUID
CONST	SEGMENT
_MSNdis_StatusPacketFilterChange_GUID DD 0d47c5407H
	DW	02e75H
	DW	046ddH
	DB	081H
	DB	046H
	DB	01dH
	DB	07eH
	DB	0d2H
	DB	0d6H
	DB	0abH
	DB	01dH
CONST	ENDS
;	COMDAT _MSNdis_StatusTaskOffloadChange_GUID
CONST	SEGMENT
_MSNdis_StatusTaskOffloadChange_GUID DD 045049fc6H
	DW	054d8H
	DW	040c8H
	DB	09cH
	DB	03dH
	DB	0b0H
	DB	011H
	DB	0c4H
	DB	0e7H
	DB	015H
	DB	0bcH
CONST	ENDS
;	COMDAT _MSNdis_StatusDevicePowerOff_GUID
CONST	SEGMENT
_MSNdis_StatusDevicePowerOff_GUID DD 081bc8189H
	DW	0b026H
	DW	046abH
	DB	064H
	DB	0b9H
	DB	0f1H
	DB	082H
	DB	0e3H
	DB	042H
	DB	093H
	DB	04eH
CONST	ENDS
;	COMDAT _MSNdis_StatusDevicePowerOn_GUID
CONST	SEGMENT
_MSNdis_StatusDevicePowerOn_GUID DD 05f81cfd0H
	DW	0f046H
	DW	04342H
	DB	061H
	DB	0afH
	DB	089H
	DB	05aH
	DB	0ceH
	DB	0daH
	DB	0efH
	DB	0d9H
CONST	ENDS
;	COMDAT _MSNdis_StatusProtocolUnbind_GUID
CONST	SEGMENT
_MSNdis_StatusProtocolUnbind_GUID DD 06e3ce1ecH
	DW	0b1f3H
	DW	011d0H
	DB	0d7H
	DB	08dH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_StatusProtocolBind_GUID
CONST	SEGMENT
_MSNdis_StatusProtocolBind_GUID DD 05413531cH
	DW	0b1f3H
	DW	011d0H
	DB	0d7H
	DB	08dH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_StatusLinkSpeedChange_GUID
CONST	SEGMENT
_MSNdis_StatusLinkSpeedChange_GUID DD 0981f2d85H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_StatusMediaSpecificIndication_GUID
CONST	SEGMENT
_MSNdis_StatusMediaSpecificIndication_GUID DD 0981f2d84H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_StatusMediaDisconnect_GUID
CONST	SEGMENT
_MSNdis_StatusMediaDisconnect_GUID DD 0981f2d7eH
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_StatusMediaConnect_GUID
CONST	SEGMENT
_MSNdis_StatusMediaConnect_GUID DD 0981f2d7dH
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_StatusResetEnd_GUID
CONST	SEGMENT
_MSNdis_StatusResetEnd_GUID DD 0981f2d77H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_StatusResetStart_GUID
CONST	SEGMENT
_MSNdis_StatusResetStart_GUID DD 0981f2d76H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_80211_ReloadDefaults_GUID
CONST	SEGMENT
_MSNdis_80211_ReloadDefaults_GUID DD 0748b14e8H
	DW	032eeH
	DW	04425H
	DB	0b9H
	DB	01bH
	DB	0c9H
	DB	084H
	DB	08cH
	DB	058H
	DB	0b5H
	DB	05aH
CONST	ENDS
;	COMDAT _MSNdis_80211_WEPStatus_GUID
CONST	SEGMENT
_MSNdis_80211_WEPStatus_GUID DD 0b027a21fH
	DW	03cfaH
	DW	04125H
	DB	080H
	DB	0bH
	DB	03fH
	DB	07aH
	DB	018H
	DB	0fdH
	DB	0dcH
	DB	0dcH
CONST	ENDS
;	COMDAT _MSNdis_80211_PrivacyFilter_GUID
CONST	SEGMENT
_MSNdis_80211_PrivacyFilter_GUID DD 06733c4e9H
	DW	04792H
	DW	011d4H
	DB	097H
	DB	0f1H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_AuthenticationMode_GUID
CONST	SEGMENT
_MSNdis_80211_AuthenticationMode_GUID DD 043920a24H
	DW	02129H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_BssIdListScan_GUID
CONST	SEGMENT
_MSNdis_80211_BssIdListScan_GUID DD 0d9e01e1H
	DW	0ba70H
	DW	011d4H
	DB	0b6H
	DB	075H
	DB	00H
	DB	020H
	DB	048H
	DB	057H
	DB	03H
	DB	037H
CONST	ENDS
;	COMDAT _MSNdis_80211_Disassociate_GUID
CONST	SEGMENT
_MSNdis_80211_Disassociate_GUID DD 043671f40H
	DW	02129H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_RemoveWEP_GUID
CONST	SEGMENT
_MSNdis_80211_RemoveWEP_GUID DD 0433c345cH
	DW	02129H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_AddWEP_GUID
CONST	SEGMENT
_MSNdis_80211_AddWEP_GUID DD 04307bff0H
	DW	02129H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_Statistics_GUID
CONST	SEGMENT
_MSNdis_80211_Statistics_GUID DD 042bb73b0H
	DW	02129H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_Configuration_GUID
CONST	SEGMENT
_MSNdis_80211_Configuration_GUID DD 04a4df982H
	DW	02068H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_DesiredDataRates_GUID
CONST	SEGMENT
_MSNdis_80211_DesiredDataRates_GUID DD 0452ee08eH
	DW	02536H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_DataRates_GUID
CONST	SEGMENT
_MSNdis_80211_DataRates_GUID DD 049db8722H
	DW	02068H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_TransmitAntennaSelected_GUID
CONST	SEGMENT
_MSNdis_80211_TransmitAntennaSelected_GUID DD 01dbb74aH
	DW	02064H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_ReceiveAntennaSelected_GUID
CONST	SEGMENT
_MSNdis_80211_ReceiveAntennaSelected_GUID DD 01ac07a2H
	DW	02064H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_NumberOfAntennas_GUID
CONST	SEGMENT
_MSNdis_80211_NumberOfAntennas_GUID DD 01779336H
	DW	02064H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_RTSThreshold_GUID
CONST	SEGMENT
_MSNdis_80211_RTSThreshold_GUID DD 0134d07eH
	DW	02064H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_FragmentationThreshold_GUID
CONST	SEGMENT
_MSNdis_80211_FragmentationThreshold_GUID DD 069aaa7c4H
	DW	02062H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_InfrastructureMode_GUID
CONST	SEGMENT
_MSNdis_80211_InfrastructureMode_GUID DD 0697d5a7eH
	DW	02062H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_BSSIList_GUID
CONST	SEGMENT
_MSNdis_80211_BSSIList_GUID DD 069526f9aH
	DW	02062H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_WLanBssId_GUID
CONST	SEGMENT
_MSNdis_80211_WLanBssId_GUID DD 06929e718H
	DW	02062H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_ConfigurationInfo_GUID
CONST	SEGMENT
_MSNdis_80211_ConfigurationInfo_GUID DD 0220c16fcH
	DW	0b9a8H
	DW	011d4H
	DB	0b6H
	DB	075H
	DB	00H
	DB	020H
	DB	048H
	DB	057H
	DB	03H
	DB	037H
CONST	ENDS
;	COMDAT _MSNdis_80211_ConfigurationFH_GUID
CONST	SEGMENT
_MSNdis_80211_ConfigurationFH_GUID DD 04a800b8cH
	DW	02068H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_NetworkInfrastructure_GUID
CONST	SEGMENT
_MSNdis_80211_NetworkInfrastructure_GUID DD 034e1fa48H
	DW	0b9b6H
	DW	011d4H
	DB	0b6H
	DB	075H
	DB	00H
	DB	020H
	DB	048H
	DB	057H
	DB	03H
	DB	037H
CONST	ENDS
;	COMDAT _MSNdis_80211_ReceivedSignalStrengthEventTrigger_GUID
CONST	SEGMENT
_MSNdis_80211_ReceivedSignalStrengthEventTrigger_GUID DD 0155689b8H
	DW	02053H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_ReceivedSignalStrength_GUID
CONST	SEGMENT
_MSNdis_80211_ReceivedSignalStrength_GUID DD 01507db16H
	DW	02053H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_TransmitPowerLevel_GUID
CONST	SEGMENT
_MSNdis_80211_TransmitPowerLevel_GUID DD 011e6ba76H
	DW	02053H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_PowerMode_GUID
CONST	SEGMENT
_MSNdis_80211_PowerMode_GUID DD 085be837cH
	DW	02041H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_NetworkTypeInUse_GUID
CONST	SEGMENT
_MSNdis_80211_NetworkTypeInUse_GUID DD 0857e2326H
	DW	02041H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_NetworkTypesSupported_GUID
CONST	SEGMENT
_MSNdis_80211_NetworkTypesSupported_GUID DD 08531d6e6H
	DW	02041H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_NetworkType_GUID
CONST	SEGMENT
_MSNdis_80211_NetworkType_GUID DD 0e779ab61H
	DW	0b9abH
	DW	011d4H
	DB	0b6H
	DB	075H
	DB	00H
	DB	020H
	DB	048H
	DB	057H
	DB	03H
	DB	037H
CONST	ENDS
;	COMDAT _MSNdis_80211_ServiceSetIdentifier_GUID
CONST	SEGMENT
_MSNdis_80211_ServiceSetIdentifier_GUID DD 07d2a90eaH
	DW	02041H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_80211_BaseServiceSetIdentifier_GUID
CONST	SEGMENT
_MSNdis_80211_BaseServiceSetIdentifier_GUID DD 02504b6c2H
	DW	01fa5H
	DW	011d4H
	DB	097H
	DB	0ebH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	079H
	DB	0c4H
	DB	03H
CONST	ENDS
;	COMDAT _MSNdis_TcpConnectionOffloadHardwareConfig_GUID
CONST	SEGMENT
_MSNdis_TcpConnectionOffloadHardwareConfig_GUID DD 08ce71f2cH
	DW	0d63aH
	DW	04390H
	DB	0a4H
	DB	087H
	DB	018H
	DB	0faH
	DB	047H
	DB	026H
	DB	02cH
	DB	0ebH
CONST	ENDS
;	COMDAT _MSNdis_TcpConnectionOffloadCurrentConfig_GUID
CONST	SEGMENT
_MSNdis_TcpConnectionOffloadCurrentConfig_GUID DD 02ee6aef1H
	DW	0851H
	DW	0458bH
	DB	0bfH
	DB	0dH
	DB	079H
	DB	023H
	DB	043H
	DB	0d1H
	DB	0cdH
	DB	0e1H
CONST	ENDS
;	COMDAT _MSNdis_SetTcpOffloadParameters_GUID
CONST	SEGMENT
_MSNdis_SetTcpOffloadParameters_GUID DD 08ead9a22H
	DW	07f69H
	DW	04bc6H
	DB	094H
	DB	09aH
	DB	0c8H
	DB	018H
	DB	07bH
	DB	07H
	DB	04eH
	DB	061H
CONST	ENDS
;	COMDAT _MSNdis_TcpOffloadHardwareConfig_GUID
CONST	SEGMENT
_MSNdis_TcpOffloadHardwareConfig_GUID DD 0cd5f1102H
	DW	0590fH
	DW	04adaH
	DB	0abH
	DB	065H
	DB	05bH
	DB	031H
	DB	0b1H
	DB	0dcH
	DB	01H
	DB	072H
CONST	ENDS
;	COMDAT _MSNdis_TcpOffloadCurrentConfig_GUID
CONST	SEGMENT
_MSNdis_TcpOffloadCurrentConfig_GUID DD 068542fedH
	DW	05c74H
	DW	0461eH
	DB	089H
	DB	034H
	DB	091H
	DB	0c6H
	DB	0f9H
	DB	0c6H
	DB	09H
	DB	060H
CONST	ENDS
;	COMDAT _MSNdis_EnumerateAdapterEx_GUID
CONST	SEGMENT
_MSNdis_EnumerateAdapterEx_GUID DD 016716917H
	DW	04306H
	DW	04be4H
	DB	09bH
	DB	05aH
	DB	038H
	DB	09H
	DB	0aeH
	DB	044H
	DB	0b1H
	DB	025H
CONST	ENDS
;	COMDAT _MSNdis_QueryPciDeviceCustomProperty_GUID
CONST	SEGMENT
_MSNdis_QueryPciDeviceCustomProperty_GUID DD 0aa39f5abH
	DW	0e260H
	DW	04d01H
	DB	082H
	DB	0b0H
	DB	0b7H
	DB	037H
	DB	0c8H
	DB	080H
	DB	0eaH
	DB	05H
CONST	ENDS
;	COMDAT _MSNdis_SetPortParameters_GUID
CONST	SEGMENT
_MSNdis_SetPortParameters_GUID DD 0aab6ac31H
	DW	086fbH
	DW	048fbH
	DB	08bH
	DB	048H
	DB	063H
	DB	0dbH
	DB	023H
	DB	05aH
	DB	0ceH
	DB	016H
CONST	ENDS
;	COMDAT _MSNdis_EnumeratePorts_GUID
CONST	SEGMENT
_MSNdis_EnumeratePorts_GUID DD 0f1d6abe8H
	DW	015e4H
	DW	04407H
	DB	081H
	DB	0b7H
	DB	06bH
	DB	083H
	DB	0cH
	DB	077H
	DB	07cH
	DB	0d9H
CONST	ENDS
;	COMDAT _MSNdis_QueryPortState_GUID
CONST	SEGMENT
_MSNdis_QueryPortState_GUID DD 06fbf2a5fH
	DW	08b8fH
	DW	04920H
	DB	081H
	DB	043H
	DB	0e6H
	DB	0c4H
	DB	060H
	DB	0f5H
	DB	025H
	DB	024H
CONST	ENDS
;	COMDAT _MSNdis_QueryStatisticsInfo_GUID
CONST	SEGMENT
_MSNdis_QueryStatisticsInfo_GUID DD 0368c45b5H
	DW	0c129H
	DW	043c1H
	DB	093H
	DB	09eH
	DB	07eH
	DB	0dcH
	DB	02dH
	DB	07fH
	DB	0e6H
	DB	021H
CONST	ENDS
;	COMDAT _MSNdis_SetLinkParameters_GUID
CONST	SEGMENT
_MSNdis_SetLinkParameters_GUID DD 08c7d3579H
	DW	0252bH
	DW	04614H
	DB	082H
	DB	0c5H
	DB	0a6H
	DB	050H
	DB	0daH
	DB	0a1H
	DB	050H
	DB	049H
CONST	ENDS
;	COMDAT _MSNdis_SetInterruptModeration_GUID
CONST	SEGMENT
_MSNdis_SetInterruptModeration_GUID DD 0d789adfaH
	DW	09c56H
	DW	0433bH
	DB	0adH
	DB	01H
	DB	075H
	DB	074H
	DB	0f3H
	DB	0ceH
	DB	0dbH
	DB	0e9H
CONST	ENDS
;	COMDAT _MSNdis_QueryInterruptModeration_GUID
CONST	SEGMENT
_MSNdis_QueryInterruptModeration_GUID DD 0d9c8eea5H
	DW	0f16eH
	DW	0467cH
	DB	084H
	DB	0d5H
	DB	063H
	DB	045H
	DB	0a2H
	DB	02cH
	DB	0e2H
	DB	013H
CONST	ENDS
;	COMDAT _MSNdis_LinkState_GUID
CONST	SEGMENT
_MSNdis_LinkState_GUID DD 0ba1f4c14H
	DW	0a945H
	DW	04762H
	DB	0b9H
	DB	016H
	DB	0bH
	DB	055H
	DB	015H
	DB	0b6H
	DB	0f4H
	DB	03aH
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpConnectionOffload_GUID
CONST	SEGMENT
_MSNdis_WmiTcpConnectionOffload_GUID DD 093cfcd3fH
	DW	06228H
	DW	0455cH
	DB	090H
	DB	05eH
	DB	03aH
	DB	0b8H
	DB	0aH
	DB	02fH
	DB	0f0H
	DB	090H
CONST	ENDS
;	COMDAT _MSNdis_TcpOffloadParameters_GUID
CONST	SEGMENT
_MSNdis_TcpOffloadParameters_GUID DD 043fe82d8H
	DW	03468H
	DW	0497eH
	DB	09dH
	DB	0cfH
	DB	0f8H
	DB	0ffH
	DB	0c0H
	DB	013H
	DB	037H
	DB	044H
CONST	ENDS
;	COMDAT _MSNdis_WmiOffload_GUID
CONST	SEGMENT
_MSNdis_WmiOffload_GUID DD 07a877086H
	DW	02204H
	DW	04a8aH
	DB	092H
	DB	0a4H
	DB	0e3H
	DB	0e8H
	DB	0abH
	DB	062H
	DB	066H
	DB	029H
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpLargeSendOffloadV2_GUID
CONST	SEGMENT
_MSNdis_WmiTcpLargeSendOffloadV2_GUID DD 0592977c2H
	DW	0cfbeH
	DW	0462cH
	DB	0b5H
	DB	0cfH
	DB	01aH
	DB	076H
	DB	079H
	DB	0feH
	DB	01cH
	DB	0baH
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpLargeSendOffloadV2_IPv6_GUID
CONST	SEGMENT
_MSNdis_WmiTcpLargeSendOffloadV2_IPv6_GUID DD 0a7a9597cH
	DW	02f8eH
	DW	0410bH
	DB	09bH
	DB	0b3H
	DB	05cH
	DB	03aH
	DB	050H
	DB	079H
	DB	02bH
	DB	0fcH
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpLargeSendOffloadV2_IPv4_GUID
CONST	SEGMENT
_MSNdis_WmiTcpLargeSendOffloadV2_IPv4_GUID DD 08823d030H
	DW	0fa30H
	DW	04b73H
	DB	0b3H
	DB	039H
	DB	0dbH
	DB	019H
	DB	020H
	DB	07fH
	DB	0dH
	DB	081H
CONST	ENDS
;	COMDAT _MSNdis_WmiIPSecOffloadV1_GUID
CONST	SEGMENT
_MSNdis_WmiIPSecOffloadV1_GUID DD 04ec63447H
	DW	02238H
	DW	043a7H
	DB	0acH
	DB	033H
	DB	011H
	DB	0c7H
	DB	0ccH
	DB	07dH
	DB	086H
	DB	065H
CONST	ENDS
;	COMDAT _MSNdis_WmiIPSecOffloadV1_IPv4ESP_GUID
CONST	SEGMENT
_MSNdis_WmiIPSecOffloadV1_IPv4ESP_GUID DD 086522023H
	DW	04536H
	DW	04b58H
	DB	0a1H
	DB	0f4H
	DB	025H
	DB	038H
	DB	094H
	DB	01aH
	DB	0ceH
	DB	043H
CONST	ENDS
;	COMDAT _MSNdis_WmiIPSecOffloadV1_IPv4AH_GUID
CONST	SEGMENT
_MSNdis_WmiIPSecOffloadV1_IPv4AH_GUID DD 029bacfddH
	DW	0f063H
	DW	048d8H
	DB	095H
	DB	02cH
	DB	0d3H
	DB	0dcH
	DB	093H
	DB	030H
	DB	0fH
	DB	015H
CONST	ENDS
;	COMDAT _MSNdis_WmiIPSecOffloadV1_Supported_GUID
CONST	SEGMENT
_MSNdis_WmiIPSecOffloadV1_Supported_GUID DD 0f86676b9H
	DW	0d9faH
	DW	04d26H
	DB	095H
	DB	0ceH
	DB	0bfH
	DB	0bcH
	DB	077H
	DB	0d8H
	DB	05H
	DB	096H
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpIpChecksumOffload_GUID
CONST	SEGMENT
_MSNdis_WmiTcpIpChecksumOffload_GUID DD 0189d4015H
	DW	01b25H
	DW	04d8eH
	DB	0a4H
	DB	0a9H
	DB	0f9H
	DB	0ebH
	DB	0a8H
	DB	021H
	DB	097H
	DB	0c7H
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_GUID
CONST	SEGMENT
_MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_GUID DD 0b9760e75H
	DW	06662H
	DW	049e4H
	DB	0aaH
	DB	06cH
	DB	0f0H
	DB	028H
	DB	0beH
	DB	0feH
	DB	0c8H
	DB	0eeH
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_GUID
CONST	SEGMENT
_MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_GUID DD 0d63d537aH
	DW	059c1H
	DW	04faeH
	DB	08fH
	DB	09bH
	DB	0cdH
	DB	09fH
	DB	0bbH
	DB	0ecH
	DB	0b8H
	DB	05aH
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpLargeSendOffloadV1_GUID
CONST	SEGMENT
_MSNdis_WmiTcpLargeSendOffloadV1_GUID DD 0b9e4e2f9H
	DW	0ee89H
	DW	04756H
	DB	0b0H
	DB	057H
	DB	038H
	DB	0f9H
	DB	0d9H
	DB	0b5H
	DB	09aH
	DB	092H
CONST	ENDS
;	COMDAT _MSNdis_WmiTcpLargeSendOffloadV1_IPv4_GUID
CONST	SEGMENT
_MSNdis_WmiTcpLargeSendOffloadV1_IPv4_GUID DD 0d7673b11H
	DW	0e892H
	DW	04a9dH
	DB	08bH
	DB	0d8H
	DB	076H
	DB	01fH
	DB	0f2H
	DB	056H
	DB	0edH
	DB	0d9H
CONST	ENDS
;	COMDAT _MSNdis_PciDeviceProperty_GUID
CONST	SEGMENT
_MSNdis_PciDeviceProperty_GUID DD 0573f70fH
	DW	0ded8H
	DW	0401cH
	DB	08bH
	DB	056H
	DB	0a6H
	DB	02bH
	DB	0b5H
	DB	028H
	DB	0c0H
	DB	0e2H
CONST	ENDS
;	COMDAT _MSNdis_PortArray_GUID
CONST	SEGMENT
_MSNdis_PortArray_GUID DD 0fee8708H
	DW	0df65H
	DW	0456eH
	DB	0b4H
	DB	0caH
	DB	0faH
	DB	062H
	DB	032H
	DB	066H
	DB	0a1H
	DB	02aH
CONST	ENDS
;	COMDAT _MSNdis_PortChar_GUID
CONST	SEGMENT
_MSNdis_PortChar_GUID DD 0f5b7d202H
	DW	0e594H
	DW	04aa3H
	DB	0beH
	DB	043H
	DB	049H
	DB	076H
	DB	083H
	DB	03cH
	DB	078H
	DB	040H
CONST	ENDS
;	COMDAT _MSNdis_PortAuthParameters_GUID
CONST	SEGMENT
_MSNdis_PortAuthParameters_GUID DD 05c3bda24H
	DW	08b64H
	DW	04829H
	DB	0a5H
	DB	087H
	DB	08cH
	DB	0e7H
	DB	019H
	DB	015H
	DB	02fH
	DB	0e2H
CONST	ENDS
;	COMDAT _MSNdis_PortStateData_GUID
CONST	SEGMENT
_MSNdis_PortStateData_GUID DD 08feae2c6H
	DW	0ee28H
	DW	0469fH
	DB	08bH
	DB	05dH
	DB	09fH
	DB	074H
	DB	03bH
	DB	0abH
	DB	021H
	DB	0aaH
CONST	ENDS
;	COMDAT _MSNdis_StatisticsInfo_GUID
CONST	SEGMENT
_MSNdis_StatisticsInfo_GUID DD 08ecc74e1H
	DW	0ba85H
	DW	0482eH
	DB	0afH
	DB	0afH
	DB	0b4H
	DB	0f8H
	DB	0b0H
	DB	087H
	DB	0c0H
	DB	06bH
CONST	ENDS
;	COMDAT _MSNdis_InterruptModerationParameters_GUID
CONST	SEGMENT
_MSNdis_InterruptModerationParameters_GUID DD 09f58643H
	DW	031fbH
	DW	045b5H
	DB	085H
	DB	02bH
	DB	09H
	DB	0b4H
	DB	0d3H
	DB	0ffH
	DB	037H
	DB	065H
CONST	ENDS
;	COMDAT _MSNdis_LinkParameters_GUID
CONST	SEGMENT
_MSNdis_LinkParameters_GUID DD 029380131H
	DW	0a312H
	DW	04400H
	DB	0beH
	DB	0cH
	DB	053H
	DB	087H
	DB	07aH
	DB	041H
	DB	0c4H
	DB	065H
CONST	ENDS
;	COMDAT _MSNdis_LinkStateData_GUID
CONST	SEGMENT
_MSNdis_LinkStateData_GUID DD 05b26b94fH
	DW	0272H
	DW	04d4cH
	DB	087H
	DB	044H
	DB	0bdH
	DB	084H
	DB	0beH
	DB	042H
	DB	01fH
	DB	03bH
CONST	ENDS
;	COMDAT _MSNdis_WmiEnumAdapter_GUID
CONST	SEGMENT
_MSNdis_WmiEnumAdapter_GUID DD 0e7001b59H
	DW	0c3d6H
	DW	04537H
	DB	0b4H
	DB	0eH
	DB	0a1H
	DB	063H
	DB	0d5H
	DB	016H
	DB	0e4H
	DB	0a3H
CONST	ENDS
;	COMDAT _MSNdis_WmiOutputInfo_GUID
CONST	SEGMENT
_MSNdis_WmiOutputInfo_GUID DD 07510bb9dH
	DW	0df70H
	DW	04f7eH
	DB	0baH
	DB	07H
	DB	0e2H
	DB	09dH
	DB	033H
	DB	0bH
	DB	03cH
	DB	0c5H
CONST	ENDS
;	COMDAT _MSNdis_WmiSetHeader_GUID
CONST	SEGMENT
_MSNdis_WmiSetHeader_GUID DD 03b5605d8H
	DW	01aafH
	DW	04ff6H
	DB	085H
	DB	0b9H
	DB	0bcH
	DB	05fH
	DB	0b9H
	DB	073H
	DB	0dcH
	DB	054H
CONST	ENDS
;	COMDAT _MSNdis_WmiMethodHeader_GUID
CONST	SEGMENT
_MSNdis_WmiMethodHeader_GUID DD 0e3eac9ddH
	DW	02fd3H
	DW	04963H
	DB	0bfH
	DB	0fdH
	DB	0b4H
	DB	069H
	DB	028H
	DB	088H
	DB	0c0H
	DB	0d4H
CONST	ENDS
;	COMDAT _MSNdis_ObjectHeader_GUID
CONST	SEGMENT
_MSNdis_ObjectHeader_GUID DD 02b1831b2H
	DW	02216H
	DW	04edeH
	DB	0a4H
	DB	069H
	DB	09fH
	DB	0e3H
	DB	0ddH
	DB	06dH
	DB	05aH
	DB	07eH
CONST	ENDS
;	COMDAT _MSNdis_FddiLConnectionState_GUID
CONST	SEGMENT
_MSNdis_FddiLConnectionState_GUID DD 0acf14045H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiLemRejects_GUID
CONST	SEGMENT
_MSNdis_FddiLemRejects_GUID DD 0acf14044H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiLctFailures_GUID
CONST	SEGMENT
_MSNdis_FddiLctFailures_GUID DD 0acf14043H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiRingManagmentState_GUID
CONST	SEGMENT
_MSNdis_FddiRingManagmentState_GUID DD 0acf14042H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiFramesLost_GUID
CONST	SEGMENT
_MSNdis_FddiFramesLost_GUID DD 0acf14041H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiFrameErrors_GUID
CONST	SEGMENT
_MSNdis_FddiFrameErrors_GUID DD 0acf14040H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiDownstreamNodeLong_GUID
CONST	SEGMENT
_MSNdis_FddiDownstreamNodeLong_GUID DD 0acf1403fH
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiUpstreamNodeLong_GUID
CONST	SEGMENT
_MSNdis_FddiUpstreamNodeLong_GUID DD 0acf1403eH
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiAttachmentType_GUID
CONST	SEGMENT
_MSNdis_FddiAttachmentType_GUID DD 0acf1403dH
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiShortMaximumListSize_GUID
CONST	SEGMENT
_MSNdis_FddiShortMaximumListSize_GUID DD 0acf1403cH
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiShortMulticastList_GUID
CONST	SEGMENT
_MSNdis_FddiShortMulticastList_GUID DD 0acf1403bH
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiShortCurrentAddress_GUID
CONST	SEGMENT
_MSNdis_FddiShortCurrentAddress_GUID DD 0acf1403aH
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiShortPermanentAddress_GUID
CONST	SEGMENT
_MSNdis_FddiShortPermanentAddress_GUID DD 0acf14039H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiLongMaximumListSize_GUID
CONST	SEGMENT
_MSNdis_FddiLongMaximumListSize_GUID DD 0acf14038H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiLongMulticastList_GUID
CONST	SEGMENT
_MSNdis_FddiLongMulticastList_GUID DD 0acf14037H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiLongCurrentAddress_GUID
CONST	SEGMENT
_MSNdis_FddiLongCurrentAddress_GUID DD 0acf14036H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_FddiLongPermanentAddress_GUID
CONST	SEGMENT
_MSNdis_FddiLongPermanentAddress_GUID DD 0acf14035H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingLostFrames_GUID
CONST	SEGMENT
_MSNdis_TokenRingLostFrames_GUID DD 0acf14034H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingLineErrors_GUID
CONST	SEGMENT
_MSNdis_TokenRingLineErrors_GUID DD 0acf14033H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingCurrentRingState_GUID
CONST	SEGMENT
_MSNdis_TokenRingCurrentRingState_GUID DD 0acf14032H
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingCurrentRingStatus_GUID
CONST	SEGMENT
_MSNdis_TokenRingCurrentRingStatus_GUID DD 0890a36ecH
	DW	0a61cH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingLastOpenStatus_GUID
CONST	SEGMENT
_MSNdis_TokenRingLastOpenStatus_GUID DD 04479570bH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingCurrentGroup_GUID
CONST	SEGMENT
_MSNdis_TokenRingCurrentGroup_GUID DD 04479570aH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingCurrentFunctional_GUID
CONST	SEGMENT
_MSNdis_TokenRingCurrentFunctional_GUID DD 044795709H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingCurrentAddress_GUID
CONST	SEGMENT
_MSNdis_TokenRingCurrentAddress_GUID DD 044795708H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TokenRingPermanentAddress_GUID
CONST	SEGMENT
_MSNdis_TokenRingPermanentAddress_GUID DD 044795707H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetMoreTransmitCollisions_GUID
CONST	SEGMENT
_MSNdis_EthernetMoreTransmitCollisions_GUID DD 044795706H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetOneTransmitCollision_GUID
CONST	SEGMENT
_MSNdis_EthernetOneTransmitCollision_GUID DD 044795705H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetReceiveErrorAlignment_GUID
CONST	SEGMENT
_MSNdis_EthernetReceiveErrorAlignment_GUID DD 044795704H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetMacOptions_GUID
CONST	SEGMENT
_MSNdis_EthernetMacOptions_GUID DD 044795703H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetMaximumMulticastListSize_GUID
CONST	SEGMENT
_MSNdis_EthernetMaximumMulticastListSize_GUID DD 044795702H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetMulticastList_GUID
CONST	SEGMENT
_MSNdis_EthernetMulticastList_GUID DD 044795701H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetCurrentAddress_GUID
CONST	SEGMENT
_MSNdis_EthernetCurrentAddress_GUID DD 044795700H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EthernetPermanentAddress_GUID
CONST	SEGMENT
_MSNdis_EthernetPermanentAddress_GUID DD 0447956ffH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmReceiveCellsDropped_GUID
CONST	SEGMENT
_MSNdis_AtmReceiveCellsDropped_GUID DD 0a21480cH
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmTransmitCellsOk_GUID
CONST	SEGMENT
_MSNdis_AtmTransmitCellsOk_GUID DD 0a21480bH
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmReceiveCellsOk_GUID
CONST	SEGMENT
_MSNdis_AtmReceiveCellsOk_GUID DD 0a21480aH
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmMaxAal5PacketSize_GUID
CONST	SEGMENT
_MSNdis_AtmMaxAal5PacketSize_GUID DD 0791ad191H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmMaxAal34PacketSize_GUID
CONST	SEGMENT
_MSNdis_AtmMaxAal34PacketSize_GUID DD 0791ad1a7H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmMaxAal1PacketSize_GUID
CONST	SEGMENT
_MSNdis_AtmMaxAal1PacketSize_GUID DD 0791ad1a6H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmMaxAal0PacketSize_GUID
CONST	SEGMENT
_MSNdis_AtmMaxAal0PacketSize_GUID DD 0791ad1a5H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmMaxActiveVpiBits_GUID
CONST	SEGMENT
_MSNdis_AtmMaxActiveVpiBits_GUID DD 0791ad1a4H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmMaxActiveVciBits_GUID
CONST	SEGMENT
_MSNdis_AtmMaxActiveVciBits_GUID DD 0791ad1a3H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmMaxActiveVcs_GUID
CONST	SEGMENT
_MSNdis_AtmMaxActiveVcs_GUID DD 0791ad1a2H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmHardwareCurrentAddress_GUID
CONST	SEGMENT
_MSNdis_AtmHardwareCurrentAddress_GUID DD 0791ad1a1H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmSupportedAalTypes_GUID
CONST	SEGMENT
_MSNdis_AtmSupportedAalTypes_GUID DD 0791ad1a0H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmSupportedServiceCategory_GUID
CONST	SEGMENT
_MSNdis_AtmSupportedServiceCategory_GUID DD 0791ad19fH
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_AtmSupportedVcRates_GUID
CONST	SEGMENT
_MSNdis_AtmSupportedVcRates_GUID DD 0791ad19eH
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoReceivePdusNoBuffer_GUID
CONST	SEGMENT
_MSNdis_CoReceivePdusNoBuffer_GUID DD 0a214809H
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoReceivePduErrors_GUID
CONST	SEGMENT
_MSNdis_CoReceivePduErrors_GUID DD 0a214808H
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoTransmitPduErrors_GUID
CONST	SEGMENT
_MSNdis_CoTransmitPduErrors_GUID DD 0a214807H
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoReceivePdusOk_GUID
CONST	SEGMENT
_MSNdis_CoReceivePdusOk_GUID DD 0a214806H
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoTransmitPdusOk_GUID
CONST	SEGMENT
_MSNdis_CoTransmitPdusOk_GUID DD 0a214805H
	DW	0e35fH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoMinimumLinkSpeed_GUID
CONST	SEGMENT
_MSNdis_CoMinimumLinkSpeed_GUID DD 0791ad19dH
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoVendorDriverVersion_GUID
CONST	SEGMENT
_MSNdis_CoVendorDriverVersion_GUID DD 0791ad19cH
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoMediaConnectStatus_GUID
CONST	SEGMENT
_MSNdis_CoMediaConnectStatus_GUID DD 0791ad19bH
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoMacOptions_GUID
CONST	SEGMENT
_MSNdis_CoMacOptions_GUID DD 0791ad19aH
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoDriverVersion_GUID
CONST	SEGMENT
_MSNdis_CoDriverVersion_GUID DD 0791ad198H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoVendorDescription_GUID
CONST	SEGMENT
_MSNdis_CoVendorDescription_GUID DD 0791ad197H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoVendorId_GUID
CONST	SEGMENT
_MSNdis_CoVendorId_GUID DD 0791ad196H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoLinkSpeed_GUID
CONST	SEGMENT
_MSNdis_CoLinkSpeed_GUID DD 0791ad195H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoMediaInUse_GUID
CONST	SEGMENT
_MSNdis_CoMediaInUse_GUID DD 0791ad194H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoMediaSupported_GUID
CONST	SEGMENT
_MSNdis_CoMediaSupported_GUID DD 0791ad193H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CoHardwareStatus_GUID
CONST	SEGMENT
_MSNdis_CoHardwareStatus_GUID DD 0791ad192H
	DW	0e35cH
	DW	011d0H
	DB	096H
	DB	092H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_ReceiveNoBuffer_GUID
CONST	SEGMENT
_MSNdis_ReceiveNoBuffer_GUID DD 0447956feH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_ReceiveError_GUID
CONST	SEGMENT
_MSNdis_ReceiveError_GUID DD 0447956fdH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TransmitsError_GUID
CONST	SEGMENT
_MSNdis_TransmitsError_GUID DD 0447956fcH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_ReceivesOk_GUID
CONST	SEGMENT
_MSNdis_ReceivesOk_GUID DD 0447956fbH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TransmitsOk_GUID
CONST	SEGMENT
_MSNdis_TransmitsOk_GUID DD 0447956faH
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_PhysicalMediumType_GUID
CONST	SEGMENT
_MSNdis_PhysicalMediumType_GUID DD 0418ca16dH
	DW	03937H
	DW	04208H
	DB	094H
	DB	0aH
	DB	0ecH
	DB	061H
	DB	096H
	DB	027H
	DB	080H
	DB	085H
CONST	ENDS
;	COMDAT _MSNdis_VlanIdentifier_GUID
CONST	SEGMENT
_MSNdis_VlanIdentifier_GUID DD 0765dc702H
	DW	0c5e8H
	DW	04b67H
	DB	084H
	DB	03bH
	DB	03fH
	DB	05aH
	DB	04fH
	DB	0f2H
	DB	064H
	DB	08bH
CONST	ENDS
;	COMDAT _MSNdis_VendorDriverVersion_GUID
CONST	SEGMENT
_MSNdis_VendorDriverVersion_GUID DD 0447956f9H
	DW	0a61bH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MaximumSendPackets_GUID
CONST	SEGMENT
_MSNdis_MaximumSendPackets_GUID DD 05ec10367H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MediaConnectStatus_GUID
CONST	SEGMENT
_MSNdis_MediaConnectStatus_GUID DD 05ec10366H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MacOptions_GUID
CONST	SEGMENT
_MSNdis_MacOptions_GUID DD 05ec10365H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MaximumTotalSize_GUID
CONST	SEGMENT
_MSNdis_MaximumTotalSize_GUID DD 05ec10363H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_DriverVersion_GUID
CONST	SEGMENT
_MSNdis_DriverVersion_GUID DD 05ec10362H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CurrentLookahead_GUID
CONST	SEGMENT
_MSNdis_CurrentLookahead_GUID DD 05ec10361H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_CurrentPacketFilter_GUID
CONST	SEGMENT
_MSNdis_CurrentPacketFilter_GUID DD 05ec10360H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_VendorDescription_GUID
CONST	SEGMENT
_MSNdis_VendorDescription_GUID DD 05ec1035fH
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_VendorID_GUID
CONST	SEGMENT
_MSNdis_VendorID_GUID DD 05ec1035eH
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_ReceiveBlockSize_GUID
CONST	SEGMENT
_MSNdis_ReceiveBlockSize_GUID DD 05ec1035dH
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TransmitBlockSize_GUID
CONST	SEGMENT
_MSNdis_TransmitBlockSize_GUID DD 05ec1035cH
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_ReceiveBufferSpace_GUID
CONST	SEGMENT
_MSNdis_ReceiveBufferSpace_GUID DD 05ec1035bH
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_TransmitBufferSpace_GUID
CONST	SEGMENT
_MSNdis_TransmitBufferSpace_GUID DD 05ec1035aH
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_LinkSpeed_GUID
CONST	SEGMENT
_MSNdis_LinkSpeed_GUID DD 05ec10359H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MaximumFrameSize_GUID
CONST	SEGMENT
_MSNdis_MaximumFrameSize_GUID DD 05ec10358H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MaximumLookahead_GUID
CONST	SEGMENT
_MSNdis_MaximumLookahead_GUID DD 05ec10357H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MediaInUse_GUID
CONST	SEGMENT
_MSNdis_MediaInUse_GUID DD 05ec10356H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_MediaSupported_GUID
CONST	SEGMENT
_MSNdis_MediaSupported_GUID DD 05ec10355H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_HardwareStatus_GUID
CONST	SEGMENT
_MSNdis_HardwareStatus_GUID DD 05ec10354H
	DW	0a61aH
	DW	011d0H
	DB	08dH
	DB	0d4H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_DeviceWakeOnMagicPacketOnly_GUID
CONST	SEGMENT
_MSNdis_DeviceWakeOnMagicPacketOnly_GUID DD 0a14f1c97H
	DW	08839H
	DW	04f8aH
	DB	099H
	DB	096H
	DB	0a2H
	DB	089H
	DB	096H
	DB	0ebH
	DB	0bfH
	DB	01dH
CONST	ENDS
;	COMDAT _MSNdis_NotifyFilterArrival_GUID
CONST	SEGMENT
_MSNdis_NotifyFilterArrival_GUID DD 0b6d3c89H
	DW	05917H
	DW	043caH
	DB	0b5H
	DB	078H
	DB	0d0H
	DB	01aH
	DB	079H
	DB	067H
	DB	0c4H
	DB	01cH
CONST	ENDS
;	COMDAT _MSNdis_NotifyFilterRemoval_GUID
CONST	SEGMENT
_MSNdis_NotifyFilterRemoval_GUID DD 01f177cd9H
	DW	05955H
	DW	04721H
	DB	09fH
	DB	06aH
	DB	078H
	DB	0ebH
	DB	0dfH
	DB	0aeH
	DB	0f8H
	DB	089H
CONST	ENDS
;	COMDAT _MSNdis_NotifyVcArrival_GUID
CONST	SEGMENT
_MSNdis_NotifyVcArrival_GUID DD 0182f9e0cH
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_NotifyVcRemoval_GUID
CONST	SEGMENT
_MSNdis_NotifyVcRemoval_GUID DD 0981f2d79H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_NdisEnumerateVc_GUID
CONST	SEGMENT
_MSNdis_NdisEnumerateVc_GUID DD 0981f2d82H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_NotifyAdapterArrival_GUID
CONST	SEGMENT
_MSNdis_NotifyAdapterArrival_GUID DD 0981f2d81H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_NotifyAdapterRemoval_GUID
CONST	SEGMENT
_MSNdis_NotifyAdapterRemoval_GUID DD 0981f2d80H
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_EnumerateAdapter_GUID
CONST	SEGMENT
_MSNdis_EnumerateAdapter_GUID DD 0981f2d7fH
	DW	0b1f3H
	DW	011d0H
	DB	08dH
	DB	0d7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_NetworkLinkSpeed_GUID
CONST	SEGMENT
_MSNdis_NetworkLinkSpeed_GUID DD 060fc6b57H
	DW	0f66H
	DW	011d1H
	DB	096H
	DB	0a7H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c3H
	DB	035H
	DB	08cH
CONST	ENDS
;	COMDAT _MSNdis_NetworkShortAddress_GUID
CONST	SEGMENT
_MSNdis_NetworkShortAddress_GUID DD 0b5bd98b8H
	DW	0201H
	DW	011d1H
	DB	0a5H
	DB	0eH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSNdis_NetworkAddress_GUID
CONST	SEGMENT
_MSNdis_NetworkAddress_GUID DD 0b5bd98b7H
	DW	0201H
	DW	011d1H
	DB	0a5H
	DB	0eH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSPower_DeviceWakeEnable_GUID
CONST	SEGMENT
_MSPower_DeviceWakeEnable_GUID DD 0a9546a82H
	DW	0feb0H
	DW	011d0H
	DB	0bdH
	DB	026H
	DB	00H
	DB	0aaH
	DB	00H
	DB	0b7H
	DB	0b3H
	DB	02aH
CONST	ENDS
;	COMDAT _MSPower_DeviceEnable_GUID
CONST	SEGMENT
_MSPower_DeviceEnable_GUID DD 0827c0a6fH
	DW	0feb0H
	DW	011d0H
	DB	0bdH
	DB	026H
	DB	00H
	DB	0aaH
	DB	00H
	DB	0b7H
	DB	0b3H
	DB	02aH
CONST	ENDS
;	COMDAT _MSMCAInfo_RawCorrectedPlatformEvent_GUID
CONST	SEGMENT
_MSMCAInfo_RawCorrectedPlatformEvent_GUID DD 06b629d5eH
	DW	0e63cH
	DW	048a3H
	DB	09eH
	DB	0bbH
	DB	097H
	DB	042H
	DB	027H
	DB	07H
	DB	052H
	DB	065H
CONST	ENDS
;	COMDAT _MSMCAInfo_RawMCAEvent_GUID
CONST	SEGMENT
_MSMCAInfo_RawMCAEvent_GUID DD 02f1a8a9fH
	DW	07988H
	DW	0457fH
	DB	0a1H
	DB	07aH
	DB	089H
	DB	079H
	DB	0e8H
	DB	020H
	DB	043H
	DB	0c5H
CONST	ENDS
;	COMDAT _MSMCAInfo_RawCMCEvent_GUID
CONST	SEGMENT
_MSMCAInfo_RawCMCEvent_GUID DD 02f1a8a9dH
	DW	07988H
	DW	0457fH
	DB	0a1H
	DB	07aH
	DB	089H
	DB	079H
	DB	0e8H
	DB	020H
	DB	043H
	DB	0c5H
CONST	ENDS
;	COMDAT _MSMCAInfo_RawMCAData_GUID
CONST	SEGMENT
_MSMCAInfo_RawMCAData_GUID DD 023602a8aH
	DW	0daddH
	DW	0462fH
	DB	09aH
	DB	0e5H
	DB	030H
	DB	0faH
	DB	02cH
	DB	037H
	DB	0ddH
	DB	05bH
CONST	ENDS
;	COMDAT _MSMCAInfo_Entry_GUID
CONST	SEGMENT
_MSMCAInfo_Entry_GUID DD 09e77a308H
	DW	06b82H
	DW	04fc1H
	DB	0abH
	DB	041H
	DB	0aH
	DB	055H
	DB	086H
	DB	07cH
	DB	035H
	DB	0c2H
CONST	ENDS
;	COMDAT _MSMCAEvent_MemoryPageRemoved_GUID
CONST	SEGMENT
_MSMCAEvent_MemoryPageRemoved_GUID DD 084e9ddb6H
	DW	0e233H
	DW	04dfcH
	DB	098H
	DB	08cH
	DB	074H
	DB	012H
	DB	0c8H
	DB	075H
	DB	04fH
	DB	0ecH
CONST	ENDS
;	COMDAT _MSMCAEvent_InvalidError_GUID
CONST	SEGMENT
_MSMCAEvent_InvalidError_GUID DD 0477b769bH
	DW	0785cH
	DW	048ddH
	DB	0a0H
	DB	02eH
	DB	057H
	DB	0e0H
	DB	051H
	DB	0beH
	DB	07bH
	DB	085H
CONST	ENDS
;	COMDAT _MSMCAEvent_PlatformSpecificError_GUID
CONST	SEGMENT
_MSMCAEvent_PlatformSpecificError_GUID DD 02d2434aaH
	DW	0ef83H
	DW	04200H
	DB	0baH
	DB	024H
	DB	0deH
	DB	036H
	DB	06cH
	DB	041H
	DB	05fH
	DB	07bH
CONST	ENDS
;	COMDAT _MSMCAEvent_SMBIOSError_GUID
CONST	SEGMENT
_MSMCAEvent_SMBIOSError_GUID DD 04184df1bH
	DW	0edfeH
	DW	0406bH
	DB	0b1H
	DB	072H
	DB	054H
	DB	0c9H
	DB	01fH
	DB	0bdH
	DB	09bH
	DB	0afH
CONST	ENDS
;	COMDAT _MSMCAEvent_SystemEventError_GUID
CONST	SEGMENT
_MSMCAEvent_SystemEventError_GUID DD 0bdba4b12H
	DW	08d00H
	DW	04570H
	DB	0b9H
	DB	0b2H
	DB	03fH
	DB	0deH
	DB	0cfH
	DB	01dH
	DB	056H
	DB	061H
CONST	ENDS
;	COMDAT _MSMCAEvent_PCIComponentError_GUID
CONST	SEGMENT
_MSMCAEvent_PCIComponentError_GUID DD 0805caf4eH
	DW	0336cH
	DW	04eb2H
	DB	08cH
	DB	0cH
	DB	02H
	DB	0f3H
	DB	051H
	DB	0cbH
	DB	0f1H
	DB	03cH
CONST	ENDS
;	COMDAT _MSMCAEvent_PCIBusError_GUID
CONST	SEGMENT
_MSMCAEvent_PCIBusError_GUID DD 0a14a5594H
	DW	025deH
	DW	0410eH
	DB	09bH
	DB	092H
	DB	080H
	DB	0f0H
	DB	080H
	DB	01aH
	DB	0ecH
	DB	07H
CONST	ENDS
;	COMDAT _MSMCAEvent_MemoryError_GUID
CONST	SEGMENT
_MSMCAEvent_MemoryError_GUID DD 0433eea38H
	DW	0c1a7H
	DW	048f1H
	DB	088H
	DB	04fH
	DB	0b6H
	DB	087H
	DB	05fH
	DB	017H
	DB	06cH
	DB	0c7H
CONST	ENDS
;	COMDAT _MSMCAEvent_CPUError_GUID
CONST	SEGMENT
_MSMCAEvent_CPUError_GUID DD 05ce27cdeH
	DW	0d179H
	DW	04c68H
	DB	093H
	DB	07fH
	DB	0a0H
	DB	07bH
	DB	08cH
	DB	0c2H
	DB	0eaH
	DB	039H
CONST	ENDS
;	COMDAT _MSMCAEvent_MemoryHierarchyError_GUID
CONST	SEGMENT
_MSMCAEvent_MemoryHierarchyError_GUID DD 0cede75a0H
	DW	0a77fH
	DW	0452bH
	DB	08fH
	DB	02fH
	DB	054H
	DB	01fH
	DB	092H
	DB	06dH
	DB	0b0H
	DB	0f9H
CONST	ENDS
;	COMDAT _MSMCAEvent_TLBError_GUID
CONST	SEGMENT
_MSMCAEvent_TLBError_GUID DD 0b161eeabH
	DW	0ac03H
	DW	04c2bH
	DB	0aeH
	DB	07aH
	DB	05aH
	DB	037H
	DB	068H
	DB	0f7H
	DB	0eH
	DB	085H
CONST	ENDS
;	COMDAT _MSMCAEvent_BusError_GUID
CONST	SEGMENT
_MSMCAEvent_BusError_GUID DD 01ee17050H
	DW	039H
	DW	040f7H
	DB	09eH
	DB	0adH
	DB	014H
	DB	0adH
	DB	051H
	DB	061H
	DB	02cH
	DB	0b2H
CONST	ENDS
;	COMDAT _MSMCAEvent_Header_GUID
CONST	SEGMENT
_MSMCAEvent_Header_GUID DD 06381c27fH
	DW	0c8faH
	DW	04da7H
	DB	089H
	DB	053H
	DB	0b8H
	DB	068H
	DB	033H
	DB	073H
	DB	06eH
	DB	015H
CONST	ENDS
;	COMDAT _MSMCAEvent_SwitchToCPEPolling_GUID
CONST	SEGMENT
_MSMCAEvent_SwitchToCPEPolling_GUID DD 0d5c870ceH
	DW	04ed0H
	DW	04fdcH
	DB	0bbH
	DB	054H
	DB	08bH
	DB	045H
	DB	02cH
	DB	018H
	DB	079H
	DB	07eH
CONST	ENDS
;	COMDAT _MSMCAEvent_SwitchToCMCPolling_GUID
CONST	SEGMENT
_MSMCAEvent_SwitchToCMCPolling_GUID DD 039c14290H
	DW	0f036H
	DW	04999H
	DB	0b8H
	DB	0a1H
	DB	0b6H
	DB	0f8H
	DB	071H
	DB	0fbH
	DB	032H
	DB	09eH
CONST	ENDS
;	COMDAT _MSSmBios_Sysid1394List_GUID
CONST	SEGMENT
_MSSmBios_Sysid1394List_GUID DD 08f680855H
	DW	0a584H
	DW	011d1H
	DB	0bfH
	DB	038H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSSmBios_Sysid1394_GUID
CONST	SEGMENT
_MSSmBios_Sysid1394_GUID DD 08f680854H
	DW	0a584H
	DW	011d1H
	DB	0bfH
	DB	038H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSSmBios_SysidUUIDList_GUID
CONST	SEGMENT
_MSSmBios_SysidUUIDList_GUID DD 08f680853H
	DW	0a584H
	DW	011d1H
	DB	0bfH
	DB	038H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSSmBios_SysidUUID_GUID
CONST	SEGMENT
_MSSmBios_SysidUUID_GUID DD 08f680852H
	DW	0a584H
	DW	011d1H
	DB	0bfH
	DB	038H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSSmBios_SMBiosEventlog_GUID
CONST	SEGMENT
_MSSmBios_SMBiosEventlog_GUID DD 08f680851H
	DW	0a584H
	DW	011d1H
	DB	0bfH
	DB	038H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSSmBios_RawSMBiosTables_GUID
CONST	SEGMENT
_MSSmBios_RawSMBiosTables_GUID DD 08f680850H
	DW	0a584H
	DW	011d1H
	DB	0bfH
	DB	038H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSAcpiInfo_GUID
CONST	SEGMENT
_MSAcpiInfo_GUID DD 05daf38aeH
	DW	0f6f8H
	DW	04d90H
	DB	081H
	DB	099H
	DB	0ebH
	DB	0deH
	DB	068H
	DB	00H
	DB	0ecH
	DB	03bH
CONST	ENDS
;	COMDAT _MSWmi_GuidRegistrationInfo_GUID
CONST	SEGMENT
_MSWmi_GuidRegistrationInfo_GUID DD 0b48d49a1H
	DW	0e777H
	DW	011d0H
	DB	0a5H
	DB	0cH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSWmi_Guid_GUID
CONST	SEGMENT
_MSWmi_Guid_GUID DD 0f8c60aedH
	DW	0ef8dH
	DW	04f95H
	DB	09eH
	DB	0a8H
	DB	0f0H
	DB	043H
	DB	018H
	DB	0a0H
	DB	0fH
	DB	030H
CONST	ENDS
;	COMDAT _MSWmi_PnPInstanceNames_GUID
CONST	SEGMENT
_MSWmi_PnPInstanceNames_GUID DD 0c7bf35d3H
	DW	0aadbH
	DW	011d1H
	DB	0bfH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSWmi_PnPDeviceId_GUID
CONST	SEGMENT
_MSWmi_PnPDeviceId_GUID DD 0c7bf35d2H
	DW	0aadbH
	DW	011d1H
	DB	0bfH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSWmi_ProviderInfo_GUID
CONST	SEGMENT
_MSWmi_ProviderInfo_GUID DD 0c7bf35d0H
	DW	0aadbH
	DW	011d1H
	DB	0bfH
	DB	04aH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MSWmi_MofData_GUID
CONST	SEGMENT
_MSWmi_MofData_GUID DD 05901221H
	DW	0d566H
	DW	011d1H
	DB	0b2H
	DB	0f0H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	06H
	DB	029H
	DB	010H
CONST	ENDS
;	COMDAT _MOUNTDEV_MOUNTED_DEVICE_GUID
CONST	SEGMENT
_MOUNTDEV_MOUNTED_DEVICE_GUID DD 053f5630dH
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_STORAGEPORT
CONST	SEGMENT
_GUID_DEVINTERFACE_STORAGEPORT DD 02accfe60H
	DW	0c130H
	DW	011d2H
	DB	0b0H
	DB	082H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_CDCHANGER
CONST	SEGMENT
_GUID_DEVINTERFACE_CDCHANGER DD 053f56312H
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_FLOPPY
CONST	SEGMENT
_GUID_DEVINTERFACE_FLOPPY DD 053f56311H
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_MEDIUMCHANGER
CONST	SEGMENT
_GUID_DEVINTERFACE_MEDIUMCHANGER DD 053f56310H
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_VOLUME
CONST	SEGMENT
_GUID_DEVINTERFACE_VOLUME DD 053f5630dH
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_WRITEONCEDISK
CONST	SEGMENT
_GUID_DEVINTERFACE_WRITEONCEDISK DD 053f5630cH
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_TAPE
CONST	SEGMENT
_GUID_DEVINTERFACE_TAPE DD 053f5630bH
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_PARTITION
CONST	SEGMENT
_GUID_DEVINTERFACE_PARTITION DD 053f5630aH
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_CDROM
CONST	SEGMENT
_GUID_DEVINTERFACE_CDROM DD 053f56308H
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _GUID_DEVINTERFACE_DISK
CONST	SEGMENT
_GUID_DEVINTERFACE_DISK DD 053f56307H
	DW	0b6bfH
	DW	011d0H
	DB	094H
	DB	0f2H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	01eH
	DB	0fbH
	DB	08bH
CONST	ENDS
;	COMDAT _PARTITION_MSFT_RECOVERY_GUID
CONST	SEGMENT
_PARTITION_MSFT_RECOVERY_GUID DD 0de94bba4H
	DW	06d1H
	DW	04d40H
	DB	0a1H
	DB	06aH
	DB	0bfH
	DB	0d5H
	DB	01H
	DB	079H
	DB	0d6H
	DB	0acH
CONST	ENDS
;	COMDAT _PARTITION_LDM_DATA_GUID
CONST	SEGMENT
_PARTITION_LDM_DATA_GUID DD 0af9b60a0H
	DW	01431H
	DW	04f62H
	DB	0bcH
	DB	068H
	DB	033H
	DB	011H
	DB	071H
	DB	04aH
	DB	069H
	DB	0adH
CONST	ENDS
;	COMDAT _PARTITION_LDM_METADATA_GUID
CONST	SEGMENT
_PARTITION_LDM_METADATA_GUID DD 05808c8aaH
	DW	07e8fH
	DW	042e0H
	DB	085H
	DB	0d2H
	DB	0e1H
	DB	0e9H
	DB	04H
	DB	034H
	DB	0cfH
	DB	0b3H
CONST	ENDS
;	COMDAT _PARTITION_BASIC_DATA_GUID
CONST	SEGMENT
_PARTITION_BASIC_DATA_GUID DD 0ebd0a0a2H
	DW	0b9e5H
	DW	04433H
	DB	087H
	DB	0c0H
	DB	068H
	DB	0b6H
	DB	0b7H
	DB	026H
	DB	099H
	DB	0c7H
CONST	ENDS
;	COMDAT _PARTITION_MSFT_RESERVED_GUID
CONST	SEGMENT
_PARTITION_MSFT_RESERVED_GUID DD 0e3c9e316H
	DW	0b5cH
	DW	04db8H
	DB	081H
	DB	07dH
	DB	0f9H
	DB	02dH
	DB	0f0H
	DB	02H
	DB	015H
	DB	0aeH
CONST	ENDS
;	COMDAT _PARTITION_SYSTEM_GUID
CONST	SEGMENT
_PARTITION_SYSTEM_GUID DD 0c12a7328H
	DW	0f81fH
	DW	011d2H
	DB	0baH
	DB	04bH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03eH
	DB	0c9H
	DB	03bH
CONST	ENDS
;	COMDAT _PARTITION_ENTRY_UNUSED_GUID
CONST	SEGMENT
_PARTITION_ENTRY_UNUSED_GUID DD 00H
	DW	00H
	DW	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT _PLATFORM_CACHE_SECTION_GUID
CONST	SEGMENT
_PLATFORM_CACHE_SECTION_GUID DD 059a0a229H
	DW	09399H
	DW	04140H
	DB	085H
	DB	0b3H
	DB	06H
	DB	0d4H
	DB	08aH
	DB	09eH
	DB	00H
	DB	060H
CONST	ENDS
;	COMDAT _WHEA_PACKET_SECTION_GUID
CONST	SEGMENT
_WHEA_PACKET_SECTION_GUID DD 0e71254e9H
	DW	0c1b9H
	DW	04940H
	DB	0abH
	DB	076H
	DB	090H
	DB	097H
	DB	03H
	DB	0a4H
	DB	032H
	DB	0fH
CONST	ENDS
;	COMDAT _GENERIC_SECTION_GUID
CONST	SEGMENT
_GENERIC_SECTION_GUID DD 0e71254e8H
	DW	0c1b9H
	DW	04940H
	DB	0abH
	DB	076H
	DB	090H
	DB	097H
	DB	03H
	DB	0a4H
	DB	032H
	DB	0fH
CONST	ENDS
;	COMDAT _NMI_SECTION_GUID
CONST	SEGMENT
_NMI_SECTION_GUID DD 0e71254e7H
	DW	0c1b9H
	DW	04940H
	DB	0abH
	DB	076H
	DB	090H
	DB	097H
	DB	03H
	DB	0a4H
	DB	032H
	DB	0fH
CONST	ENDS
;	COMDAT _PCIX_COMPONENT_SECTION_GUID
CONST	SEGMENT
_PCIX_COMPONENT_SECTION_GUID DD 0e429faf6H
	DW	03cb7H
	DW	011d4H
	DB	0bcH
	DB	0a7H
	DB	00H
	DB	080H
	DB	0c7H
	DB	03cH
	DB	088H
	DB	081H
CONST	ENDS
;	COMDAT _PCIX_BUS_SECTION_GUID
CONST	SEGMENT
_PCIX_BUS_SECTION_GUID DD 0e429faf4H
	DW	03cb7H
	DW	011d4H
	DB	0bcH
	DB	0a7H
	DB	00H
	DB	080H
	DB	0c7H
	DB	03cH
	DB	088H
	DB	081H
CONST	ENDS
;	COMDAT _PCIEXPRESS_SECTION_GUID
CONST	SEGMENT
_PCIEXPRESS_SECTION_GUID DD 098d1e922H
	DW	0d358H
	DW	04d22H
	DB	098H
	DB	0f3H
	DB	0acH
	DB	0adH
	DB	0dcH
	DB	04cH
	DB	03bH
	DB	06H
CONST	ENDS
;	COMDAT _PLATFORM_MEMORY_SECTION_GUID
CONST	SEGMENT
_PLATFORM_MEMORY_SECTION_GUID DD 0e429faf2H
	DW	03cb7H
	DW	011d4H
	DB	0bcH
	DB	0a7H
	DB	00H
	DB	080H
	DB	0c7H
	DB	03cH
	DB	088H
	DB	081H
CONST	ENDS
;	COMDAT _X64_PROCESSOR_SPECIFIC_SECTION_GUID
CONST	SEGMENT
_X64_PROCESSOR_SPECIFIC_SECTION_GUID DD 0390f56d5H
	DW	0ca86H
	DW	04649H
	DB	095H
	DB	0c4H
	DB	073H
	DB	0a4H
	DB	08H
	DB	0aeH
	DB	058H
	DB	034H
CONST	ENDS
;	COMDAT _IA64_PROCESSOR_SPECIFIC_SECTION_GUID
CONST	SEGMENT
_IA64_PROCESSOR_SPECIFIC_SECTION_GUID DD 0e429faf1H
	DW	03cb7H
	DW	011d4H
	DB	0bcH
	DB	0a7H
	DB	00H
	DB	080H
	DB	0c7H
	DB	03cH
	DB	088H
	DB	081H
CONST	ENDS
;	COMDAT _X86_PROCESSOR_SPECIFIC_SECTION_GUID
CONST	SEGMENT
_X86_PROCESSOR_SPECIFIC_SECTION_GUID DD 0dc3ea0b0H
	DW	0a144H
	DW	04797H
	DB	0b9H
	DB	05bH
	DB	053H
	DB	0faH
	DB	024H
	DB	02bH
	DB	06eH
	DB	01dH
CONST	ENDS
;	COMDAT _PROCESSOR_GENERIC_SECTION_GUID
CONST	SEGMENT
_PROCESSOR_GENERIC_SECTION_GUID DD 09876ccadH
	DW	047b4H
	DW	04bdbH
	DB	0b6H
	DB	05eH
	DB	016H
	DB	0f1H
	DB	093H
	DB	0c4H
	DB	0f3H
	DB	0dbH
CONST	ENDS
;	COMDAT _GENERIC_NOTIFY_TYPE_GUID
CONST	SEGMENT
_GENERIC_NOTIFY_TYPE_GUID DD 03e62a467H
	DW	0ab40H
	DW	0409aH
	DB	0a6H
	DB	098H
	DB	0f3H
	DB	062H
	DB	0d4H
	DB	064H
	DB	0b3H
	DB	08fH
CONST	ENDS
;	COMDAT _BOOT_NOTIFY_TYPE_GUID
CONST	SEGMENT
_BOOT_NOTIFY_TYPE_GUID DD 03d61a466H
	DW	0ab40H
	DW	0409aH
	DB	0a6H
	DB	098H
	DB	0f3H
	DB	062H
	DB	0d4H
	DB	064H
	DB	0b3H
	DB	08fH
CONST	ENDS
;	COMDAT _NMI_NOTIFY_TYPE_GUID
CONST	SEGMENT
_NMI_NOTIFY_TYPE_GUID DD 05bad89ffH
	DW	0b7e6H
	DW	042c9H
	DB	081H
	DB	04aH
	DB	0cfH
	DB	024H
	DB	085H
	DB	0d6H
	DB	0e9H
	DB	08aH
CONST	ENDS
;	COMDAT _INIT_NOTIFY_TYPE_GUID
CONST	SEGMENT
_INIT_NOTIFY_TYPE_GUID DD 0cc5263e8H
	DW	09308H
	DW	0454aH
	DB	089H
	DB	0d0H
	DB	034H
	DB	0bH
	DB	0d3H
	DB	09bH
	DB	0c9H
	DB	08eH
CONST	ENDS
;	COMDAT _PCIe_NOTIFY_TYPE_GUID
CONST	SEGMENT
_PCIe_NOTIFY_TYPE_GUID DD 0cf93c01fH
	DW	01a16H
	DW	04dfcH
	DB	0b8H
	DB	0bcH
	DB	09cH
	DB	04dH
	DB	0afH
	DB	067H
	DB	0c1H
	DB	04H
CONST	ENDS
;	COMDAT _MCE_NOTIFY_TYPE_GUID
CONST	SEGMENT
_MCE_NOTIFY_TYPE_GUID DD 0e8f56ffeH
	DW	0919cH
	DW	04cc5H
	DB	0baH
	DB	088H
	DB	065H
	DB	0abH
	DB	0e1H
	DB	049H
	DB	013H
	DB	0bbH
CONST	ENDS
;	COMDAT _CPE_NOTIFY_TYPE_GUID
CONST	SEGMENT
_CPE_NOTIFY_TYPE_GUID DD 04e292f96H
	DW	0d843H
	DW	04a55H
	DB	0a8H
	DB	0c2H
	DB	0d4H
	DB	081H
	DB	0f2H
	DB	07eH
	DB	0beH
	DB	0eeH
CONST	ENDS
;	COMDAT _CMC_NOTIFY_TYPE_GUID
CONST	SEGMENT
_CMC_NOTIFY_TYPE_GUID DD 02dce8bb1H
	DW	0bdd7H
	DW	0450eH
	DB	0b9H
	DB	0adH
	DB	09cH
	DB	0f4H
	DB	0ebH
	DB	0d4H
	DB	0f8H
	DB	090H
CONST	ENDS
;	COMDAT _WHEA_RECORD_CREATOR_GUID
CONST	SEGMENT
_WHEA_RECORD_CREATOR_GUID DD 0f9de0c24H
	DW	0e4dH
	DW	04c87H
	DB	0b4H
	DB	010H
	DB	0f5H
	DB	070H
	DB	01cH
	DB	0abH
	DB	065H
	DB	0c3H
CONST	ENDS
;	COMDAT _GUID_PCIEXPRESS_ASPM_POLICY
CONST	SEGMENT
_GUID_PCIEXPRESS_ASPM_POLICY DD 0ee12f906H
	DW	0d277H
	DW	0404bH
	DB	0b6H
	DB	0daH
	DB	0e5H
	DB	0faH
	DB	01aH
	DB	057H
	DB	06dH
	DB	0f5H
CONST	ENDS
;	COMDAT _GUID_PCIEXPRESS_SETTINGS_SUBGROUP
CONST	SEGMENT
_GUID_PCIEXPRESS_SETTINGS_SUBGROUP DD 0501a4d13H
	DW	042afH
	DW	04429H
	DB	09fH
	DB	0d1H
	DB	0a8H
	DB	021H
	DB	08cH
	DB	026H
	DB	08eH
	DB	020H
CONST	ENDS
;	COMDAT _GUID_APPLAUNCH_BUTTON
CONST	SEGMENT
_GUID_APPLAUNCH_BUTTON DD 01a689231H
	DW	07399H
	DW	04e9aH
	DB	08fH
	DB	099H
	DB	0b7H
	DB	01fH
	DB	099H
	DB	09dH
	DB	0b3H
	DB	0faH
CONST	ENDS
;	COMDAT _GUID_BACKGROUND_TASK_NOTIFICATION
CONST	SEGMENT
_GUID_BACKGROUND_TASK_NOTIFICATION DD 0cf23f240H
	DW	02a54H
	DW	048d8H
	DB	0b1H
	DB	014H
	DB	0deH
	DB	015H
	DB	018H
	DB	0ffH
	DB	05H
	DB	02eH
CONST	ENDS
;	COMDAT _GUID_IDLE_BACKGROUND_TASK
CONST	SEGMENT
_GUID_IDLE_BACKGROUND_TASK DD 0515c31d8H
	DW	0f734H
	DW	0163dH
	DB	0a0H
	DB	0fdH
	DB	011H
	DB	0a0H
	DB	08cH
	DB	091H
	DB	0e8H
	DB	0f1H
CONST	ENDS
;	COMDAT _GUID_BATTERY_PERCENTAGE_REMAINING
CONST	SEGMENT
_GUID_BATTERY_PERCENTAGE_REMAINING DD 0a7ad8041H
	DW	0b45aH
	DW	04caeH
	DB	087H
	DB	0a3H
	DB	0eeH
	DB	0cbH
	DB	0b4H
	DB	068H
	DB	0a9H
	DB	0e1H
CONST	ENDS
;	COMDAT _GUID_LIDSWITCH_STATE_CHANGE
CONST	SEGMENT
_GUID_LIDSWITCH_STATE_CHANGE DD 0ba3e0f4dH
	DW	0b817H
	DW	04094H
	DB	0a2H
	DB	0d1H
	DB	0d5H
	DB	063H
	DB	079H
	DB	0e6H
	DB	0a0H
	DB	0f3H
CONST	ENDS
;	COMDAT _GUID_ACDC_POWER_SOURCE
CONST	SEGMENT
_GUID_ACDC_POWER_SOURCE DD 05d3e9a59H
	DW	0e9d5H
	DW	04b00H
	DB	0a6H
	DB	0bdH
	DB	0ffH
	DB	034H
	DB	0ffH
	DB	051H
	DB	065H
	DB	048H
CONST	ENDS
;	COMDAT _GUID_LOCK_CONSOLE_ON_WAKE
CONST	SEGMENT
_GUID_LOCK_CONSOLE_ON_WAKE DD 0e796bdbH
	DW	0100dH
	DW	047d6H
	DB	0a2H
	DB	0d5H
	DB	0f7H
	DB	0d2H
	DB	0daH
	DB	0a5H
	DB	01fH
	DB	051H
CONST	ENDS
;	COMDAT _GUID_SYSTEM_COOLING_POLICY
CONST	SEGMENT
_GUID_SYSTEM_COOLING_POLICY DD 094d3a615H
	DW	0a899H
	DW	04ac5H
	DB	0aeH
	DB	02bH
	DB	0e4H
	DB	0d8H
	DB	0f6H
	DB	034H
	DB	036H
	DB	07fH
CONST	ENDS
;	COMDAT _GUID_PROCESSOR_PERFSTATE_POLICY
CONST	SEGMENT
_GUID_PROCESSOR_PERFSTATE_POLICY DD 0bbdc3814H
	DW	018e9H
	DW	04463H
	DB	08aH
	DB	055H
	DB	0d1H
	DB	097H
	DB	032H
	DB	07cH
	DB	045H
	DB	0c0H
CONST	ENDS
;	COMDAT _GUID_PROCESSOR_IDLESTATE_POLICY
CONST	SEGMENT
_GUID_PROCESSOR_IDLESTATE_POLICY DD 068f262a7H
	DW	0f621H
	DW	04069H
	DB	0b9H
	DB	0a5H
	DB	048H
	DB	074H
	DB	016H
	DB	09bH
	DB	0e2H
	DB	03cH
CONST	ENDS
;	COMDAT _GUID_PROCESSOR_THROTTLE_MINIMUM
CONST	SEGMENT
_GUID_PROCESSOR_THROTTLE_MINIMUM DD 0893dee8eH
	DW	02befH
	DW	041e0H
	DB	089H
	DB	0c6H
	DB	0b5H
	DB	05dH
	DB	09H
	DB	029H
	DB	096H
	DB	04cH
CONST	ENDS
;	COMDAT _GUID_PROCESSOR_THROTTLE_MAXIMUM
CONST	SEGMENT
_GUID_PROCESSOR_THROTTLE_MAXIMUM DD 0bc5038f7H
	DW	023e0H
	DW	04960H
	DB	096H
	DB	0daH
	DB	033H
	DB	0abH
	DB	0afH
	DB	059H
	DB	035H
	DB	0ecH
CONST	ENDS
;	COMDAT _GUID_PROCESSOR_THROTTLE_POLICY
CONST	SEGMENT
_GUID_PROCESSOR_THROTTLE_POLICY DD 057027304H
	DW	04af6H
	DW	04104H
	DB	092H
	DB	060H
	DB	0e3H
	DB	0d9H
	DB	052H
	DB	048H
	DB	0fcH
	DB	036H
CONST	ENDS
;	COMDAT _GUID_PROCESSOR_SETTINGS_SUBGROUP
CONST	SEGMENT
_GUID_PROCESSOR_SETTINGS_SUBGROUP DD 054533251H
	DW	082beH
	DW	04824H
	DB	096H
	DB	0c1H
	DB	047H
	DB	0b6H
	DB	0bH
	DB	074H
	DB	0dH
	DB	00H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_FLAGS_3
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_FLAGS_3 DD 073613ccfH
	DW	0dbfaH
	DW	04279H
	DB	083H
	DB	056H
	DB	049H
	DB	035H
	DB	0f6H
	DB	0bfH
	DB	062H
	DB	0f3H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_LEVEL_3
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_LEVEL_3 DD 058afd5a6H
	DW	0c2ddH
	DW	047d2H
	DB	09fH
	DB	0bfH
	DB	0efH
	DB	070H
	DB	0ccH
	DB	05cH
	DB	059H
	DB	065H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_ACTION_3
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_ACTION_3 DD 080472613H
	DW	09780H
	DW	0455eH
	DB	0b3H
	DB	08H
	DB	072H
	DB	0d3H
	DB	00H
	DB	03cH
	DB	0f2H
	DB	0f8H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_FLAGS_2
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_FLAGS_2 DD 07fd2f0c4H
	DW	0feb7H
	DW	04da3H
	DB	081H
	DB	017H
	DB	0e3H
	DB	0fbH
	DB	0edH
	DB	0c4H
	DB	065H
	DB	082H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_LEVEL_2
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_LEVEL_2 DD 07a07ca2H
	DW	0adafH
	DW	040d7H
	DB	0b0H
	DB	077H
	DB	053H
	DB	03aH
	DB	0adH
	DB	0edH
	DB	01bH
	DB	0faH
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_ACTION_2
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_ACTION_2 DD 0421cba38H
	DW	01a8eH
	DW	04881H
	DB	0acH
	DB	089H
	DB	0e3H
	DB	03aH
	DB	08bH
	DB	04H
	DB	0ecH
	DB	0e4H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_FLAGS_1
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_FLAGS_1 DD 0bcded951H
	DW	0187bH
	DW	04d05H
	DB	0bcH
	DB	0ccH
	DB	0f7H
	DB	0e5H
	DB	019H
	DB	060H
	DB	0c2H
	DB	058H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_LEVEL_1
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_LEVEL_1 DD 08183ba9aH
	DW	0e910H
	DW	048daH
	DB	087H
	DB	069H
	DB	014H
	DB	0aeH
	DB	06dH
	DB	0c1H
	DB	017H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_ACTION_1
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_ACTION_1 DD 0d8742dcbH
	DW	03e6aH
	DW	04b3cH
	DB	0b3H
	DB	0feH
	DB	037H
	DB	046H
	DB	023H
	DB	0cdH
	DB	0cfH
	DB	06H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_FLAGS_0
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_FLAGS_0 DD 05dbb7c9fH
	DW	038e9H
	DW	040d2H
	DB	097H
	DB	049H
	DB	04fH
	DB	08aH
	DB	0eH
	DB	09fH
	DB	064H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_LEVEL_0
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_LEVEL_0 DD 09a66d8d7H
	DW	04ff7H
	DW	04ef9H
	DB	0b5H
	DB	0a2H
	DB	05aH
	DB	032H
	DB	06cH
	DB	0a2H
	DB	0a4H
	DB	069H
CONST	ENDS
;	COMDAT _GUID_BATTERY_DISCHARGE_ACTION_0
CONST	SEGMENT
_GUID_BATTERY_DISCHARGE_ACTION_0 DD 0637ea02fH
	DW	0bbcbH
	DW	04015H
	DB	08eH
	DB	02cH
	DB	0a1H
	DB	0c7H
	DB	0b9H
	DB	0c0H
	DB	0b5H
	DB	046H
CONST	ENDS
;	COMDAT _GUID_BATTERY_SUBGROUP
CONST	SEGMENT
_GUID_BATTERY_SUBGROUP DD 0e73a048dH
	DW	0bf27H
	DW	04f12H
	DB	097H
	DB	031H
	DB	08bH
	DB	020H
	DB	076H
	DB	0e8H
	DB	089H
	DB	01fH
CONST	ENDS
;	COMDAT _GUID_LIDOPEN_POWERSTATE
CONST	SEGMENT
_GUID_LIDOPEN_POWERSTATE DD 099ff10e7H
	DW	023b1H
	DW	04c07H
	DB	0a9H
	DB	0d1H
	DB	05cH
	DB	032H
	DB	06H
	DB	0d7H
	DB	041H
	DB	0b4H
CONST	ENDS
;	COMDAT _GUID_LIDCLOSE_ACTION_FLAGS
CONST	SEGMENT
_GUID_LIDCLOSE_ACTION_FLAGS DD 097e969acH
	DW	0d6cH
	DW	04d08H
	DB	092H
	DB	07cH
	DB	0d7H
	DB	0bdH
	DB	07aH
	DB	0d7H
	DB	085H
	DB	07bH
CONST	ENDS
;	COMDAT _GUID_LIDCLOSE_ACTION
CONST	SEGMENT
_GUID_LIDCLOSE_ACTION DD 05ca83367H
	DW	06e45H
	DW	0459fH
	DB	0a2H
	DB	07bH
	DB	047H
	DB	06bH
	DB	01dH
	DB	01H
	DB	0c9H
	DB	036H
CONST	ENDS
;	COMDAT _GUID_USERINTERFACEBUTTON_ACTION
CONST	SEGMENT
_GUID_USERINTERFACEBUTTON_ACTION DD 0a7066653H
	DW	08d6cH
	DW	040a8H
	DB	091H
	DB	0eH
	DB	0a1H
	DB	0f5H
	DB	04bH
	DB	084H
	DB	0c7H
	DB	0e5H
CONST	ENDS
;	COMDAT _GUID_SLEEPBUTTON_ACTION_FLAGS
CONST	SEGMENT
_GUID_SLEEPBUTTON_ACTION_FLAGS DD 02a160ab1H
	DW	0b69dH
	DW	04743H
	DB	0b7H
	DB	018H
	DB	0bfH
	DB	014H
	DB	041H
	DB	0d5H
	DB	0e4H
	DB	093H
CONST	ENDS
;	COMDAT _GUID_SLEEPBUTTON_ACTION
CONST	SEGMENT
_GUID_SLEEPBUTTON_ACTION DD 096996bc0H
	DW	0ad50H
	DW	047ecH
	DB	092H
	DB	03bH
	DB	06fH
	DB	041H
	DB	087H
	DB	04dH
	DB	0d9H
	DB	0ebH
CONST	ENDS
;	COMDAT _GUID_POWERBUTTON_ACTION_FLAGS
CONST	SEGMENT
_GUID_POWERBUTTON_ACTION_FLAGS DD 0857e7facH
	DW	034bH
	DW	04704H
	DB	0abH
	DB	0b1H
	DB	0bcH
	DB	0a5H
	DB	04aH
	DB	0a3H
	DB	014H
	DB	078H
CONST	ENDS
;	COMDAT _GUID_POWERBUTTON_ACTION
CONST	SEGMENT
_GUID_POWERBUTTON_ACTION DD 07648efa3H
	DW	0dd9cH
	DW	04e3eH
	DB	0b5H
	DB	066H
	DB	050H
	DB	0f9H
	DB	029H
	DB	038H
	DB	062H
	DB	080H
CONST	ENDS
;	COMDAT _GUID_SYSTEM_BUTTON_SUBGROUP
CONST	SEGMENT
_GUID_SYSTEM_BUTTON_SUBGROUP DD 04f971e89H
	DW	0eebdH
	DW	04455H
	DB	0a8H
	DB	0deH
	DB	09eH
	DB	059H
	DB	04H
	DB	0eH
	DB	073H
	DB	047H
CONST	ENDS
;	COMDAT _GUID_ALLOW_RTC_WAKE
CONST	SEGMENT
_GUID_ALLOW_RTC_WAKE DD 0bd3b718aH
	DW	0680H
	DW	04d9dH
	DB	08aH
	DB	0b2H
	DB	0e1H
	DB	0d2H
	DB	0b4H
	DB	0acH
	DB	080H
	DB	06dH
CONST	ENDS
;	COMDAT _GUID_ALLOW_STANDBY_STATES
CONST	SEGMENT
_GUID_ALLOW_STANDBY_STATES DD 0abfc2519H
	DW	03608H
	DW	04c2aH
	DB	094H
	DB	0eaH
	DB	017H
	DB	01bH
	DB	0eH
	DB	0d5H
	DB	046H
	DB	0abH
CONST	ENDS
;	COMDAT _GUID_ALLOW_AWAYMODE
CONST	SEGMENT
_GUID_ALLOW_AWAYMODE DD 025dfa149H
	DW	05dd1H
	DW	04736H
	DB	0b5H
	DB	0abH
	DB	0e8H
	DB	0a3H
	DB	07bH
	DB	05bH
	DB	081H
	DB	087H
CONST	ENDS
;	COMDAT _GUID_SYSTEM_AWAYMODE
CONST	SEGMENT
_GUID_SYSTEM_AWAYMODE DD 098a7f580H
	DW	01f7H
	DW	048aaH
	DB	09cH
	DB	0fH
	DB	044H
	DB	035H
	DB	02cH
	DB	029H
	DB	0e5H
	DB	0c0H
CONST	ENDS
;	COMDAT _GUID_CRITICAL_POWER_TRANSITION
CONST	SEGMENT
_GUID_CRITICAL_POWER_TRANSITION DD 0b7a27025H
	DW	0e569H
	DW	046c2H
	DB	0a5H
	DB	04H
	DB	02bH
	DB	096H
	DB	0caH
	DB	0d2H
	DB	025H
	DB	0a1H
CONST	ENDS
;	COMDAT _GUID_HIBERNATE_FASTS4_POLICY
CONST	SEGMENT
_GUID_HIBERNATE_FASTS4_POLICY DD 094ac6d29H
	DW	073ceH
	DW	041a6H
	DB	080H
	DB	09fH
	DB	063H
	DB	063H
	DB	0baH
	DB	021H
	DB	0b4H
	DB	07eH
CONST	ENDS
;	COMDAT _GUID_HIBERNATE_TIMEOUT
CONST	SEGMENT
_GUID_HIBERNATE_TIMEOUT DD 09d7815a6H
	DW	07ee4H
	DW	0497eH
	DB	088H
	DB	088H
	DB	051H
	DB	05aH
	DB	05H
	DB	0f0H
	DB	023H
	DB	064H
CONST	ENDS
;	COMDAT _GUID_STANDBY_TIMEOUT
CONST	SEGMENT
_GUID_STANDBY_TIMEOUT DD 029f6c1dbH
	DW	086daH
	DW	048c5H
	DB	09fH
	DB	0dbH
	DB	0f2H
	DB	0b6H
	DB	07bH
	DB	01fH
	DB	044H
	DB	0daH
CONST	ENDS
;	COMDAT _GUID_SLEEP_IDLE_THRESHOLD
CONST	SEGMENT
_GUID_SLEEP_IDLE_THRESHOLD DD 081cd32e0H
	DW	07833H
	DW	044f3H
	DB	087H
	DB	037H
	DB	070H
	DB	081H
	DB	0f3H
	DB	08dH
	DB	01fH
	DB	070H
CONST	ENDS
;	COMDAT _GUID_SLEEP_SUBGROUP
CONST	SEGMENT
_GUID_SLEEP_SUBGROUP DD 0238c9fa8H
	DW	0aadH
	DW	041edH
	DB	083H
	DB	0f4H
	DB	097H
	DB	0beH
	DB	024H
	DB	02cH
	DB	08fH
	DB	020H
CONST	ENDS
;	COMDAT _GUID_DISK_ADAPTIVE_POWERDOWN
CONST	SEGMENT
_GUID_DISK_ADAPTIVE_POWERDOWN DD 0396a32e1H
	DW	0499aH
	DW	040b2H
	DB	091H
	DB	024H
	DB	0a9H
	DB	06aH
	DB	0feH
	DB	070H
	DB	076H
	DB	067H
CONST	ENDS
;	COMDAT _GUID_DISK_POWERDOWN_TIMEOUT
CONST	SEGMENT
_GUID_DISK_POWERDOWN_TIMEOUT DD 06738e2c4H
	DW	0e8a5H
	DW	04a42H
	DB	0b1H
	DB	06aH
	DB	0e0H
	DB	040H
	DB	0e7H
	DB	069H
	DB	075H
	DB	06eH
CONST	ENDS
;	COMDAT _GUID_DISK_SUBGROUP
CONST	SEGMENT
_GUID_DISK_SUBGROUP DD 012ee47H
	DW	09041H
	DW	04b5dH
	DB	09bH
	DB	077H
	DB	053H
	DB	05fH
	DB	0baH
	DB	08bH
	DB	014H
	DB	042H
CONST	ENDS
;	COMDAT _GUID_MONITOR_POWER_ON
CONST	SEGMENT
_GUID_MONITOR_POWER_ON DD 02731015H
	DW	04510H
	DW	04526H
	DB	099H
	DB	0e6H
	DB	0e5H
	DB	0a1H
	DB	07eH
	DB	0bdH
	DB	01aH
	DB	0eaH
CONST	ENDS
;	COMDAT _GUID_VIDEO_ADAPTIVE_POWERDOWN
CONST	SEGMENT
_GUID_VIDEO_ADAPTIVE_POWERDOWN DD 090959d22H
	DW	0d6a1H
	DW	049b9H
	DB	0afH
	DB	093H
	DB	0bcH
	DB	0e8H
	DB	085H
	DB	0adH
	DB	033H
	DB	05bH
CONST	ENDS
;	COMDAT _GUID_VIDEO_POWERDOWN_TIMEOUT
CONST	SEGMENT
_GUID_VIDEO_POWERDOWN_TIMEOUT DD 03c0bc021H
	DW	0c8a8H
	DW	04e07H
	DB	0a9H
	DB	073H
	DB	06bH
	DB	014H
	DB	0cbH
	DB	0cbH
	DB	02bH
	DB	07eH
CONST	ENDS
;	COMDAT _GUID_VIDEO_SUBGROUP
CONST	SEGMENT
_GUID_VIDEO_SUBGROUP DD 07516b95fH
	DW	0f776H
	DW	04464H
	DB	08cH
	DB	053H
	DB	06H
	DB	016H
	DB	07fH
	DB	040H
	DB	0ccH
	DB	099H
CONST	ENDS
;	COMDAT _GUID_ACTIVE_POWERSCHEME
CONST	SEGMENT
_GUID_ACTIVE_POWERSCHEME DD 031f9f286H
	DW	05084H
	DW	042feH
	DB	0b7H
	DB	020H
	DB	02bH
	DB	02H
	DB	064H
	DB	099H
	DB	037H
	DB	063H
CONST	ENDS
;	COMDAT _GUID_POWERSCHEME_PERSONALITY
CONST	SEGMENT
_GUID_POWERSCHEME_PERSONALITY DD 0245d8541H
	DW	03943H
	DW	04422H
	DB	0b0H
	DB	025H
	DB	013H
	DB	0a7H
	DB	084H
	DB	0f6H
	DB	079H
	DB	0b7H
CONST	ENDS
;	COMDAT _ALL_POWERSCHEMES_GUID
CONST	SEGMENT
_ALL_POWERSCHEMES_GUID DD 068a1e95eH
	DW	013eaH
	DW	041e1H
	DB	080H
	DB	011H
	DB	0cH
	DB	049H
	DB	06cH
	DB	0a4H
	DB	090H
	DB	0b0H
CONST	ENDS
;	COMDAT _NO_SUBGROUP_GUID
CONST	SEGMENT
_NO_SUBGROUP_GUID DD 0fea3413eH
	DW	07e05H
	DW	04911H
	DB	09aH
	DB	071H
	DB	070H
	DB	03H
	DB	031H
	DB	0f1H
	DB	0c2H
	DB	094H
CONST	ENDS
;	COMDAT _GUID_TYPICAL_POWER_SAVINGS
CONST	SEGMENT
_GUID_TYPICAL_POWER_SAVINGS DD 0381b4222H
	DW	0f694H
	DW	041f0H
	DB	096H
	DB	085H
	DB	0ffH
	DB	05bH
	DB	0b2H
	DB	060H
	DB	0dfH
	DB	02eH
CONST	ENDS
;	COMDAT _GUID_MIN_POWER_SAVINGS
CONST	SEGMENT
_GUID_MIN_POWER_SAVINGS DD 08c5e7fdaH
	DW	0e8bfH
	DW	04a96H
	DB	09aH
	DB	085H
	DB	0a6H
	DB	0e2H
	DB	03aH
	DB	08cH
	DB	063H
	DB	05cH
CONST	ENDS
;	COMDAT _GUID_MAX_POWER_SAVINGS
CONST	SEGMENT
_GUID_MAX_POWER_SAVINGS DD 0a1841308H
	DW	03541H
	DW	04fabH
	DB	0bcH
	DB	081H
	DB	0f7H
	DB	015H
	DB	056H
	DB	0f2H
	DB	0bH
	DB	04aH
CONST	ENDS
PUBLIC	_KeInitializeSpinLock@4
PUBLIC	_BlkMovUnload@4
PUBLIC	_BlkMovAddDevice@8
PUBLIC	_BlkMovDispatchPower@8
PUBLIC	_BlkMovDispatchPnp@8
PUBLIC	_BlkMovShutdownFlush@8
PUBLIC	_BlkMovReadWrite@8
PUBLIC	_BlkMovCreate@8
PUBLIC	_BlkMovSendToNextDriver@8
PUBLIC	_DriverEntry@8
EXTRN	_g_FinalGroup:BYTE
EXTRN	_g_bEnableProtect:DWORD
EXTRN	_g_pMoverData:DWORD
EXTRN	_g_MovingGroup:BYTE
EXTRN	__imp__MmLockPagableDataSection@4:PROC
EXTRN	_g_IrpSpinLock:DWORD
EXTRN	_BlkMovDeviceControl@8:PROC
EXTRN	__imp__RtlCopyUnicodeString@8:PROC
EXTRN	__imp__ExAllocatePoolWithTag@12:PROC
; Function compile flags: /Odtp
;	COMDAT _DriverEntry@8
INIT	SEGMENT
_dispatch$ = -8						; size = 4
_ulIndex$ = -4						; size = 4
_DriverObject$ = 8					; size = 4
_RegistryPath$ = 12					; size = 4
_DriverEntry@8 PROC					; COMDAT
; File f:\tech\blkmover\cur_ver\sys\2000\iomon.c
; Line 75
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 08	 sub	 esp, 8
; Line 84
  00008	8b 45 0c	 mov	 eax, DWORD PTR _RegistryPath$[ebp]
  0000b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0000e	83 c1 02	 add	 ecx, 2
  00011	66 89 0d 02 00
	00 00		 mov	 WORD PTR _DiskPerfRegistryPath+2, cx
; Line 87
  00018	68 44 50 72 66	 push	 1718767684		; 66725044H
  0001d	0f b7 15 02 00
	00 00		 movzx	 edx, WORD PTR _DiskPerfRegistryPath+2
  00024	52		 push	 edx
  00025	6a 01		 push	 1
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExAllocatePoolWithTag@12
  0002d	a3 04 00 00 00	 mov	 DWORD PTR _DiskPerfRegistryPath+4, eax
; Line 88
  00032	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR _DiskPerfRegistryPath+4, 0
  00039	74 11		 je	 SHORT $LN5@DriverEntr
; Line 90
  0003b	8b 45 0c	 mov	 eax, DWORD PTR _RegistryPath$[ebp]
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET _DiskPerfRegistryPath
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlCopyUnicodeString@8
; Line 92
  0004a	eb 12		 jmp	 SHORT $LN4@DriverEntr
$LN5@DriverEntr:
; Line 94
  0004c	66 c7 05 00 00
	00 00 00 00	 mov	 WORD PTR _DiskPerfRegistryPath, 0
; Line 95
  00055	66 c7 05 02 00
	00 00 00 00	 mov	 WORD PTR _DiskPerfRegistryPath+2, 0
$LN4@DriverEntr:
; Line 102
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ulIndex$[ebp], 0
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _DriverObject$[ebp]
  00068	83 c1 38	 add	 ecx, 56			; 00000038H
  0006b	89 4d f8	 mov	 DWORD PTR _dispatch$[ebp], ecx
  0006e	eb 12		 jmp	 SHORT $LN3@DriverEntr
$LN2@DriverEntr:
  00070	8b 55 fc	 mov	 edx, DWORD PTR _ulIndex$[ebp]
  00073	83 c2 01	 add	 edx, 1
  00076	89 55 fc	 mov	 DWORD PTR _ulIndex$[ebp], edx
  00079	8b 45 f8	 mov	 eax, DWORD PTR _dispatch$[ebp]
  0007c	83 c0 04	 add	 eax, 4
  0007f	89 45 f8	 mov	 DWORD PTR _dispatch$[ebp], eax
$LN3@DriverEntr:
  00082	83 7d fc 1b	 cmp	 DWORD PTR _ulIndex$[ebp], 27 ; 0000001bH
  00086	77 0b		 ja	 SHORT $LN1@DriverEntr
; Line 104
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _dispatch$[ebp]
  0008b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET _BlkMovSendToNextDriver@8
; Line 105
  00091	eb dd		 jmp	 SHORT $LN2@DriverEntr
$LN1@DriverEntr:
; Line 112
  00093	8b 55 08	 mov	 edx, DWORD PTR _DriverObject$[ebp]
  00096	c7 42 38 00 00
	00 00		 mov	 DWORD PTR [edx+56], OFFSET _BlkMovCreate@8
; Line 113
  0009d	8b 45 08	 mov	 eax, DWORD PTR _DriverObject$[ebp]
  000a0	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], OFFSET _BlkMovReadWrite@8
; Line 114
  000a7	8b 4d 08	 mov	 ecx, DWORD PTR _DriverObject$[ebp]
  000aa	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], OFFSET _BlkMovReadWrite@8
; Line 115
  000b1	8b 55 08	 mov	 edx, DWORD PTR _DriverObject$[ebp]
  000b4	c7 42 70 00 00
	00 00		 mov	 DWORD PTR [edx+112], OFFSET _BlkMovDeviceControl@8
; Line 118
  000bb	8b 45 08	 mov	 eax, DWORD PTR _DriverObject$[ebp]
  000be	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [eax+120], OFFSET _BlkMovShutdownFlush@8
; Line 119
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _DriverObject$[ebp]
  000c8	c7 41 5c 00 00
	00 00		 mov	 DWORD PTR [ecx+92], OFFSET _BlkMovShutdownFlush@8
; Line 120
  000cf	8b 55 08	 mov	 edx, DWORD PTR _DriverObject$[ebp]
  000d2	c7 82 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+164], OFFSET _BlkMovDispatchPnp@8
; Line 121
  000dc	8b 45 08	 mov	 eax, DWORD PTR _DriverObject$[ebp]
  000df	c7 80 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+144], OFFSET _BlkMovDispatchPower@8
; Line 123
  000e9	8b 4d 08	 mov	 ecx, DWORD PTR _DriverObject$[ebp]
  000ec	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  000ef	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], OFFSET _BlkMovAddDevice@8
; Line 124
  000f6	8b 45 08	 mov	 eax, DWORD PTR _DriverObject$[ebp]
  000f9	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], OFFSET _BlkMovUnload@4
; Line 126
  00100	68 00 00 00 00	 push	 OFFSET _g_IrpSpinLock
  00105	e8 00 00 00 00	 call	 _KeInitializeSpinLock@4
; Line 128
  0010a	68 00 00 00 00	 push	 OFFSET _BlkMovReadWrite@8
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmLockPagableDataSection@4
; Line 130
  00115	68 00 00 00 00	 push	 OFFSET _g_MovingGroup
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmLockPagableDataSection@4
; Line 131
  00120	68 00 00 00 00	 push	 OFFSET _g_pMoverData
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmLockPagableDataSection@4
; Line 132
  0012b	68 00 00 00 00	 push	 OFFSET _g_bEnableProtect
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmLockPagableDataSection@4
; Line 133
  00136	68 00 00 00 00	 push	 OFFSET _g_FinalGroup
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmLockPagableDataSection@4
; Line 134
  00141	33 c0		 xor	 eax, eax
; Line 136
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 08 00	 ret	 8
_DriverEntry@8 ENDP
; Function compile flags: /Odtp
INIT	ENDS
;	COMDAT _KeInitializeSpinLock@4
_TEXT	SEGMENT
_SpinLock$ = 8						; size = 4
_KeInitializeSpinLock@4 PROC				; COMDAT
; File c:\winddk\6000\inc\ddk\wdm.h
; Line 13456
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
; Line 13457
  00005	8b 45 08	 mov	 eax, DWORD PTR _SpinLock$[ebp]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 13458
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
_KeInitializeSpinLock@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	_BlkMovSyncFilterWithTarget@8
EXTRN	_DbgPrint:PROC
EXTRN	__imp__KeGetCurrentIrql@0:PROC
;	COMDAT ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
; File f:\tech\blkmover\cur_ver\sys\2000\iomon.c
text$s	SEGMENT
??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@ DB 'E'
	DB	'X: Pageable code called at IRQL %d', 0aH, 00H ;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _BlkMovSyncFilterWithTarget@8
_TEXT	SEGMENT
_propFlags$ = -4					; size = 4
_FilterDevice$ = 8					; size = 4
_TargetDevice$ = 12					; size = 4
_BlkMovSyncFilterWithTarget@8 PROC			; COMDAT
; Line 149
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
; Line 152
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0000c	0f b6 c0	 movzx	 eax, al
  0000f	83 f8 01	 cmp	 eax, 1
  00012	7e 19		 jle	 SHORT $LN1@BlkMovSync
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0001a	0f b6 c8	 movzx	 ecx, al
  0001d	51		 push	 ecx
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
  00023	e8 00 00 00 00	 call	 _DbgPrint
  00028	83 c4 08	 add	 esp, 8
__annotation$23853:
  0002b	cd 2c		 int	 44			; 0000002cH
$LN1@BlkMovSync:
; Line 159
  0002d	8b 55 0c	 mov	 edx, DWORD PTR _TargetDevice$[ebp]
  00030	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00033	83 e0 00	 and	 eax, 0
  00036	89 45 fc	 mov	 DWORD PTR _propFlags$[ebp], eax
; Line 160
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _FilterDevice$[ebp]
  0003c	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0003f	0b 55 fc	 or	 edx, DWORD PTR _propFlags$[ebp]
  00042	8b 45 08	 mov	 eax, DWORD PTR _FilterDevice$[ebp]
  00045	89 50 1c	 mov	 DWORD PTR [eax+28], edx
; Line 162
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _TargetDevice$[ebp]
  0004b	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0004e	83 e2 07	 and	 edx, 7
  00051	89 55 fc	 mov	 DWORD PTR _propFlags$[ebp], edx
; Line 163
  00054	8b 45 08	 mov	 eax, DWORD PTR _FilterDevice$[ebp]
  00057	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0005a	0b 4d fc	 or	 ecx, DWORD PTR _propFlags$[ebp]
  0005d	8b 55 08	 mov	 edx, DWORD PTR _FilterDevice$[ebp]
  00060	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
; Line 166
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
_BlkMovSyncFilterWithTarget@8 ENDP
_TEXT	ENDS
PUBLIC	_CreateThread@4
PUBLIC	??_C@_0BL@NKEBNMIG@BLKMOVER?3?7BlkMovAddDevice?6?$AA@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
EXTRN	__imp__IoDeleteDevice@4:PROC
EXTRN	__imp__IoAttachDeviceToDeviceStack@8:PROC
EXTRN	__imp__IoCreateDevice@28:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BL@NKEBNMIG@BLKMOVER?3?7BlkMovAddDevice?6?$AA@FNODOBFM@
text$s	SEGMENT
??_C@_0BL@NKEBNMIG@BLKMOVER?3?7BlkMovAddDevice?6?$AA@FNODOBFM@ DB 'BLKMOV'
	DB	'ER:', 09H, 'BlkMovAddDevice', 0aH, 00H	;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _BlkMovAddDevice@8
_TEXT	SEGMENT
_filterDeviceObject$ = -60				; size = 4
_status$ = -36						; size = 4
_deviceExtension$ = -28					; size = 4
_registrationFlag$ = -4					; size = 4
_DriverObject$ = 8					; size = 4
_PhysicalDeviceObject$ = 12				; size = 4
_BlkMovAddDevice@8 PROC					; COMDAT
; Line 173
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 44	 sub	 esp, 68			; 00000044H
; Line 182
  00008	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _registrationFlag$[ebp], 0
; Line 187
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  00015	0f b6 c0	 movzx	 eax, al
  00018	83 f8 01	 cmp	 eax, 1
  0001b	7e 19		 jle	 SHORT $LN4@BlkMovAddD
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  00023	0f b6 c8	 movzx	 ecx, al
  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
  0002c	e8 00 00 00 00	 call	 _DbgPrint
  00031	83 c4 08	 add	 esp, 8
__annotation$23856:
  00034	cd 2c		 int	 44			; 0000002cH
$LN4@BlkMovAddD:
; Line 189
  00036	8b 55 0c	 mov	 edx, DWORD PTR _PhysicalDeviceObject$[ebp]
  00039	83 7a 2c 2d	 cmp	 DWORD PTR [edx+44], 45	; 0000002dH
  0003d	0f 85 c1 00 00
	00		 jne	 $LN3@BlkMovAddD
; Line 195
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NKEBNMIG@BLKMOVER?3?7BlkMovAddDevice?6?$AA@FNODOBFM@
  00048	e8 00 00 00 00	 call	 _DbgPrint
  0004d	83 c4 04	 add	 esp, 4
; Line 203
  00050	8d 45 c4	 lea	 eax, DWORD PTR _filterDeviceObject$[ebp]
  00053	50		 push	 eax
  00054	6a 00		 push	 0
  00056	6a 00		 push	 0
  00058	6a 07		 push	 7
  0005a	6a 00		 push	 0
  0005c	6a 44		 push	 68			; 00000044H
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _DriverObject$[ebp]
  00061	51		 push	 ecx
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoCreateDevice@28
  00068	89 45 dc	 mov	 DWORD PTR _status$[ebp], eax
; Line 205
  0006b	83 7d dc 00	 cmp	 DWORD PTR _status$[ebp], 0
  0006f	7d 08		 jge	 SHORT $LN2@BlkMovAddD
; Line 206
  00071	8b 45 dc	 mov	 eax, DWORD PTR _status$[ebp]
  00074	e9 8d 00 00 00	 jmp	 $LN5@BlkMovAddD
$LN2@BlkMovAddD:
; Line 209
  00079	8b 55 c4	 mov	 edx, DWORD PTR _filterDeviceObject$[ebp]
  0007c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0007f	83 c8 10	 or	 eax, 16			; 00000010H
  00082	8b 4d c4	 mov	 ecx, DWORD PTR _filterDeviceObject$[ebp]
  00085	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 211
  00088	8b 55 c4	 mov	 edx, DWORD PTR _filterDeviceObject$[ebp]
  0008b	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0008e	89 45 e4	 mov	 DWORD PTR _deviceExtension$[ebp], eax
; Line 213
  00091	6a 44		 push	 68			; 00000044H
  00093	6a 00		 push	 0
  00095	8b 4d e4	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 _memset
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 221
  000a1	8b 55 0c	 mov	 edx, DWORD PTR _PhysicalDeviceObject$[ebp]
  000a4	52		 push	 edx
  000a5	8b 45 c4	 mov	 eax, DWORD PTR _filterDeviceObject$[ebp]
  000a8	50		 push	 eax
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoAttachDeviceToDeviceStack@8
  000af	8b 4d e4	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  000b2	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 223
  000b5	8b 55 e4	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  000b8	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  000bc	75 11		 jne	 SHORT $LN1@BlkMovAddD
; Line 225
  000be	8b 45 c4	 mov	 eax, DWORD PTR _filterDeviceObject$[ebp]
  000c1	50		 push	 eax
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoDeleteDevice@4
; Line 226
  000c8	b8 0e 00 00 c0	 mov	 eax, -1073741810	; c000000eH
  000cd	eb 37		 jmp	 SHORT $LN5@BlkMovAddD
$LN1@BlkMovAddD:
; Line 229
  000cf	8b 4d c4	 mov	 ecx, DWORD PTR _filterDeviceObject$[ebp]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 _CreateThread@4
; Line 233
  000d8	8b 55 e4	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  000db	8b 45 c4	 mov	 eax, DWORD PTR _filterDeviceObject$[ebp]
  000de	89 02		 mov	 DWORD PTR [edx], eax
; Line 239
  000e0	8b 4d c4	 mov	 ecx, DWORD PTR _filterDeviceObject$[ebp]
  000e3	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000e6	81 ca 00 20 00
	00		 or	 edx, 8192		; 00002000H
  000ec	8b 45 c4	 mov	 eax, DWORD PTR _filterDeviceObject$[ebp]
  000ef	89 50 1c	 mov	 DWORD PTR [eax+28], edx
; Line 245
  000f2	8b 4d c4	 mov	 ecx, DWORD PTR _filterDeviceObject$[ebp]
  000f5	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000f8	81 e2 7f ff ff
	ff		 and	 edx, -129		; ffffff7fH
  000fe	8b 45 c4	 mov	 eax, DWORD PTR _filterDeviceObject$[ebp]
  00101	89 50 1c	 mov	 DWORD PTR [eax+28], edx
$LN3@BlkMovAddD:
; Line 247
  00104	33 c0		 xor	 eax, eax
$LN5@BlkMovAddD:
; Line 249
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
_BlkMovAddDevice@8 ENDP
_TEXT	ENDS
PUBLIC	_BlkMovForwardIrpSynchronous@8
PUBLIC	??_C@_0DD@PKHDIPLA@BlkMovDispatchPnp?3?5Setting?5?5PAGA@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	??_C@_0GL@DDOOPEPB@BlkMovDispatchPnp?3?5last?5paging?5f@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	??_C@_0DJ@BOMLCJFG@BlkMovDispatchPnp?3?5Processing?5DE@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	_BlkMovStartDevice@8
EXTRN	__imp_@IofCompleteRequest@8:PROC
EXTRN	__imp__KeSetEvent@12:PROC
EXTRN	__imp__KeWaitForSingleObject@20:PROC
;	COMDAT ??_C@_0DD@PKHDIPLA@BlkMovDispatchPnp?3?5Setting?5?5PAGA@FNODOBFM@
text$s	SEGMENT
??_C@_0DD@PKHDIPLA@BlkMovDispatchPnp?3?5Setting?5?5PAGA@FNODOBFM@ DB 'Blk'
	DB	'MovDispatchPnp: Setting  PAGABLE bit for DO %p', 0aH, 00H ;  ?? ::FNODOBFM::`string'
text$s	ENDS
;	COMDAT ??_C@_0GL@DDOOPEPB@BlkMovDispatchPnp?3?5last?5paging?5f@FNODOBFM@
text$s	SEGMENT
??_C@_0GL@DDOOPEPB@BlkMovDispatchPnp?3?5last?5paging?5f@FNODOBFM@ DB 'Blk'
	DB	'MovDispatchPnp: last paging file removed but DO_POWER_INRUSH '
	DB	'set, so not setting PAGABLE bit for DO %p', 0aH, 00H ;  ?? ::FNODOBFM::`string'
text$s	ENDS
;	COMDAT ??_C@_0DJ@BOMLCJFG@BlkMovDispatchPnp?3?5Processing?5DE@FNODOBFM@
text$s	SEGMENT
??_C@_0DJ@BOMLCJFG@BlkMovDispatchPnp?3?5Processing?5DE@FNODOBFM@ DB 'BlkM'
	DB	'ovDispatchPnp: Processing DEVICE_USAGE_NOTIFICATION', 0aH, 00H ;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _BlkMovDispatchPnp@8
_TEXT	SEGMENT
tv77 = -28						; size = 4
_setPagable$22962 = -21					; size = 1
_irpStack$22960 = -20					; size = 4
_irpSp$ = -12						; size = 4
_status$ = -8						; size = 4
_deviceExtension$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovDispatchPnp@8 PROC				; COMDAT
; Line 257
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 1c	 sub	 esp, 28			; 0000001cH
; Line 258
  00008	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0000b	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0000e	89 4d f4	 mov	 DWORD PTR _irpSp$[ebp], ecx
; Line 262
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  00017	0f b6 d0	 movzx	 edx, al
  0001a	83 fa 01	 cmp	 edx, 1
  0001d	7e 19		 jle	 SHORT $LN19@BlkMovDisp
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  00025	0f b6 c0	 movzx	 eax, al
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
  0002e	e8 00 00 00 00	 call	 _DbgPrint
  00033	83 c4 08	 add	 esp, 8
__annotation$23860:
  00036	cd 2c		 int	 44			; 0000002cH
$LN19@BlkMovDisp:
; Line 264
  00038	8b 4d f4	 mov	 ecx, DWORD PTR _irpSp$[ebp]
  0003b	0f b6 51 01	 movzx	 edx, BYTE PTR [ecx+1]
  0003f	89 55 e4	 mov	 DWORD PTR tv77[ebp], edx
  00042	83 7d e4 16	 cmp	 DWORD PTR tv77[ebp], 22	; 00000016H
  00046	0f 87 a2 01 00
	00		 ja	 $LN1@BlkMovDisp
  0004c	8b 45 e4	 mov	 eax, DWORD PTR tv77[ebp]
  0004f	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN23@BlkMovDisp[eax]
  00056	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN24@BlkMovDisp[ecx*4]
$LN16@BlkMovDisp:
; Line 271
  0005d	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00060	52		 push	 edx
  00061	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _BlkMovStartDevice@8
  0006a	89 45 f8	 mov	 DWORD PTR _status$[ebp], eax
; Line 272
  0006d	e9 8b 01 00 00	 jmp	 $LN17@BlkMovDisp
$LN15@BlkMovDisp:
; Line 288
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@BOMLCJFG@BlkMovDispatchPnp?3?5Processing?5DE@FNODOBFM@
  00077	e8 00 00 00 00	 call	 _DbgPrint
  0007c	83 c4 04	 add	 esp, 4
; Line 289
  0007f	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00082	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  00085	89 55 ec	 mov	 DWORD PTR _irpStack$22960[ebp], edx
; Line 291
  00088	8b 45 ec	 mov	 eax, DWORD PTR _irpStack$22960[ebp]
  0008b	83 78 08 01	 cmp	 DWORD PTR [eax+8], 1
  0008f	74 15		 je	 SHORT $LN14@BlkMovDisp
; Line 293
  00091	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00094	51		 push	 ecx
  00095	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  00098	52		 push	 edx
  00099	e8 00 00 00 00	 call	 _BlkMovSendToNextDriver@8
  0009e	89 45 f8	 mov	 DWORD PTR _status$[ebp], eax
; Line 294
  000a1	e9 57 01 00 00	 jmp	 $LN17@BlkMovDisp
$LN14@BlkMovDisp:
; Line 297
  000a6	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  000a9	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000ac	89 4d fc	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 305
  000af	6a 00		 push	 0
  000b1	6a 00		 push	 0
  000b3	6a 00		 push	 0
  000b5	6a 00		 push	 0
  000b7	8b 55 fc	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  000ba	83 c2 0c	 add	 edx, 12			; 0000000cH
  000bd	52		 push	 edx
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeWaitForSingleObject@20
  000c4	89 45 f8	 mov	 DWORD PTR _status$[ebp], eax
; Line 310
  000c7	c6 45 eb 00	 mov	 BYTE PTR _setPagable$22962[ebp], 0
; Line 312
  000cb	8b 45 ec	 mov	 eax, DWORD PTR _irpStack$22960[ebp]
  000ce	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  000d2	85 c9		 test	 ecx, ecx
  000d4	75 51		 jne	 SHORT $LN13@BlkMovDisp
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  000d9	83 7a 1c 01	 cmp	 DWORD PTR [edx+28], 1
  000dd	75 48		 jne	 SHORT $LN13@BlkMovDisp
; Line 319
  000df	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  000e2	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000e5	81 e1 00 40 00
	00		 and	 ecx, 16384		; 00004000H
  000eb	74 13		 je	 SHORT $LN12@BlkMovDisp
; Line 324
  000ed	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  000f0	52		 push	 edx
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0GL@DDOOPEPB@BlkMovDispatchPnp?3?5last?5paging?5f@FNODOBFM@
  000f6	e8 00 00 00 00	 call	 _DbgPrint
  000fb	83 c4 08	 add	 esp, 8
; Line 326
  000fe	eb 27		 jmp	 SHORT $LN13@BlkMovDisp
$LN12@BlkMovDisp:
; Line 329
  00100	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00103	50		 push	 eax
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PKHDIPLA@BlkMovDispatchPnp?3?5Setting?5?5PAGA@FNODOBFM@
  00109	e8 00 00 00 00	 call	 _DbgPrint
  0010e	83 c4 08	 add	 esp, 8
; Line 330
  00111	8b 4d 08	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  00114	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00117	81 ca 00 20 00
	00		 or	 edx, 8192		; 00002000H
  0011d	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00120	89 50 1c	 mov	 DWORD PTR [eax+28], edx
; Line 331
  00123	c6 45 eb 01	 mov	 BYTE PTR _setPagable$22962[ebp], 1
$LN13@BlkMovDisp:
; Line 340
  00127	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0012a	51		 push	 ecx
  0012b	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  0012e	52		 push	 edx
  0012f	e8 00 00 00 00	 call	 _BlkMovForwardIrpSynchronous@8
  00134	89 45 f8	 mov	 DWORD PTR _status$[ebp], eax
; Line 348
  00137	83 7d f8 00	 cmp	 DWORD PTR _status$[ebp], 0
  0013b	7c 51		 jl	 SHORT $LN10@BlkMovDisp
; Line 352
  0013d	8b 45 ec	 mov	 eax, DWORD PTR _irpStack$22960[ebp]
  00140	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00144	85 c9		 test	 ecx, ecx
  00146	74 11		 je	 SHORT $LN9@BlkMovDisp
  00148	8b 55 fc	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  0014b	83 c2 1c	 add	 edx, 28			; 0000001cH
  0014e	b8 01 00 00 00	 mov	 eax, 1
  00153	f0 0f c1 02	 lock	  xadd	 DWORD PTR [edx], eax
  00157	eb 0d		 jmp	 SHORT $LN8@BlkMovDisp
$LN9@BlkMovDisp:
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  0015c	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0015f	83 ca ff	 or	 edx, -1
  00162	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
$LN8@BlkMovDisp:
; Line 354
  00166	8b 45 ec	 mov	 eax, DWORD PTR _irpStack$22960[ebp]
  00169	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 1b		 je	 SHORT $LN7@BlkMovDisp
; Line 356
  00171	8b 55 fc	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  00174	83 7a 1c 01	 cmp	 DWORD PTR [edx+28], 1
  00178	75 12		 jne	 SHORT $LN7@BlkMovDisp
; Line 363
  0017a	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  0017d	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00180	81 e1 ff df ff
	ff		 and	 ecx, -8193		; ffffdfffH
  00186	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  00189	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
$LN7@BlkMovDisp:
; Line 368
  0018c	eb 1f		 jmp	 SHORT $LN5@BlkMovDisp
$LN10@BlkMovDisp:
; Line 375
  0018e	0f b6 45 eb	 movzx	 eax, BYTE PTR _setPagable$22962[ebp]
  00192	83 f8 01	 cmp	 eax, 1
  00195	75 16		 jne	 SHORT $LN5@BlkMovDisp
; Line 377
  00197	8b 4d 08	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  0019a	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0019d	81 e2 ff df ff
	ff		 and	 edx, -8193		; ffffdfffH
  001a3	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  001a6	89 50 1c	 mov	 DWORD PTR [eax+28], edx
; Line 378
  001a9	c6 45 eb 00	 mov	 BYTE PTR _setPagable$22962[ebp], 0
$LN5@BlkMovDisp:
; Line 388
  001ad	6a 00		 push	 0
  001af	6a 00		 push	 0
  001b1	8b 4d fc	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  001b4	83 c1 0c	 add	 ecx, 12			; 0000000cH
  001b7	51		 push	 ecx
  001b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeSetEvent@12
; Line 394
  001be	32 d2		 xor	 dl, dl
  001c0	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  001c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCompleteRequest@8
; Line 395
  001c9	8b 45 f8	 mov	 eax, DWORD PTR _status$[ebp]
  001cc	eb 32		 jmp	 SHORT $LN20@BlkMovDisp
; Line 396
  001ce	eb 2d		 jmp	 SHORT $LN17@BlkMovDisp
$LN3@BlkMovDisp:
; Line 400
  001d0	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  001d3	52		 push	 edx
  001d4	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 _BlkMovSendToNextDriver@8
  001dd	eb 21		 jmp	 SHORT $LN20@BlkMovDisp
$LN2@BlkMovDisp:
; Line 402
  001df	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  001e2	51		 push	 ecx
  001e3	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  001e6	52		 push	 edx
  001e7	e8 00 00 00 00	 call	 _BlkMovSendToNextDriver@8
  001ec	eb 12		 jmp	 SHORT $LN20@BlkMovDisp
$LN1@BlkMovDisp:
; Line 407
  001ee	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  001f1	50		 push	 eax
  001f2	8b 4d 08	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  001f5	51		 push	 ecx
  001f6	e8 00 00 00 00	 call	 _BlkMovSendToNextDriver@8
  001fb	eb 03		 jmp	 SHORT $LN20@BlkMovDisp
$LN17@BlkMovDisp:
; Line 411
  001fd	8b 45 f8	 mov	 eax, DWORD PTR _status$[ebp]
$LN20@BlkMovDisp:
; Line 413
  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c2 08 00	 ret	 8
  00206	8b ff		 npad	 2
$LN24@BlkMovDisp:
  00208	00 00 00 00	 DD	 $LN16@BlkMovDisp
  0020c	00 00 00 00	 DD	 $LN3@BlkMovDisp
  00210	00 00 00 00	 DD	 $LN2@BlkMovDisp
  00214	00 00 00 00	 DD	 $LN15@BlkMovDisp
  00218	00 00 00 00	 DD	 $LN1@BlkMovDisp
$LN23@BlkMovDisp:
  0021c	00		 DB	 0
  0021d	04		 DB	 4
  0021e	01		 DB	 1
  0021f	04		 DB	 4
  00220	02		 DB	 2
  00221	04		 DB	 4
  00222	04		 DB	 4
  00223	04		 DB	 4
  00224	04		 DB	 4
  00225	04		 DB	 4
  00226	04		 DB	 4
  00227	04		 DB	 4
  00228	04		 DB	 4
  00229	04		 DB	 4
  0022a	04		 DB	 4
  0022b	04		 DB	 4
  0022c	04		 DB	 4
  0022d	04		 DB	 4
  0022e	04		 DB	 4
  0022f	04		 DB	 4
  00230	04		 DB	 4
  00231	04		 DB	 4
  00232	03		 DB	 3
_BlkMovDispatchPnp@8 ENDP
_TEXT	ENDS
PUBLIC	_DiskPerfIrpCompletion@12
; Function compile flags: /Odtp
;	COMDAT _DiskPerfIrpCompletion@12
_TEXT	SEGMENT
_Event$ = -4						; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_Context$ = 16						; size = 4
_DiskPerfIrpCompletion@12 PROC				; COMDAT
; Line 422
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
; Line 423
  00006	8b 45 10	 mov	 eax, DWORD PTR _Context$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR _Event$[ebp], eax
; Line 428
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _Event$[ebp]
  00013	51		 push	 ecx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeSetEvent@12
; Line 430
  0001a	b8 16 00 00 c0	 mov	 eax, -1073741802	; c0000016H
; Line 432
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 0c 00	 ret	 12			; 0000000cH
_DiskPerfIrpCompletion@12 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _BlkMovStartDevice@8
_TEXT	SEGMENT
_status$ = -1040					; size = 4
_deviceExtension$ = -1036				; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovStartDevice@8 PROC				; COMDAT
; Line 439
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec 20 04 00
	00		 sub	 esp, 1056		; 00000420H
; Line 446
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  00011	0f b6 c0	 movzx	 eax, al
  00014	83 f8 01	 cmp	 eax, 1
  00017	7e 19		 jle	 SHORT $LN1@BlkMovStar
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0001f	0f b6 c8	 movzx	 ecx, al
  00022	51		 push	 ecx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
  00028	e8 00 00 00 00	 call	 _DbgPrint
  0002d	83 c4 08	 add	 esp, 8
__annotation$23868:
  00030	cd 2c		 int	 44			; 0000002cH
$LN1@BlkMovStar:
; Line 448
  00032	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  00035	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00038	89 85 f4 fb ff
	ff		 mov	 DWORD PTR _deviceExtension$[ebp], eax
; Line 450
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 _BlkMovForwardIrpSynchronous@8
  0004b	89 85 f0 fb ff
	ff		 mov	 DWORD PTR _status$[ebp], eax
; Line 453
  00051	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00057	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005a	51		 push	 ecx
  0005b	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  0005e	52		 push	 edx
  0005f	e8 00 00 00 00	 call	 _BlkMovSyncFilterWithTarget@8
; Line 457
  00064	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  00067	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR _status$[ebp]
  0006d	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 458
  00070	32 d2		 xor	 dl, dl
  00072	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCompleteRequest@8
; Line 460
  0007b	8b 85 f0 fb ff
	ff		 mov	 eax, DWORD PTR _status$[ebp]
; Line 461
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 08 00	 ret	 8
_BlkMovStartDevice@8 ENDP
_TEXT	ENDS
PUBLIC	_DeleteThread@4
PUBLIC	_BlkMovRemoveDevice@8
EXTRN	__imp__IoDetachDevice@4:PROC
; Function compile flags: /Odtp
;	COMDAT _BlkMovRemoveDevice@8
_TEXT	SEGMENT
_status$ = -8						; size = 4
_deviceExtension$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovRemoveDevice@8 PROC				; COMDAT
; Line 468
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 08	 sub	 esp, 8
; Line 472
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0000e	0f b6 c0	 movzx	 eax, al
  00011	83 f8 01	 cmp	 eax, 1
  00014	7e 19		 jle	 SHORT $LN1@BlkMovRemo
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0001c	0f b6 c8	 movzx	 ecx, al
  0001f	51		 push	 ecx
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
  00025	e8 00 00 00 00	 call	 _DbgPrint
  0002a	83 c4 08	 add	 esp, 8
__annotation$23871:
  0002d	cd 2c		 int	 44			; 0000002cH
$LN1@BlkMovRemo:
; Line 474
  0002f	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  00032	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00035	89 45 fc	 mov	 DWORD PTR _deviceExtension$[ebp], eax
; Line 476
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 _BlkMovForwardIrpSynchronous@8
  00045	89 45 f8	 mov	 DWORD PTR _status$[ebp], eax
; Line 478
  00048	8b 45 fc	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	51		 push	 ecx
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoDetachDevice@4
; Line 479
  00055	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  00058	52		 push	 edx
  00059	e8 00 00 00 00	 call	 _DeleteThread@4
; Line 480
  0005e	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00061	50		 push	 eax
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoDeleteDevice@4
; Line 485
  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0006b	8b 55 f8	 mov	 edx, DWORD PTR _status$[ebp]
  0006e	89 51 18	 mov	 DWORD PTR [ecx+24], edx
; Line 486
  00071	32 d2		 xor	 dl, dl
  00073	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCompleteRequest@8
; Line 488
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _status$[ebp]
; Line 489
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
_BlkMovRemoveDevice@8 ENDP
_TEXT	ENDS
EXTRN	__imp_@IofCallDriver@8:PROC
; Function compile flags: /Odtp
;	COMDAT _BlkMovSendToNextDriver@8
_TEXT	SEGMENT
_deviceExtension$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovSendToNextDriver@8 PROC				; COMDAT
; Line 497
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
; Line 500
  00006	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  00009	8a 48 23	 mov	 cl, BYTE PTR [eax+35]
  0000c	80 c1 01	 add	 cl, 1
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00012	88 4a 23	 mov	 BYTE PTR [edx+35], cl
  00015	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  00018	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0001b	83 c1 24	 add	 ecx, 36			; 00000024H
  0001e	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00021	89 4a 60	 mov	 DWORD PTR [edx+96], ecx
; Line 501
  00024	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00027	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0002a	89 4d fc	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 503
  0002d	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00030	8b 45 fc	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00033	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCallDriver@8
; Line 505
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 08 00	 ret	 8
_BlkMovSendToNextDriver@8 ENDP
_TEXT	ENDS
EXTRN	__imp__PoCallDriver@8:PROC
EXTRN	__imp__PoStartNextPowerIrp@4:PROC
; Function compile flags: /Odtp
;	COMDAT _BlkMovDispatchPower@8
_TEXT	SEGMENT
_currentIrpStack$ = -8					; size = 4
_deviceExtension$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovDispatchPower@8 PROC				; COMDAT
; Line 512
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 08	 sub	 esp, 8
; Line 514
  00008	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0000b	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0000e	89 4d f8	 mov	 DWORD PTR _currentIrpStack$[ebp], ecx
; Line 516
  00011	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PoStartNextPowerIrp@4
; Line 517
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0001e	8a 48 23	 mov	 cl, BYTE PTR [eax+35]
  00021	80 c1 01	 add	 cl, 1
  00024	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00027	88 4a 23	 mov	 BYTE PTR [edx+35], cl
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0002d	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00030	83 c1 24	 add	 ecx, 36			; 00000024H
  00033	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00036	89 4a 60	 mov	 DWORD PTR [edx+96], ecx
; Line 519
  00039	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  0003c	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0003f	89 4d fc	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 520
  00042	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00045	52		 push	 edx
  00046	8b 45 fc	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	51		 push	 ecx
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PoCallDriver@8
; Line 522
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
_BlkMovDispatchPower@8 ENDP
_TEXT	ENDS
PUBLIC	_IoSetCompletionRoutine@24
EXTRN	__imp__KeInitializeEvent@12:PROC
; Function compile flags: /Odtp
;	COMDAT _BlkMovForwardIrpSynchronous@8
_TEXT	SEGMENT
___irpSp$23037 = -32					; size = 4
___nextIrpSp$23038 = -28				; size = 4
_event$ = -24						; size = 16
_status$ = -8						; size = 4
_deviceExtension$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovForwardIrpSynchronous@8 PROC			; COMDAT
; Line 529
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 20	 sub	 esp, 32			; 00000020H
  00008	56		 push	 esi
  00009	57		 push	 edi
; Line 534
  0000a	6a 00		 push	 0
  0000c	6a 00		 push	 0
  0000e	8d 45 e8	 lea	 eax, DWORD PTR _event$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeInitializeEvent@12
; Line 535
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  0001b	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  0001e	89 55 fc	 mov	 DWORD PTR _deviceExtension$[ebp], edx
; Line 541
  00021	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  00024	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00027	89 4d e0	 mov	 DWORD PTR ___irpSp$23037[ebp], ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  0002d	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00030	83 e8 24	 sub	 eax, 36			; 00000024H
  00033	89 45 e4	 mov	 DWORD PTR ___nextIrpSp$23038[ebp], eax
  00036	b9 07 00 00 00	 mov	 ecx, 7
  0003b	8b 75 e0	 mov	 esi, DWORD PTR ___irpSp$23037[ebp]
  0003e	8b 7d e4	 mov	 edi, DWORD PTR ___nextIrpSp$23038[ebp]
  00041	f3 a5		 rep movsd
  00043	8b 4d e4	 mov	 ecx, DWORD PTR ___nextIrpSp$23038[ebp]
  00046	c6 41 03 00	 mov	 BYTE PTR [ecx+3], 0
; Line 548
  0004a	6a 01		 push	 1
  0004c	6a 01		 push	 1
  0004e	6a 01		 push	 1
  00050	8d 55 e8	 lea	 edx, DWORD PTR _event$[ebp]
  00053	52		 push	 edx
  00054	68 00 00 00 00	 push	 OFFSET _DiskPerfIrpCompletion@12
  00059	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 _IoSetCompletionRoutine@24
; Line 554
  00062	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  00068	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCallDriver@8
  00071	89 45 f8	 mov	 DWORD PTR _status$[ebp], eax
; Line 560
  00074	81 7d f8 03 01
	00 00		 cmp	 DWORD PTR _status$[ebp], 259 ; 00000103H
  0007b	75 1b		 jne	 SHORT $LN1@BlkMovForw
; Line 562
  0007d	6a 00		 push	 0
  0007f	6a 00		 push	 0
  00081	6a 00		 push	 0
  00083	6a 00		 push	 0
  00085	8d 55 e8	 lea	 edx, DWORD PTR _event$[ebp]
  00088	52		 push	 edx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeWaitForSingleObject@20
; Line 563
  0008f	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  00092	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00095	89 4d f8	 mov	 DWORD PTR _status$[ebp], ecx
$LN1@BlkMovForw:
; Line 566
  00098	8b 45 f8	 mov	 eax, DWORD PTR _status$[ebp]
; Line 568
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 08 00	 ret	 8
_BlkMovForwardIrpSynchronous@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0FK@JAEDPCKJ@?$CIInvokeOnSuccess?5?$HM?$HM?5InvokeOnErro@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	??_C@_0BN@BBPNPCMG@c?3?2winddk?26000?2inc?2ddk?2wdm?4h?$AA@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
EXTRN	__imp__RtlAssert@16:PROC
;	COMDAT ??_C@_0FK@JAEDPCKJ@?$CIInvokeOnSuccess?5?$HM?$HM?5InvokeOnErro@FNODOBFM@
; File c:\winddk\6000\inc\ddk\wdm.h
text$s	SEGMENT
??_C@_0FK@JAEDPCKJ@?$CIInvokeOnSuccess?5?$HM?$HM?5InvokeOnErro@FNODOBFM@ DB '('
	DB	'InvokeOnSuccess || InvokeOnError || InvokeOnCancel) ? (Comple'
	DB	'tionRoutine != NULL) : TRUE', 00H		;  ?? ::FNODOBFM::`string'
text$s	ENDS
;	COMDAT ??_C@_0BN@BBPNPCMG@c?3?2winddk?26000?2inc?2ddk?2wdm?4h?$AA@FNODOBFM@
text$s	SEGMENT
??_C@_0BN@BBPNPCMG@c?3?2winddk?26000?2inc?2ddk?2wdm?4h?$AA@FNODOBFM@ DB 'c'
	DB	':\winddk\6000\inc\ddk\wdm.h', 00H		;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _IoSetCompletionRoutine@24
_TEXT	SEGMENT
tv78 = -12						; size = 4
tv72 = -8						; size = 4
_irpSp$ = -4						; size = 4
_Irp$ = 8						; size = 4
_CompletionRoutine$ = 12				; size = 4
_Context$ = 16						; size = 4
_InvokeOnSuccess$ = 20					; size = 1
_InvokeOnError$ = 24					; size = 1
_InvokeOnCancel$ = 28					; size = 1
_IoSetCompletionRoutine@24 PROC				; COMDAT
; Line 21007
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 21009
  00008	0f b6 45 14	 movzx	 eax, BYTE PTR _InvokeOnSuccess$[ebp]
  0000c	85 c0		 test	 eax, eax
  0000e	75 19		 jne	 SHORT $LN6@IoSetCompl
  00010	0f b6 4d 18	 movzx	 ecx, BYTE PTR _InvokeOnError$[ebp]
  00014	85 c9		 test	 ecx, ecx
  00016	75 11		 jne	 SHORT $LN6@IoSetCompl
  00018	0f b6 55 1c	 movzx	 edx, BYTE PTR _InvokeOnCancel$[ebp]
  0001c	85 d2		 test	 edx, edx
  0001e	75 09		 jne	 SHORT $LN6@IoSetCompl
  00020	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  00027	eb 0c		 jmp	 SHORT $LN7@IoSetCompl
$LN6@IoSetCompl:
  00029	33 c0		 xor	 eax, eax
  0002b	83 7d 0c 00	 cmp	 DWORD PTR _CompletionRoutine$[ebp], 0
  0002f	0f 95 c0	 setne	 al
  00032	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN7@IoSetCompl:
  00035	83 7d f8 00	 cmp	 DWORD PTR tv72[ebp], 0
  00039	75 20		 jne	 SHORT $LN8@IoSetCompl
  0003b	6a 00		 push	 0
  0003d	68 11 52 00 00	 push	 21009			; 00005211H
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@BBPNPCMG@c?3?2winddk?26000?2inc?2ddk?2wdm?4h?$AA@FNODOBFM@
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FK@JAEDPCKJ@?$CIInvokeOnSuccess?5?$HM?$HM?5InvokeOnErro@FNODOBFM@
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  00052	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
  00059	eb 07		 jmp	 SHORT $LN9@IoSetCompl
$LN8@IoSetCompl:
  0005b	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
$LN9@IoSetCompl:
; Line 21010
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00065	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  00068	83 ea 24	 sub	 edx, 36			; 00000024H
  0006b	89 55 fc	 mov	 DWORD PTR _irpSp$[ebp], edx
; Line 21011
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _irpSp$[ebp]
  00071	8b 4d 0c	 mov	 ecx, DWORD PTR _CompletionRoutine$[ebp]
  00074	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
; Line 21012
  00077	8b 55 fc	 mov	 edx, DWORD PTR _irpSp$[ebp]
  0007a	8b 45 10	 mov	 eax, DWORD PTR _Context$[ebp]
  0007d	89 42 20	 mov	 DWORD PTR [edx+32], eax
; Line 21013
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _irpSp$[ebp]
  00083	c6 41 03 00	 mov	 BYTE PTR [ecx+3], 0
; Line 21015
  00087	0f b6 55 14	 movzx	 edx, BYTE PTR _InvokeOnSuccess$[ebp]
  0008b	85 d2		 test	 edx, edx
  0008d	74 07		 je	 SHORT $LN3@IoSetCompl
; Line 21016
  0008f	8b 45 fc	 mov	 eax, DWORD PTR _irpSp$[ebp]
  00092	c6 40 03 40	 mov	 BYTE PTR [eax+3], 64	; 00000040H
$LN3@IoSetCompl:
; Line 21019
  00096	0f b6 4d 18	 movzx	 ecx, BYTE PTR _InvokeOnError$[ebp]
  0009a	85 c9		 test	 ecx, ecx
  0009c	74 12		 je	 SHORT $LN2@IoSetCompl
; Line 21020
  0009e	8b 55 fc	 mov	 edx, DWORD PTR _irpSp$[ebp]
  000a1	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  000a5	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _irpSp$[ebp]
  000ad	88 41 03	 mov	 BYTE PTR [ecx+3], al
$LN2@IoSetCompl:
; Line 21023
  000b0	0f b6 55 1c	 movzx	 edx, BYTE PTR _InvokeOnCancel$[ebp]
  000b4	85 d2		 test	 edx, edx
  000b6	74 10		 je	 SHORT $LN4@IoSetCompl
; Line 21024
  000b8	8b 45 fc	 mov	 eax, DWORD PTR _irpSp$[ebp]
  000bb	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  000bf	83 c9 20	 or	 ecx, 32			; 00000020H
  000c2	8b 55 fc	 mov	 edx, DWORD PTR _irpSp$[ebp]
  000c5	88 4a 03	 mov	 BYTE PTR [edx+3], cl
$LN4@IoSetCompl:
; Line 21026
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 18 00	 ret	 24			; 00000018H
_IoSetCompletionRoutine@24 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _BlkMovCreate@8
_TEXT	SEGMENT
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovCreate@8 PROC					; COMDAT
; File f:\tech\blkmover\cur_ver\sys\2000\iomon.c
; Line 575
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
; Line 578
  00005	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  00008	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
; Line 580
  0000f	32 d2		 xor	 dl, dl
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCompleteRequest@8
; Line 581
  0001a	33 c0		 xor	 eax, eax
; Line 583
  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
_BlkMovCreate@8 ENDP
_TEXT	ENDS
PUBLIC	_BlkMovIoCompletion@12
EXTRN	_g_bReLocate:DWORD
EXTRN	__imp_@ExfInterlockedInsertTailList@12:PROC
EXTRN	_g_dwOrig1st:DWORD
EXTRN	_g_dwOrigLast:DWORD
EXTRN	__alldiv:PROC
; Function compile flags: /Odtp
;	COMDAT _BlkMovReadWrite@8
_TEXT	SEGMENT
_status$ = -32						; size = 4
_currentIrpStack$ = -28					; size = 4
_dwLength$ = -24					; size = 4
_deviceExtension$ = -20					; size = 4
_dwStartSec$ = -16					; size = 4
_nextIrpStack$ = -8					; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovReadWrite@8 PROC					; COMDAT
; Line 591
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 20	 sub	 esp, 32			; 00000020H
  00008	56		 push	 esi
  00009	57		 push	 edi
; Line 597
  0000a	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  0000d	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00010	89 4d ec	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 598
  00013	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00016	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00019	89 45 e4	 mov	 DWORD PTR _currentIrpStack$[ebp], eax
; Line 599
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0001f	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  00022	83 ea 24	 sub	 edx, 36			; 00000024H
  00025	89 55 f8	 mov	 DWORD PTR _nextIrpStack$[ebp], edx
; Line 601
  00028	8b 45 e4	 mov	 eax, DWORD PTR _currentIrpStack$[ebp]
  0002b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002e	c1 e9 09	 shr	 ecx, 9
  00031	89 4d e8	 mov	 DWORD PTR _dwLength$[ebp], ecx
; Line 602
  00034	8b 55 e4	 mov	 edx, DWORD PTR _currentIrpStack$[ebp]
  00037	6a 00		 push	 0
  00039	68 00 02 00 00	 push	 512			; 00000200H
  0003e	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00041	50		 push	 eax
  00042	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00045	51		 push	 ecx
  00046	e8 00 00 00 00	 call	 __alldiv
  0004b	89 45 f0	 mov	 DWORD PTR _dwStartSec$[ebp], eax
; Line 604
  0004e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_pMoverData, 0
  00055	74 71		 je	 SHORT $LN3@BlkMovRead
; Line 607
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_pMoverData
  0005d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00060	3b 45 08	 cmp	 eax, DWORD PTR _DeviceObject$[ebp]
  00063	75 63		 jne	 SHORT $LN3@BlkMovRead
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _dwStartSec$[ebp]
  00068	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR _g_dwOrigLast
  0006e	73 58		 jae	 SHORT $LN3@BlkMovRead
  00070	8b 55 f0	 mov	 edx, DWORD PTR _dwStartSec$[ebp]
  00073	03 55 e8	 add	 edx, DWORD PTR _dwLength$[ebp]
  00076	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR _g_dwOrig1st
  0007c	76 4a		 jbe	 SHORT $LN3@BlkMovRead
; Line 609
  0007e	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  00081	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00084	0f b6 51 03	 movzx	 edx, BYTE PTR [ecx+3]
  00088	83 ca 01	 or	 edx, 1
  0008b	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0008e	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00091	88 51 03	 mov	 BYTE PTR [ecx+3], dl
; Line 615
  00094	8b 55 ec	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  00097	83 c2 28	 add	 edx, 40			; 00000028H
  0009a	52		 push	 edx
  0009b	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  0009e	83 c2 58	 add	 edx, 88			; 00000058H
  000a1	8b 4d ec	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  000a4	83 c1 20	 add	 ecx, 32			; 00000020H
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@ExfInterlockedInsertTailList@12
; Line 621
  000ad	6a 00		 push	 0
  000af	6a 00		 push	 0
  000b1	8b 45 ec	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  000b4	83 c0 2c	 add	 eax, 44			; 0000002cH
  000b7	50		 push	 eax
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeSetEvent@12
; Line 622
  000be	b8 03 01 00 00	 mov	 eax, 259		; 00000103H
  000c3	e9 95 00 00 00	 jmp	 $LN4@BlkMovRead
$LN3@BlkMovRead:
; Line 626
  000c8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_bReLocate, 0
  000cf	74 52		 je	 SHORT $LN1@BlkMovRead
  000d1	8b 4d ec	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  000d4	0f b6 51 08	 movzx	 edx, BYTE PTR [ecx+8]
  000d8	85 d2		 test	 edx, edx
  000da	74 47		 je	 SHORT $LN1@BlkMovRead
; Line 628
  000dc	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  000df	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  000e2	0f b6 51 03	 movzx	 edx, BYTE PTR [ecx+3]
  000e6	83 ca 01	 or	 edx, 1
  000e9	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  000ec	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  000ef	88 51 03	 mov	 BYTE PTR [ecx+3], dl
; Line 634
  000f2	8b 55 ec	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  000f5	83 c2 28	 add	 edx, 40			; 00000028H
  000f8	52		 push	 edx
  000f9	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  000fc	83 c2 58	 add	 edx, 88			; 00000058H
  000ff	8b 4d ec	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  00102	83 c1 20	 add	 ecx, 32			; 00000020H
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@ExfInterlockedInsertTailList@12
; Line 640
  0010b	6a 00		 push	 0
  0010d	6a 00		 push	 0
  0010f	8b 45 ec	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00112	83 c0 2c	 add	 eax, 44			; 0000002cH
  00115	50		 push	 eax
  00116	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeSetEvent@12
; Line 641
  0011c	b8 03 01 00 00	 mov	 eax, 259		; 00000103H
  00121	eb 3a		 jmp	 SHORT $LN4@BlkMovRead
$LN1@BlkMovRead:
; Line 647
  00123	8b 75 e4	 mov	 esi, DWORD PTR _currentIrpStack$[ebp]
  00126	b9 09 00 00 00	 mov	 ecx, 9
  0012b	8b 7d f8	 mov	 edi, DWORD PTR _nextIrpStack$[ebp]
  0012e	f3 a5		 rep movsd
; Line 656
  00130	6a 01		 push	 1
  00132	6a 01		 push	 1
  00134	6a 01		 push	 1
  00136	8b 4d 08	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  00139	51		 push	 ecx
  0013a	68 00 00 00 00	 push	 OFFSET _BlkMovIoCompletion@12
  0013f	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00142	52		 push	 edx
  00143	e8 00 00 00 00	 call	 _IoSetCompletionRoutine@24
; Line 659
  00148	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  0014b	8b 45 ec	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  0014e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00151	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCallDriver@8
  00157	89 45 e0	 mov	 DWORD PTR _status$[ebp], eax
; Line 661
  0015a	8b 45 e0	 mov	 eax, DWORD PTR _status$[ebp]
$LN4@BlkMovRead:
; Line 663
  0015d	5f		 pop	 edi
  0015e	5e		 pop	 esi
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c2 08 00	 ret	 8
_BlkMovReadWrite@8 ENDP
_TEXT	ENDS
PUBLIC	_AsyncCompletion@12
PUBLIC	??_C@_03EAONPCJM@Irp?$AA@FNODOBFM@		;  ?? ::FNODOBFM::`string'
PUBLIC	??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	_AsyncReadWriteSec@24
EXTRN	__imp__MmBuildMdlForNonPagedPool@4:PROC
EXTRN	__imp__IoAllocateMdl@20:PROC
EXTRN	__imp__IoAllocateIrp@8:PROC
;	COMDAT ??_C@_03EAONPCJM@Irp?$AA@FNODOBFM@
text$s	SEGMENT
??_C@_03EAONPCJM@Irp?$AA@FNODOBFM@ DB 'Irp', 00H	;  ?? ::FNODOBFM::`string'
text$s	ENDS
;	COMDAT ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
text$s	SEGMENT
??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@ DB 'f'
	DB	':\tech\blkmover\cur_ver\sys\2000\iomon.c', 00H ;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _AsyncReadWriteSec@24
_TEXT	SEGMENT
tv82 = -60						; size = 4
_NextIrpStack$ = -48					; size = 4
_status$ = -28						; size = 4
_deviceExtension$ = -24					; size = 4
_ulBytes$ = -20						; size = 4
_MDL$ = -16						; size = 4
_Irp$ = -12						; size = 4
_Start$ = -8						; size = 8
_DeviceObject$ = 8					; size = 4
_ParentIrp$ = 12					; size = 4
_ulStartSec$ = 16					; size = 4
_ulSectors$ = 20					; size = 4
_pBuffer$ = 24						; size = 4
_MajorFunction$ = 28					; size = 1
_AsyncReadWriteSec@24 PROC				; COMDAT
; Line 674
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 3c	 sub	 esp, 60			; 0000003cH
; Line 681
  00008	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _status$[ebp], 0
; Line 683
  0000f	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00012	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00015	89 4d e8	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 685
  00018	8b 55 14	 mov	 edx, DWORD PTR _ulSectors$[ebp]
  0001b	c1 e2 09	 shl	 edx, 9
  0001e	89 55 ec	 mov	 DWORD PTR _ulBytes$[ebp], edx
; Line 686
  00021	8b 45 10	 mov	 eax, DWORD PTR _ulStartSec$[ebp]
  00024	b9 00 02 00 00	 mov	 ecx, 512		; 00000200H
  00029	f7 e1		 mul	 ecx
  0002b	89 45 f8	 mov	 DWORD PTR _Start$[ebp], eax
  0002e	89 55 fc	 mov	 DWORD PTR _Start$[ebp+4], edx
; Line 688
  00031	6a 00		 push	 0
  00033	8b 55 e8	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	0f be 48 30	 movsx	 ecx, BYTE PTR [eax+48]
  0003d	83 c1 01	 add	 ecx, 1
  00040	51		 push	 ecx
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoAllocateIrp@8
  00047	89 45 f4	 mov	 DWORD PTR _Irp$[ebp], eax
; Line 695
  0004a	83 7d f4 00	 cmp	 DWORD PTR _Irp$[ebp], 0
  0004e	75 20		 jne	 SHORT $LN5@AsyncReadW
  00050	6a 00		 push	 0
  00052	68 b7 02 00 00	 push	 695			; 000002b7H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_03EAONPCJM@Irp?$AA@FNODOBFM@
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  00067	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
  0006e	eb 07		 jmp	 SHORT $LN6@AsyncReadW
$LN5@AsyncReadW:
  00070	c7 45 c4 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
$LN6@AsyncReadW:
; Line 696
  00077	83 7d f4 00	 cmp	 DWORD PTR _Irp$[ebp], 0
  0007b	75 0a		 jne	 SHORT $LN2@AsyncReadW
; Line 698
  0007d	b8 9a 00 00 c0	 mov	 eax, -1073741670	; c000009aH
  00082	e9 e9 00 00 00	 jmp	 $LN3@AsyncReadW
$LN2@AsyncReadW:
; Line 701
  00087	8b 55 f4	 mov	 edx, DWORD PTR _Irp$[ebp]
  0008a	52		 push	 edx
  0008b	6a 00		 push	 0
  0008d	6a 00		 push	 0
  0008f	8b 45 ec	 mov	 eax, DWORD PTR _ulBytes$[ebp]
  00092	50		 push	 eax
  00093	8b 4d 18	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  00096	51		 push	 ecx
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoAllocateMdl@20
  0009d	89 45 f0	 mov	 DWORD PTR _MDL$[ebp], eax
; Line 702
  000a0	83 7d f0 00	 cmp	 DWORD PTR _MDL$[ebp], 0
  000a4	75 0a		 jne	 SHORT $LN1@AsyncReadW
; Line 703
  000a6	b8 9a 00 00 c0	 mov	 eax, -1073741670	; c000009aH
  000ab	e9 c0 00 00 00	 jmp	 $LN3@AsyncReadW
$LN1@AsyncReadW:
; Line 705
  000b0	8b 55 f0	 mov	 edx, DWORD PTR _MDL$[ebp]
  000b3	52		 push	 edx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmBuildMdlForNonPagedPool@4
; Line 706
  000ba	8b 45 f4	 mov	 eax, DWORD PTR _Irp$[ebp]
  000bd	8a 48 23	 mov	 cl, BYTE PTR [eax+35]
  000c0	80 e9 01	 sub	 cl, 1
  000c3	8b 55 f4	 mov	 edx, DWORD PTR _Irp$[ebp]
  000c6	88 4a 23	 mov	 BYTE PTR [edx+35], cl
  000c9	8b 45 f4	 mov	 eax, DWORD PTR _Irp$[ebp]
  000cc	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  000cf	83 e9 24	 sub	 ecx, 36			; 00000024H
  000d2	8b 55 f4	 mov	 edx, DWORD PTR _Irp$[ebp]
  000d5	89 4a 60	 mov	 DWORD PTR [edx+96], ecx
; Line 707
  000d8	8b 45 f4	 mov	 eax, DWORD PTR _Irp$[ebp]
  000db	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  000de	83 e9 24	 sub	 ecx, 36			; 00000024H
  000e1	89 4d d0	 mov	 DWORD PTR _NextIrpStack$[ebp], ecx
; Line 709
  000e4	8b 55 d0	 mov	 edx, DWORD PTR _NextIrpStack$[ebp]
  000e7	8b 45 e8	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  000ea	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ed	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
; Line 710
  000f0	8b 55 d0	 mov	 edx, DWORD PTR _NextIrpStack$[ebp]
  000f3	8a 45 1c	 mov	 al, BYTE PTR _MajorFunction$[ebp]
  000f6	88 02		 mov	 BYTE PTR [edx], al
; Line 711
  000f8	8b 4d d0	 mov	 ecx, DWORD PTR _NextIrpStack$[ebp]
  000fb	c6 41 01 00	 mov	 BYTE PTR [ecx+1], 0
; Line 713
  000ff	8b 55 d0	 mov	 edx, DWORD PTR _NextIrpStack$[ebp]
  00102	8b 45 ec	 mov	 eax, DWORD PTR _ulBytes$[ebp]
  00105	89 42 04	 mov	 DWORD PTR [edx+4], eax
; Line 714
  00108	8b 4d d0	 mov	 ecx, DWORD PTR _NextIrpStack$[ebp]
  0010b	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 715
  00112	8b 55 d0	 mov	 edx, DWORD PTR _NextIrpStack$[ebp]
  00115	8b 45 f8	 mov	 eax, DWORD PTR _Start$[ebp]
  00118	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _Start$[ebp+4]
  0011e	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
; Line 717
  00121	8b 55 d0	 mov	 edx, DWORD PTR _NextIrpStack$[ebp]
  00124	83 c2 04	 add	 edx, 4
  00127	8b 45 d0	 mov	 eax, DWORD PTR _NextIrpStack$[ebp]
  0012a	83 c0 04	 add	 eax, 4
  0012d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0012f	89 08		 mov	 DWORD PTR [eax], ecx
  00131	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00134	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00137	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0013a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0013d	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00140	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 718
  00143	6a 01		 push	 1
  00145	6a 01		 push	 1
  00147	6a 01		 push	 1
  00149	8b 45 0c	 mov	 eax, DWORD PTR _ParentIrp$[ebp]
  0014c	50		 push	 eax
  0014d	68 00 00 00 00	 push	 OFFSET _AsyncCompletion@12
  00152	8b 4d f4	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00155	51		 push	 ecx
  00156	e8 00 00 00 00	 call	 _IoSetCompletionRoutine@24
; Line 719
  0015b	8b 55 f4	 mov	 edx, DWORD PTR _Irp$[ebp]
  0015e	8b 45 e8	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00161	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00164	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCallDriver@8
  0016a	89 45 e4	 mov	 DWORD PTR _status$[ebp], eax
; Line 720
  0016d	8b 45 e4	 mov	 eax, DWORD PTR _status$[ebp]
$LN3@AsyncReadW:
; Line 721
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c2 18 00	 ret	 24			; 00000018H
_AsyncReadWriteSec@24 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	_SyncReadWriteSec@20
EXTRN	__imp__IoBuildSynchronousFsdRequest@28:PROC
;	COMDAT ??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@
text$s	SEGMENT
??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@ DB 'K'
	DB	'eGetCurrentIrql() == PASSIVE_LEVEL', 00H	;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _SyncReadWriteSec@20
_TEXT	SEGMENT
tv94 = -56						; size = 4
tv72 = -52						; size = 4
_ioStatus$ = -48					; size = 8
_event$ = -40						; size = 16
_status$ = -24						; size = 4
_deviceExtension$ = -20					; size = 4
_ulBytes$ = -16						; size = 4
_Irp$ = -12						; size = 4
_Start$ = -8						; size = 8
_DeviceObject$ = 8					; size = 4
_ulStartSec$ = 12					; size = 4
_ulSectors$ = 16					; size = 4
_pBuffer$ = 20						; size = 4
_MajorFunction$ = 24					; size = 1
_SyncReadWriteSec@20 PROC				; COMDAT
; Line 731
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 38	 sub	 esp, 56			; 00000038H
; Line 737
  00008	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _status$[ebp], 0
; Line 738
  0000f	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00012	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00015	89 4d ec	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 740
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0001e	0f b6 d0	 movzx	 edx, al
  00021	85 d2		 test	 edx, edx
  00023	74 20		 je	 SHORT $LN5@SyncReadWr
  00025	6a 00		 push	 0
  00027	68 e4 02 00 00	 push	 740			; 000002e4H
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  0003c	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00043	eb 07		 jmp	 SHORT $LN6@SyncReadWr
$LN5@SyncReadWr:
  00045	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
$LN6@SyncReadWr:
; Line 742
  0004c	8b 45 10	 mov	 eax, DWORD PTR _ulSectors$[ebp]
  0004f	c1 e0 09	 shl	 eax, 9
  00052	89 45 f0	 mov	 DWORD PTR _ulBytes$[ebp], eax
; Line 743
  00055	8b 45 0c	 mov	 eax, DWORD PTR _ulStartSec$[ebp]
  00058	b9 00 02 00 00	 mov	 ecx, 512		; 00000200H
  0005d	f7 e1		 mul	 ecx
  0005f	89 45 f8	 mov	 DWORD PTR _Start$[ebp], eax
  00062	89 55 fc	 mov	 DWORD PTR _Start$[ebp+4], edx
; Line 745
  00065	6a 00		 push	 0
  00067	6a 00		 push	 0
  00069	8d 55 d8	 lea	 edx, DWORD PTR _event$[ebp]
  0006c	52		 push	 edx
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeInitializeEvent@12
; Line 751
  00073	8d 45 d0	 lea	 eax, DWORD PTR _ioStatus$[ebp]
  00076	50		 push	 eax
  00077	8d 4d d8	 lea	 ecx, DWORD PTR _event$[ebp]
  0007a	51		 push	 ecx
  0007b	8d 55 f8	 lea	 edx, DWORD PTR _Start$[ebp]
  0007e	52		 push	 edx
  0007f	8b 45 f0	 mov	 eax, DWORD PTR _ulBytes$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 14	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  00086	51		 push	 ecx
  00087	8b 55 ec	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  0008a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0008d	50		 push	 eax
  0008e	0f b6 4d 18	 movzx	 ecx, BYTE PTR _MajorFunction$[ebp]
  00092	51		 push	 ecx
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoBuildSynchronousFsdRequest@28
  00099	89 45 f4	 mov	 DWORD PTR _Irp$[ebp], eax
; Line 753
  0009c	83 7d f4 00	 cmp	 DWORD PTR _Irp$[ebp], 0
  000a0	75 20		 jne	 SHORT $LN7@SyncReadWr
  000a2	6a 00		 push	 0
  000a4	68 f1 02 00 00	 push	 753			; 000002f1H
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_03EAONPCJM@Irp?$AA@FNODOBFM@
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  000b9	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
  000c0	eb 07		 jmp	 SHORT $LN8@SyncReadWr
$LN7@SyncReadWr:
  000c2	c7 45 c8 01 00
	00 00		 mov	 DWORD PTR tv94[ebp], 1
$LN8@SyncReadWr:
; Line 754
  000c9	83 7d f4 00	 cmp	 DWORD PTR _Irp$[ebp], 0
  000cd	75 07		 jne	 SHORT $LN2@SyncReadWr
; Line 756
  000cf	b8 9a 00 00 c0	 mov	 eax, -1073741670	; c000009aH
  000d4	eb 36		 jmp	 SHORT $LN3@SyncReadWr
$LN2@SyncReadWr:
; Line 761
  000d6	8b 55 f4	 mov	 edx, DWORD PTR _Irp$[ebp]
  000d9	8b 45 ec	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  000dc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCallDriver@8
  000e5	89 45 e8	 mov	 DWORD PTR _status$[ebp], eax
; Line 763
  000e8	81 7d e8 03 01
	00 00		 cmp	 DWORD PTR _status$[ebp], 259 ; 00000103H
  000ef	75 18		 jne	 SHORT $LN1@SyncReadWr
; Line 769
  000f1	6a 00		 push	 0
  000f3	6a 00		 push	 0
  000f5	6a 00		 push	 0
  000f7	6a 00		 push	 0
  000f9	8d 4d d8	 lea	 ecx, DWORD PTR _event$[ebp]
  000fc	51		 push	 ecx
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeWaitForSingleObject@20
; Line 770
  00103	8b 55 d0	 mov	 edx, DWORD PTR _ioStatus$[ebp]
  00106	89 55 e8	 mov	 DWORD PTR _status$[ebp], edx
$LN1@SyncReadWr:
; Line 773
  00109	8b 45 e8	 mov	 eax, DWORD PTR _status$[ebp]
$LN3@SyncReadWr:
; Line 774
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 14 00	 ret	 20			; 00000014H
_SyncReadWriteSec@20 ENDP
_TEXT	ENDS
PUBLIC	_FlushBuf@4
; Function compile flags: /Odtp
;	COMDAT _FlushBuf@4
_TEXT	SEGMENT
tv90 = -44						; size = 4
tv72 = -40						; size = 4
_ioStatus$ = -36					; size = 8
_event$ = -28						; size = 16
_status$ = -12						; size = 4
_deviceExtension$ = -8					; size = 4
_Irp$ = -4						; size = 4
_DeviceObject$ = 8					; size = 4
_FlushBuf@4 PROC					; COMDAT
; Line 778
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 2c	 sub	 esp, 44			; 0000002cH
; Line 782
  00008	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _status$[ebp], 0
; Line 783
  0000f	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00012	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00015	89 4d f8	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 785
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0001e	0f b6 d0	 movzx	 edx, al
  00021	85 d2		 test	 edx, edx
  00023	74 20		 je	 SHORT $LN5@FlushBuf
  00025	6a 00		 push	 0
  00027	68 11 03 00 00	 push	 785			; 00000311H
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  0003c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00043	eb 07		 jmp	 SHORT $LN6@FlushBuf
$LN5@FlushBuf:
  00045	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
$LN6@FlushBuf:
; Line 787
  0004c	6a 00		 push	 0
  0004e	6a 00		 push	 0
  00050	8d 45 e4	 lea	 eax, DWORD PTR _event$[ebp]
  00053	50		 push	 eax
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeInitializeEvent@12
; Line 793
  0005a	8d 4d dc	 lea	 ecx, DWORD PTR _ioStatus$[ebp]
  0005d	51		 push	 ecx
  0005e	8d 55 e4	 lea	 edx, DWORD PTR _event$[ebp]
  00061	52		 push	 edx
  00062	6a 00		 push	 0
  00064	6a 00		 push	 0
  00066	6a 00		 push	 0
  00068	8b 45 f8	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  0006b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006e	51		 push	 ecx
  0006f	6a 09		 push	 9
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoBuildSynchronousFsdRequest@28
  00077	89 45 fc	 mov	 DWORD PTR _Irp$[ebp], eax
; Line 795
  0007a	83 7d fc 00	 cmp	 DWORD PTR _Irp$[ebp], 0
  0007e	75 20		 jne	 SHORT $LN7@FlushBuf
  00080	6a 00		 push	 0
  00082	68 1b 03 00 00	 push	 795			; 0000031bH
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_03EAONPCJM@Irp?$AA@FNODOBFM@
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  00097	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
  0009e	eb 07		 jmp	 SHORT $LN8@FlushBuf
$LN7@FlushBuf:
  000a0	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR tv90[ebp], 1
$LN8@FlushBuf:
; Line 796
  000a7	83 7d fc 00	 cmp	 DWORD PTR _Irp$[ebp], 0
  000ab	75 07		 jne	 SHORT $LN2@FlushBuf
; Line 798
  000ad	b8 9a 00 00 c0	 mov	 eax, -1073741670	; c000009aH
  000b2	eb 36		 jmp	 SHORT $LN3@FlushBuf
$LN2@FlushBuf:
; Line 801
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _Irp$[ebp]
  000b7	8b 45 f8	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  000ba	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCallDriver@8
  000c3	89 45 f4	 mov	 DWORD PTR _status$[ebp], eax
; Line 803
  000c6	81 7d f4 03 01
	00 00		 cmp	 DWORD PTR _status$[ebp], 259 ; 00000103H
  000cd	75 18		 jne	 SHORT $LN1@FlushBuf
; Line 809
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	6a 00		 push	 0
  000d5	6a 00		 push	 0
  000d7	8d 4d e4	 lea	 ecx, DWORD PTR _event$[ebp]
  000da	51		 push	 ecx
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeWaitForSingleObject@20
; Line 810
  000e1	8b 55 dc	 mov	 edx, DWORD PTR _ioStatus$[ebp]
  000e4	89 55 f4	 mov	 DWORD PTR _status$[ebp], edx
$LN1@FlushBuf:
; Line 813
  000e7	8b 45 f4	 mov	 eax, DWORD PTR _status$[ebp]
$LN3@FlushBuf:
; Line 814
  000ea	8b e5		 mov	 esp, ebp
  000ec	5d		 pop	 ebp
  000ed	c2 04 00	 ret	 4
_FlushBuf@4 ENDP
_TEXT	ENDS
EXTRN	__imp_@KfReleaseSpinLock@8:PROC
EXTRN	__imp_@KfAcquireSpinLock@4:PROC
EXTRN	__imp__IoFreeIrp@4:PROC
EXTRN	__imp__IoFreeMdl@4:PROC
; Function compile flags: /Odtp
;	COMDAT _AsyncCompletion@12
_TEXT	SEGMENT
_ParentIrp$ = -12					; size = 4
_ParentIrpNextStack$ = -8				; size = 4
_Irql$ = -1						; size = 1
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_Context$ = 16						; size = 4
_AsyncCompletion@12 PROC				; COMDAT
; Line 818
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 821
  00008	8b 45 10	 mov	 eax, DWORD PTR _Context$[ebp]
  0000b	89 45 f4	 mov	 DWORD PTR _ParentIrp$[ebp], eax
; Line 822
  0000e	8b 4d f4	 mov	 ecx, DWORD PTR _ParentIrp$[ebp]
  00011	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  00014	83 ea 24	 sub	 edx, 36			; 00000024H
  00017	89 55 f8	 mov	 DWORD PTR _ParentIrpNextStack$[ebp], edx
; Line 824
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	51		 push	 ecx
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoFreeMdl@4
; Line 825
  00027	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  0002a	52		 push	 edx
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoFreeIrp@4
; Line 827
  00031	b9 00 00 00 00	 mov	 ecx, OFFSET _g_IrpSpinLock
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@KfAcquireSpinLock@4
  0003c	88 45 ff	 mov	 BYTE PTR _Irql$[ebp], al
; Line 828
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _ParentIrpNextStack$[ebp]
  00042	83 c0 18	 add	 eax, 24			; 00000018H
  00045	83 c9 ff	 or	 ecx, -1
  00048	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0004c	49		 dec	 ecx
  0004d	75 1b		 jne	 SHORT $LN2@AsyncCompl
; Line 830
  0004f	8a 55 ff	 mov	 dl, BYTE PTR _Irql$[ebp]
  00052	b9 00 00 00 00	 mov	 ecx, OFFSET _g_IrpSpinLock
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@KfReleaseSpinLock@8
; Line 831
  0005d	32 d2		 xor	 dl, dl
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR _ParentIrp$[ebp]
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCompleteRequest@8
; Line 833
  00068	eb 0e		 jmp	 SHORT $LN1@AsyncCompl
$LN2@AsyncCompl:
; Line 834
  0006a	8a 55 ff	 mov	 dl, BYTE PTR _Irql$[ebp]
  0006d	b9 00 00 00 00	 mov	 ecx, OFFSET _g_IrpSpinLock
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@KfReleaseSpinLock@8
$LN1@AsyncCompl:
; Line 836
  00078	b8 16 00 00 c0	 mov	 eax, -1073741802	; c0000016H
; Line 837
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 0c 00	 ret	 12			; 0000000cH
_AsyncCompletion@12 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _BlkMovIoCompletion@12
_TEXT	SEGMENT
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_Context$ = 16						; size = 4
_BlkMovIoCompletion@12 PROC				; COMDAT
; Line 845
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 853
  00008	8b 45 0c	 mov	 eax, DWORD PTR _Irp$[ebp]
  0000b	0f b6 48 21	 movzx	 ecx, BYTE PTR [eax+33]
  0000f	85 c9		 test	 ecx, ecx
  00011	74 16		 je	 SHORT $LN1@BlkMovIoCo
; Line 855
  00013	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00016	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00019	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0001d	83 c9 01	 or	 ecx, 1
  00020	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00023	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00026	88 48 03	 mov	 BYTE PTR [eax+3], cl
$LN1@BlkMovIoCo:
; Line 857
  00029	33 c0		 xor	 eax, eax
; Line 859
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
_BlkMovIoCompletion@12 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _BlkMovShutdownFlush@8
_TEXT	SEGMENT
_deviceExtension$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_Irp$ = 12						; size = 4
_BlkMovShutdownFlush@8 PROC				; COMDAT
; Line 866
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
; Line 867
  00006	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  00009	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0000c	89 4d fc	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 872
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00012	8a 42 23	 mov	 al, BYTE PTR [edx+35]
  00015	04 01		 add	 al, 1
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0001a	88 41 23	 mov	 BYTE PTR [ecx+35], al
; Line 873
  0001d	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  00020	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00023	83 c0 24	 add	 eax, 36			; 00000024H
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00029	89 41 60	 mov	 DWORD PTR [ecx+96], eax
; Line 875
  0002c	8b 55 0c	 mov	 edx, DWORD PTR _Irp$[ebp]
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00032	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCallDriver@8
; Line 877
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
_BlkMovShutdownFlush@8 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _BlkMovUnload@4
_TEXT	SEGMENT
_DriverObject$ = 8					; size = 4
_BlkMovUnload@4 PROC					; COMDAT
; Line 884
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
; Line 885
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0000b	0f b6 c0	 movzx	 eax, al
  0000e	83 f8 01	 cmp	 eax, 1
  00011	7e 19		 jle	 SHORT $LN2@BlkMovUnlo
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  00019	0f b6 c8	 movzx	 ecx, al
  0001c	51		 push	 ecx
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
  00022	e8 00 00 00 00	 call	 _DbgPrint
  00027	83 c4 08	 add	 esp, 8
__annotation$23913:
  0002a	cd 2c		 int	 44			; 0000002cH
$LN2@BlkMovUnlo:
; Line 888
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
_BlkMovUnload@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CE@MLCELBNL@BlkMover?3Thread?5default?5conditio@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	??_C@_0BA@HDJEHNPB@Context?5?$CB?$DN?5NULL?$AA@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
PUBLIC	_Thread@4
EXTRN	_g_dwRePointer:DWORD
EXTRN	_g_dwDataRecNum:DWORD
EXTRN	__imp__MmUnlockPages@4:PROC
EXTRN	_g_dwMovedSecs:DWORD
EXTRN	_g_dwMovedRecNum:DWORD
EXTRN	__imp__RtlCompareMemory@12:PROC
EXTRN	_g_pCompInitBuf:DWORD
EXTRN	_ReadWriteFromGroup@24:PROC
EXTRN	_IsRWToFreeSpace@8:PROC
EXTRN	_DoReLocate@20:PROC
EXTRN	__imp__MmMapLockedPagesSpecifyCache@24:PROC
EXTRN	__imp_@ExfInterlockedRemoveHeadList@8:PROC
EXTRN	__imp__PsTerminateSystemThread@4:PROC
EXTRN	__imp__KeSetPriorityThread@8:PROC
EXTRN	_KeGetCurrentThread@0:PROC
;	COMDAT ??_C@_0CE@MLCELBNL@BlkMover?3Thread?5default?5conditio@FNODOBFM@
text$s	SEGMENT
??_C@_0CE@MLCELBNL@BlkMover?3Thread?5default?5conditio@FNODOBFM@ DB 'BlkM'
	DB	'over:Thread default conditions.', 00H	;  ?? ::FNODOBFM::`string'
text$s	ENDS
;	COMDAT ??_C@_0BA@HDJEHNPB@Context?5?$CB?$DN?5NULL?$AA@FNODOBFM@
text$s	SEGMENT
??_C@_0BA@HDJEHNPB@Context?5?$CB?$DN?5NULL?$AA@FNODOBFM@ DB 'Context != N'
	DB	'ULL', 00H					;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _Thread@4
_TEXT	SEGMENT
tv304 = -104						; size = 4
tv274 = -100						; size = 4
tv237 = -96						; size = 4
tv160 = -92						; size = 4
tv144 = -88						; size = 4
tv142 = -84						; size = 4
tv88 = -80						; size = 4
tv69 = -76						; size = 4
_pCurBuffer$ = -72					; size = 4
_status$ = -64						; size = 4
_request$ = -60						; size = 4
_currentIrpStack$ = -52					; size = 4
_DeviceObject$ = -48					; size = 4
_dwLength$ = -44					; size = 4
_pRegs$ = -40						; size = 4
_pReadWriteBuffer$ = -36				; size = 4
_deviceExtension$ = -32					; size = 4
_dwStartSec$ = -28					; size = 4
_i$ = -20						; size = 4
_nextIrpStack$ = -16					; size = 4
_Irp$ = -8						; size = 4
_pBuffer$ = -4						; size = 4
_Context$ = 8						; size = 4
_Thread@4 PROC						; COMDAT
; Line 894
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 68	 sub	 esp, 104		; 00000068H
; Line 914
  00008	83 7d 08 00	 cmp	 DWORD PTR _Context$[ebp], 0
  0000c	75 20		 jne	 SHORT $LN44@Thread
  0000e	6a 00		 push	 0
  00010	68 92 03 00 00	 push	 914			; 00000392H
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HDJEHNPB@Context?5?$CB?$DN?5NULL?$AA@FNODOBFM@
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  00025	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  0002c	eb 07		 jmp	 SHORT $LN45@Thread
$LN44@Thread:
  0002e	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
$LN45@Thread:
; Line 916
  00035	8b 45 08	 mov	 eax, DWORD PTR _Context$[ebp]
  00038	89 45 d0	 mov	 DWORD PTR _DeviceObject$[ebp], eax
; Line 918
  0003b	8b 4d d0	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  0003e	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00041	89 55 e0	 mov	 DWORD PTR _deviceExtension$[ebp], edx
; Line 920
  00044	6a 1f		 push	 31			; 0000001fH
  00046	e8 00 00 00 00	 call	 _KeGetCurrentThread@0
  0004b	50		 push	 eax
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeSetPriorityThread@8
$LN41@Thread:
; Line 922
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	85 c0		 test	 eax, eax
  00059	0f 84 23 06 00
	00		 je	 $LN42@Thread
; Line 930
  0005f	6a 00		 push	 0
  00061	6a 00		 push	 0
  00063	6a 01		 push	 1
  00065	6a 06		 push	 6
  00067	8b 4d e0	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  0006a	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0006d	51		 push	 ecx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeWaitForSingleObject@20
; Line 932
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0007a	0f b6 d0	 movzx	 edx, al
  0007d	85 d2		 test	 edx, edx
  0007f	74 20		 je	 SHORT $LN46@Thread
  00081	6a 00		 push	 0
  00083	68 a4 03 00 00	 push	 932			; 000003a4H
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  00098	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
  0009f	eb 07		 jmp	 SHORT $LN47@Thread
$LN46@Thread:
  000a1	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
$LN47@Thread:
; Line 933
  000a8	8b 45 e0	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  000ab	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  000af	85 c9		 test	 ecx, ecx
  000b1	74 08		 je	 SHORT $LN38@Thread
; Line 935
  000b3	6a 00		 push	 0
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PsTerminateSystemThread@4
$LN38@Thread:
; Line 941
  000bb	8b 55 e0	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  000be	83 c2 28	 add	 edx, 40			; 00000028H
  000c1	8b 4d e0	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  000c4	83 c1 20	 add	 ecx, 32			; 00000020H
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@ExfInterlockedRemoveHeadList@8
  000cd	89 45 c4	 mov	 DWORD PTR _request$[ebp], eax
  000d0	83 7d c4 00	 cmp	 DWORD PTR _request$[ebp], 0
  000d4	0f 84 a3 05 00
	00		 je	 $LN37@Thread
; Line 943
  000da	8b 55 c4	 mov	 edx, DWORD PTR _request$[ebp]
  000dd	83 ea 58	 sub	 edx, 88			; 00000058H
  000e0	89 55 f8	 mov	 DWORD PTR _Irp$[ebp], edx
; Line 945
  000e3	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  000e6	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  000e9	89 4d cc	 mov	 DWORD PTR _currentIrpStack$[ebp], ecx
; Line 946
  000ec	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  000ef	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  000f2	83 e8 24	 sub	 eax, 36			; 00000024H
  000f5	89 45 f0	 mov	 DWORD PTR _nextIrpStack$[ebp], eax
; Line 948
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  000fe	0f b6 c8	 movzx	 ecx, al
  00101	85 c9		 test	 ecx, ecx
  00103	74 20		 je	 SHORT $LN48@Thread
  00105	6a 00		 push	 0
  00107	68 b4 03 00 00	 push	 948			; 000003b4H
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@
  00116	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  0011c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
  00123	eb 07		 jmp	 SHORT $LN49@Thread
$LN48@Thread:
  00125	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv142[ebp], 1
$LN49@Thread:
; Line 949
  0012c	8b 55 cc	 mov	 edx, DWORD PTR _currentIrpStack$[ebp]
  0012f	8a 02		 mov	 al, BYTE PTR [edx]
  00131	88 45 a8	 mov	 BYTE PTR tv144[ebp], al
  00134	80 7d a8 03	 cmp	 BYTE PTR tv144[ebp], 3
  00138	0f 82 04 05 00
	00		 jb	 $LN1@Thread
  0013e	80 7d a8 04	 cmp	 BYTE PTR tv144[ebp], 4
  00142	76 0f		 jbe	 SHORT $LN34@Thread
  00144	80 7d a8 0e	 cmp	 BYTE PTR tv144[ebp], 14	; 0000000eH
  00148	0f 84 43 02 00
	00		 je	 $LN12@Thread
  0014e	e9 ef 04 00 00	 jmp	 $LN1@Thread
$LN34@Thread:
; Line 953
  00153	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00156	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00159	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  0015d	83 e0 05	 and	 eax, 5
  00160	74 0e		 je	 SHORT $LN50@Thread
  00162	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00165	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00168	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0016b	89 45 a4	 mov	 DWORD PTR tv160[ebp], eax
  0016e	eb 1a		 jmp	 SHORT $LN51@Thread
$LN50@Thread:
  00170	6a 10		 push	 16			; 00000010H
  00172	6a 00		 push	 0
  00174	6a 00		 push	 0
  00176	6a 01		 push	 1
  00178	6a 00		 push	 0
  0017a	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0017d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00180	52		 push	 edx
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmMapLockedPagesSpecifyCache@24
  00187	89 45 a4	 mov	 DWORD PTR tv160[ebp], eax
$LN51@Thread:
  0018a	8b 45 a4	 mov	 eax, DWORD PTR tv160[ebp]
  0018d	89 45 fc	 mov	 DWORD PTR _pBuffer$[ebp], eax
; Line 954
  00190	8b 4d cc	 mov	 ecx, DWORD PTR _currentIrpStack$[ebp]
  00193	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00196	c1 ea 09	 shr	 edx, 9
  00199	89 55 d4	 mov	 DWORD PTR _dwLength$[ebp], edx
; Line 955
  0019c	8b 45 cc	 mov	 eax, DWORD PTR _currentIrpStack$[ebp]
  0019f	6a 00		 push	 0
  001a1	68 00 02 00 00	 push	 512			; 00000200H
  001a6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  001a9	51		 push	 ecx
  001aa	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001ad	52		 push	 edx
  001ae	e8 00 00 00 00	 call	 __alldiv
  001b3	89 45 e4	 mov	 DWORD PTR _dwStartSec$[ebp], eax
; Line 957
  001b6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_bReLocate, 0
  001bd	74 23		 je	 SHORT $LN33@Thread
; Line 960
  001bf	8b 45 d0	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  001c2	50		 push	 eax
  001c3	8b 4d fc	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  001c6	51		 push	 ecx
  001c7	8b 55 d4	 mov	 edx, DWORD PTR _dwLength$[ebp]
  001ca	52		 push	 edx
  001cb	8b 45 e4	 mov	 eax, DWORD PTR _dwStartSec$[ebp]
  001ce	50		 push	 eax
  001cf	8b 4d cc	 mov	 ecx, DWORD PTR _currentIrpStack$[ebp]
  001d2	8a 11		 mov	 dl, BYTE PTR [ecx]
  001d4	52		 push	 edx
  001d5	e8 00 00 00 00	 call	 _DoReLocate@20
  001da	89 45 c0	 mov	 DWORD PTR _status$[ebp], eax
; Line 962
  001dd	e9 95 01 00 00	 jmp	 $LN32@Thread
$LN33@Thread:
; Line 964
  001e2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_pMoverData, 0
  001e9	0f 84 88 01 00
	00		 je	 $LN32@Thread
; Line 966
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pMoverData
  001f4	83 38 00	 cmp	 DWORD PTR [eax], 0
  001f7	74 41		 je	 SHORT $LN30@Thread
; Line 968
  001f9	8b 4d d4	 mov	 ecx, DWORD PTR _dwLength$[ebp]
  001fc	51		 push	 ecx
  001fd	8b 55 e4	 mov	 edx, DWORD PTR _dwStartSec$[ebp]
  00200	52		 push	 edx
  00201	e8 00 00 00 00	 call	 _IsRWToFreeSpace@8
  00206	85 c0		 test	 eax, eax
  00208	75 24		 jne	 SHORT $LN29@Thread
; Line 969
  0020a	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pMoverData
  0020f	50		 push	 eax
  00210	6a 01		 push	 1
  00212	8b 4d fc	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  00215	51		 push	 ecx
  00216	8b 55 d4	 mov	 edx, DWORD PTR _dwLength$[ebp]
  00219	52		 push	 edx
  0021a	8b 45 e4	 mov	 eax, DWORD PTR _dwStartSec$[ebp]
  0021d	50		 push	 eax
  0021e	8b 4d cc	 mov	 ecx, DWORD PTR _currentIrpStack$[ebp]
  00221	8a 11		 mov	 dl, BYTE PTR [ecx]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 _ReadWriteFromGroup@24
  00229	89 45 c0	 mov	 DWORD PTR _status$[ebp], eax
; Line 970
  0022c	eb 07		 jmp	 SHORT $LN28@Thread
$LN29@Thread:
; Line 971
  0022e	c7 45 c0 03 01
	00 00		 mov	 DWORD PTR _status$[ebp], 259 ; 00000103H
$LN28@Thread:
; Line 973
  00235	e9 3d 01 00 00	 jmp	 $LN32@Thread
$LN30@Thread:
; Line 975
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pMoverData
  0023f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00243	0f 84 91 00 00
	00		 je	 $LN26@Thread
  00249	8b 4d cc	 mov	 ecx, DWORD PTR _currentIrpStack$[ebp]
  0024c	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0024f	83 fa 04	 cmp	 edx, 4
  00252	0f 85 82 00 00
	00		 jne	 $LN26@Thread
; Line 977
  00258	8b 45 fc	 mov	 eax, DWORD PTR _pBuffer$[ebp]
  0025b	89 45 b8	 mov	 DWORD PTR _pCurBuffer$[ebp], eax
; Line 978
  0025e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00265	eb 09		 jmp	 SHORT $LN25@Thread
$LN24@Thread:
  00267	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  0026a	83 c1 01	 add	 ecx, 1
  0026d	89 4d ec	 mov	 DWORD PTR _i$[ebp], ecx
$LN25@Thread:
  00270	8b 55 ec	 mov	 edx, DWORD PTR _i$[ebp]
  00273	3b 55 d4	 cmp	 edx, DWORD PTR _dwLength$[ebp]
  00276	73 2e		 jae	 SHORT $LN23@Thread
; Line 980
  00278	68 00 02 00 00	 push	 512			; 00000200H
  0027d	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pCompInitBuf
  00282	50		 push	 eax
  00283	8b 4d b8	 mov	 ecx, DWORD PTR _pCurBuffer$[ebp]
  00286	51		 push	 ecx
  00287	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlCompareMemory@12
  0028d	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  00292	75 0e		 jne	 SHORT $LN22@Thread
; Line 981
  00294	8b 55 b8	 mov	 edx, DWORD PTR _pCurBuffer$[ebp]
  00297	81 c2 00 02 00
	00		 add	 edx, 512		; 00000200H
  0029d	89 55 b8	 mov	 DWORD PTR _pCurBuffer$[ebp], edx
; Line 982
  002a0	eb 02		 jmp	 SHORT $LN21@Thread
$LN22@Thread:
; Line 983
  002a2	eb 02		 jmp	 SHORT $LN23@Thread
$LN21@Thread:
; Line 984
  002a4	eb c1		 jmp	 SHORT $LN24@Thread
$LN23@Thread:
; Line 985
  002a6	8b 45 ec	 mov	 eax, DWORD PTR _i$[ebp]
  002a9	3b 45 d4	 cmp	 eax, DWORD PTR _dwLength$[ebp]
  002ac	75 09		 jne	 SHORT $LN20@Thread
; Line 987
  002ae	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _status$[ebp], 0
; Line 989
  002b5	eb 1e		 jmp	 SHORT $LN19@Thread
$LN20@Thread:
; Line 992
  002b7	8b 4d cc	 mov	 ecx, DWORD PTR _currentIrpStack$[ebp]
  002ba	8a 11		 mov	 dl, BYTE PTR [ecx]
  002bc	52		 push	 edx
  002bd	8b 45 fc	 mov	 eax, DWORD PTR _pBuffer$[ebp]
  002c0	50		 push	 eax
  002c1	8b 4d d4	 mov	 ecx, DWORD PTR _dwLength$[ebp]
  002c4	51		 push	 ecx
  002c5	8b 55 e4	 mov	 edx, DWORD PTR _dwStartSec$[ebp]
  002c8	52		 push	 edx
  002c9	8b 45 d0	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  002cc	50		 push	 eax
  002cd	e8 00 00 00 00	 call	 _SyncReadWriteSec@20
  002d2	89 45 c0	 mov	 DWORD PTR _status$[ebp], eax
$LN19@Thread:
; Line 995
  002d5	e9 9d 00 00 00	 jmp	 $LN32@Thread
$LN26@Thread:
; Line 997
  002da	8b 4d d4	 mov	 ecx, DWORD PTR _dwLength$[ebp]
  002dd	51		 push	 ecx
  002de	8b 55 e4	 mov	 edx, DWORD PTR _dwStartSec$[ebp]
  002e1	52		 push	 edx
  002e2	e8 00 00 00 00	 call	 _IsRWToFreeSpace@8
  002e7	85 c0		 test	 eax, eax
  002e9	0f 85 81 00 00
	00		 jne	 $LN17@Thread
; Line 999
  002ef	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_bEnableProtect, 0
  002f6	74 58		 je	 SHORT $LN16@Thread
; Line 1001
  002f8	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pMoverData
  002fd	50		 push	 eax
  002fe	6a 00		 push	 0
  00300	8b 4d fc	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  00303	51		 push	 ecx
  00304	8b 55 d4	 mov	 edx, DWORD PTR _dwLength$[ebp]
  00307	52		 push	 edx
  00308	8b 45 e4	 mov	 eax, DWORD PTR _dwStartSec$[ebp]
  0030b	50		 push	 eax
  0030c	8b 4d cc	 mov	 ecx, DWORD PTR _currentIrpStack$[ebp]
  0030f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00311	52		 push	 edx
  00312	e8 00 00 00 00	 call	 _ReadWriteFromGroup@24
  00317	89 45 c0	 mov	 DWORD PTR _status$[ebp], eax
; Line 1002
  0031a	83 7d c0 00	 cmp	 DWORD PTR _status$[ebp], 0
  0031e	75 2e		 jne	 SHORT $LN15@Thread
  00320	8b 45 cc	 mov	 eax, DWORD PTR _currentIrpStack$[ebp]
  00323	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00326	83 f9 04	 cmp	 ecx, 4
  00329	75 23		 jne	 SHORT $LN15@Thread
; Line 1004
  0032b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_pMoverData
  00331	52		 push	 edx
  00332	6a 01		 push	 1
  00334	8b 45 fc	 mov	 eax, DWORD PTR _pBuffer$[ebp]
  00337	50		 push	 eax
  00338	8b 4d d4	 mov	 ecx, DWORD PTR _dwLength$[ebp]
  0033b	51		 push	 ecx
  0033c	8b 55 e4	 mov	 edx, DWORD PTR _dwStartSec$[ebp]
  0033f	52		 push	 edx
  00340	8b 45 cc	 mov	 eax, DWORD PTR _currentIrpStack$[ebp]
  00343	8a 08		 mov	 cl, BYTE PTR [eax]
  00345	51		 push	 ecx
  00346	e8 00 00 00 00	 call	 _ReadWriteFromGroup@24
  0034b	89 45 c0	 mov	 DWORD PTR _status$[ebp], eax
$LN15@Thread:
; Line 1007
  0034e	eb 1e		 jmp	 SHORT $LN14@Thread
$LN16@Thread:
; Line 1009
  00350	8b 55 cc	 mov	 edx, DWORD PTR _currentIrpStack$[ebp]
  00353	8a 02		 mov	 al, BYTE PTR [edx]
  00355	50		 push	 eax
  00356	8b 4d fc	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  00359	51		 push	 ecx
  0035a	8b 55 d4	 mov	 edx, DWORD PTR _dwLength$[ebp]
  0035d	52		 push	 edx
  0035e	8b 45 e4	 mov	 eax, DWORD PTR _dwStartSec$[ebp]
  00361	50		 push	 eax
  00362	8b 4d d0	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  00365	51		 push	 ecx
  00366	e8 00 00 00 00	 call	 _SyncReadWriteSec@20
  0036b	89 45 c0	 mov	 DWORD PTR _status$[ebp], eax
$LN14@Thread:
; Line 1011
  0036e	eb 07		 jmp	 SHORT $LN32@Thread
$LN17@Thread:
; Line 1012
  00370	c7 45 c0 03 01
	00 00		 mov	 DWORD PTR _status$[ebp], 259 ; 00000103H
$LN32@Thread:
; Line 1018
  00377	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  0037a	8b 45 c0	 mov	 eax, DWORD PTR _status$[ebp]
  0037d	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 1019
  00380	8b 4d d4	 mov	 ecx, DWORD PTR _dwLength$[ebp]
  00383	c1 e1 09	 shl	 ecx, 9
  00386	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  00389	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
; Line 1020
  0038c	e9 d2 02 00 00	 jmp	 $LN35@Thread
$LN12@Thread:
; Line 1022
  00391	8b 45 cc	 mov	 eax, DWORD PTR _currentIrpStack$[ebp]
  00394	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00397	89 4d a0	 mov	 DWORD PTR tv237[ebp], ecx
  0039a	8b 55 a0	 mov	 edx, DWORD PTR tv237[ebp]
  0039d	81 ea 28 20 07
	00		 sub	 edx, 466984		; 00072028H
  003a3	89 55 a0	 mov	 DWORD PTR tv237[ebp], edx
  003a6	83 7d a0 28	 cmp	 DWORD PTR tv237[ebp], 40 ; 00000028H
  003aa	0f 87 7c 02 00
	00		 ja	 $LN2@Thread
  003b0	8b 45 a0	 mov	 eax, DWORD PTR tv237[ebp]
  003b3	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN56@Thread[eax]
  003ba	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN57@Thread[ecx*4]
$LN9@Thread:
; Line 1025
  003c1	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  003c4	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  003c7	89 45 d8	 mov	 DWORD PTR _pRegs$[ebp], eax
; Line 1026
  003ca	8b 4d d8	 mov	 ecx, DWORD PTR _pRegs$[ebp]
  003cd	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [ecx+12], 1
; Line 1028
  003d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_pMoverData
  003da	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  003dd	50		 push	 eax
  003de	e8 00 00 00 00	 call	 _FlushBuf@4
  003e3	89 45 c0	 mov	 DWORD PTR _status$[ebp], eax
; Line 1029
  003e6	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  003e9	8b 55 c0	 mov	 edx, DWORD PTR _status$[ebp]
  003ec	89 51 18	 mov	 DWORD PTR [ecx+24], edx
; Line 1030
  003ef	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  003f2	c7 40 1c 1c 00
	00 00		 mov	 DWORD PTR [eax+28], 28	; 0000001cH
; Line 1031
  003f9	e9 42 02 00 00	 jmp	 $LN10@Thread
$LN8@Thread:
; Line 1033
  003fe	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00401	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00404	89 55 d8	 mov	 DWORD PTR _pRegs$[ebp], edx
; Line 1035
  00407	8b 45 d8	 mov	 eax, DWORD PTR _pRegs$[ebp]
  0040a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0040d	89 0d 00 00 00
	00		 mov	 DWORD PTR _g_MovingGroup, ecx
; Line 1036
  00413	8b 55 d8	 mov	 edx, DWORD PTR _pRegs$[ebp]
  00416	8b 02		 mov	 eax, DWORD PTR [edx]
  00418	a3 04 00 00 00	 mov	 DWORD PTR _g_MovingGroup+4, eax
; Line 1037
  0041d	8b 4d d8	 mov	 ecx, DWORD PTR _pRegs$[ebp]
  00420	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00423	89 15 08 00 00
	00		 mov	 DWORD PTR _g_MovingGroup+8, edx
; Line 1038
  00429	8b 45 d8	 mov	 eax, DWORD PTR _pRegs$[ebp]
  0042c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0042f	89 0d 0c 00 00
	00		 mov	 DWORD PTR _g_MovingGroup+12, ecx
; Line 1039
  00435	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR _g_MovingGroup+16, 0
; Line 1040
  0043f	8b 55 d8	 mov	 edx, DWORD PTR _pRegs$[ebp]
  00442	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00445	a3 00 00 00 00	 mov	 DWORD PTR _g_dwMovedRecNum, eax
; Line 1041
  0044a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_pMoverData
  00450	c7 01 01 00 00
	00		 mov	 DWORD PTR [ecx], 1
; Line 1043
  00456	8b 55 d8	 mov	 edx, DWORD PTR _pRegs$[ebp]
  00459	c7 42 0c 01 00
	00 00		 mov	 DWORD PTR [edx+12], 1
; Line 1045
  00460	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  00463	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
; Line 1046
  0046a	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0046d	c7 41 1c 1c 00
	00 00		 mov	 DWORD PTR [ecx+28], 28	; 0000001cH
; Line 1047
  00474	e9 c7 01 00 00	 jmp	 $LN10@Thread
$LN7@Thread:
; Line 1049
  00479	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  0047c	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0047f	89 45 d8	 mov	 DWORD PTR _pRegs$[ebp], eax
; Line 1050
  00482	8b 4d d8	 mov	 ecx, DWORD PTR _pRegs$[ebp]
  00485	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_dwMovedSecs
  0048b	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
; Line 1052
  0048e	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  00491	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
; Line 1053
  00498	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0049b	c7 41 1c 1c 00
	00 00		 mov	 DWORD PTR [ecx+28], 28	; 0000001cH
; Line 1054
  004a2	e9 99 01 00 00	 jmp	 $LN10@Thread
$LN6@Thread:
; Line 1056
  004a7	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  004aa	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  004ad	89 45 dc	 mov	 DWORD PTR _pReadWriteBuffer$[ebp], eax
; Line 1057
  004b0	8b 4d dc	 mov	 ecx, DWORD PTR _pReadWriteBuffer$[ebp]
  004b3	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  004b6	89 55 d4	 mov	 DWORD PTR _dwLength$[ebp], edx
; Line 1058
  004b9	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  004bc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004bf	0f bf 51 06	 movsx	 edx, WORD PTR [ecx+6]
  004c3	83 e2 05	 and	 edx, 5
  004c6	74 0e		 je	 SHORT $LN52@Thread
  004c8	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  004cb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004ce	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  004d1	89 55 9c	 mov	 DWORD PTR tv274[ebp], edx
  004d4	eb 1a		 jmp	 SHORT $LN53@Thread
$LN52@Thread:
  004d6	6a 10		 push	 16			; 00000010H
  004d8	6a 00		 push	 0
  004da	6a 00		 push	 0
  004dc	6a 01		 push	 1
  004de	6a 00		 push	 0
  004e0	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  004e3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004e6	51		 push	 ecx
  004e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmMapLockedPagesSpecifyCache@24
  004ed	89 45 9c	 mov	 DWORD PTR tv274[ebp], eax
$LN53@Thread:
  004f0	8b 55 9c	 mov	 edx, DWORD PTR tv274[ebp]
  004f3	89 55 fc	 mov	 DWORD PTR _pBuffer$[ebp], edx
; Line 1061
  004f6	6a 03		 push	 3
  004f8	8b 45 fc	 mov	 eax, DWORD PTR _pBuffer$[ebp]
  004fb	50		 push	 eax
  004fc	8b 4d d4	 mov	 ecx, DWORD PTR _dwLength$[ebp]
  004ff	51		 push	 ecx
  00500	8b 55 dc	 mov	 edx, DWORD PTR _pReadWriteBuffer$[ebp]
  00503	8b 02		 mov	 eax, DWORD PTR [edx]
  00505	50		 push	 eax
  00506	8b 4d d0	 mov	 ecx, DWORD PTR _DeviceObject$[ebp]
  00509	51		 push	 ecx
  0050a	e8 00 00 00 00	 call	 _SyncReadWriteSec@20
; Line 1062
  0050f	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  00512	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00515	50		 push	 eax
  00516	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmUnlockPages@4
; Line 1063
  0051c	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  0051f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00522	52		 push	 edx
  00523	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoFreeMdl@4
; Line 1064
  00529	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  0052c	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1065
  00533	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00536	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 1066
  0053d	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  00540	c7 42 1c 14 00
	00 00		 mov	 DWORD PTR [edx+28], 20	; 00000014H
; Line 1067
  00547	e9 f4 00 00 00	 jmp	 $LN10@Thread
$LN5@Thread:
; Line 1069
  0054c	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  0054f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00552	89 4d dc	 mov	 DWORD PTR _pReadWriteBuffer$[ebp], ecx
; Line 1070
  00555	8b 55 dc	 mov	 edx, DWORD PTR _pReadWriteBuffer$[ebp]
  00558	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0055b	89 45 d4	 mov	 DWORD PTR _dwLength$[ebp], eax
; Line 1071
  0055e	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00561	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00564	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  00568	83 e0 05	 and	 eax, 5
  0056b	74 0e		 je	 SHORT $LN54@Thread
  0056d	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00570	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00573	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00576	89 45 98	 mov	 DWORD PTR tv304[ebp], eax
  00579	eb 1a		 jmp	 SHORT $LN55@Thread
$LN54@Thread:
  0057b	6a 10		 push	 16			; 00000010H
  0057d	6a 00		 push	 0
  0057f	6a 00		 push	 0
  00581	6a 01		 push	 1
  00583	6a 00		 push	 0
  00585	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00588	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0058b	52		 push	 edx
  0058c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmMapLockedPagesSpecifyCache@24
  00592	89 45 98	 mov	 DWORD PTR tv304[ebp], eax
$LN55@Thread:
  00595	8b 45 98	 mov	 eax, DWORD PTR tv304[ebp]
  00598	89 45 fc	 mov	 DWORD PTR _pBuffer$[ebp], eax
; Line 1074
  0059b	6a 04		 push	 4
  0059d	8b 4d fc	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  005a0	51		 push	 ecx
  005a1	8b 55 d4	 mov	 edx, DWORD PTR _dwLength$[ebp]
  005a4	52		 push	 edx
  005a5	8b 45 dc	 mov	 eax, DWORD PTR _pReadWriteBuffer$[ebp]
  005a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  005aa	51		 push	 ecx
  005ab	8b 55 d0	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  005ae	52		 push	 edx
  005af	e8 00 00 00 00	 call	 _SyncReadWriteSec@20
; Line 1075
  005b4	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  005b7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  005ba	51		 push	 ecx
  005bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MmUnlockPages@4
; Line 1076
  005c1	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  005c4	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  005c7	50		 push	 eax
  005c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IoFreeMdl@4
; Line 1077
  005ce	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  005d1	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 1079
  005d8	8b 55 dc	 mov	 edx, DWORD PTR _pReadWriteBuffer$[ebp]
  005db	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  005df	75 16		 jne	 SHORT $LN4@Thread
  005e1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_dwDataRecNum, 0
  005e8	74 0d		 je	 SHORT $LN4@Thread
; Line 1082
  005ea	a1 10 00 00 00	 mov	 eax, DWORD PTR _g_MovingGroup+16
  005ef	03 45 d4	 add	 eax, DWORD PTR _dwLength$[ebp]
  005f2	a3 10 00 00 00	 mov	 DWORD PTR _g_MovingGroup+16, eax
$LN4@Thread:
; Line 1085
  005f7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_bReLocate, 0
  005fe	74 16		 je	 SHORT $LN3@Thread
  00600	8b 4d dc	 mov	 ecx, DWORD PTR _pReadWriteBuffer$[ebp]
  00603	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00607	74 0d		 je	 SHORT $LN3@Thread
; Line 1086
  00609	8b 55 dc	 mov	 edx, DWORD PTR _pReadWriteBuffer$[ebp]
  0060c	8b 02		 mov	 eax, DWORD PTR [edx]
  0060e	03 45 d4	 add	 eax, DWORD PTR _dwLength$[ebp]
  00611	a3 00 00 00 00	 mov	 DWORD PTR _g_dwRePointer, eax
$LN3@Thread:
; Line 1088
  00616	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00619	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 1089
  00620	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  00623	c7 42 1c 14 00
	00 00		 mov	 DWORD PTR [edx+28], 20	; 00000014H
; Line 1090
  0062a	eb 14		 jmp	 SHORT $LN10@Thread
$LN2@Thread:
; Line 1092
  0062c	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  0062f	c7 40 18 83 01
	00 c0		 mov	 DWORD PTR [eax+24], -1073741437 ; c0000183H
; Line 1093
  00636	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00639	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
$LN10@Thread:
; Line 1095
  00640	eb 21		 jmp	 SHORT $LN35@Thread
$LN1@Thread:
; Line 1097
  00642	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@MLCELBNL@BlkMover?3Thread?5default?5conditio@FNODOBFM@
  00647	e8 00 00 00 00	 call	 _DbgPrint
  0064c	83 c4 04	 add	 esp, 4
; Line 1099
  0064f	8b 55 f8	 mov	 edx, DWORD PTR _Irp$[ebp]
  00652	c7 42 18 83 01
	00 c0		 mov	 DWORD PTR [edx+24], -1073741437 ; c0000183H
; Line 1100
  00659	8b 45 f8	 mov	 eax, DWORD PTR _Irp$[ebp]
  0065c	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN35@Thread:
; Line 1104
  00663	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00666	33 d2		 xor	 edx, edx
  00668	83 79 18 00	 cmp	 DWORD PTR [ecx+24], 0
  0066c	0f 9d c2	 setge	 dl
  0066f	8b 4d f8	 mov	 ecx, DWORD PTR _Irp$[ebp]
  00672	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@IofCompleteRequest@8
; Line 1105
  00678	e9 3e fa ff ff	 jmp	 $LN38@Thread
$LN37@Thread:
; Line 1106
  0067d	e9 d0 f9 ff ff	 jmp	 $LN41@Thread
$LN42@Thread:
; Line 1107
  00682	8b e5		 mov	 esp, ebp
  00684	5d		 pop	 ebp
  00685	c2 04 00	 ret	 4
$LN57@Thread:
  00688	00 00 00 00	 DD	 $LN5@Thread
  0068c	00 00 00 00	 DD	 $LN7@Thread
  00690	00 00 00 00	 DD	 $LN6@Thread
  00694	00 00 00 00	 DD	 $LN9@Thread
  00698	00 00 00 00	 DD	 $LN8@Thread
  0069c	00 00 00 00	 DD	 $LN2@Thread
$LN56@Thread:
  006a0	00		 DB	 0
  006a1	05		 DB	 5
  006a2	05		 DB	 5
  006a3	05		 DB	 5
  006a4	05		 DB	 5
  006a5	05		 DB	 5
  006a6	05		 DB	 5
  006a7	05		 DB	 5
  006a8	05		 DB	 5
  006a9	05		 DB	 5
  006aa	05		 DB	 5
  006ab	05		 DB	 5
  006ac	01		 DB	 1
  006ad	05		 DB	 5
  006ae	05		 DB	 5
  006af	05		 DB	 5
  006b0	05		 DB	 5
  006b1	05		 DB	 5
  006b2	05		 DB	 5
  006b3	05		 DB	 5
  006b4	05		 DB	 5
  006b5	05		 DB	 5
  006b6	05		 DB	 5
  006b7	05		 DB	 5
  006b8	02		 DB	 2
  006b9	05		 DB	 5
  006ba	05		 DB	 5
  006bb	05		 DB	 5
  006bc	05		 DB	 5
  006bd	05		 DB	 5
  006be	05		 DB	 5
  006bf	05		 DB	 5
  006c0	03		 DB	 3
  006c1	05		 DB	 5
  006c2	05		 DB	 5
  006c3	05		 DB	 5
  006c4	05		 DB	 5
  006c5	05		 DB	 5
  006c6	05		 DB	 5
  006c7	05		 DB	 5
  006c8	04		 DB	 4
_Thread@4 ENDP
_TEXT	ENDS
PUBLIC	_InitializeListHead@4
EXTRN	__imp__ZwClose@4:PROC
EXTRN	__imp__ObReferenceObjectByHandle@24:PROC
EXTRN	__imp__PsCreateSystemThread@28:PROC
; Function compile flags: /Odtp
;	COMDAT _CreateThread@4
_TEXT	SEGMENT
tv72 = -16						; size = 4
_status$ = -12						; size = 4
_deviceExtension$ = -8					; size = 4
_thread_handle$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_CreateThread@4 PROC					; COMDAT
; Line 1113
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 10	 sub	 esp, 16			; 00000010H
; Line 1114
  00008	8b 45 08	 mov	 eax, DWORD PTR _DeviceObject$[ebp]
  0000b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0000e	89 4d f8	 mov	 DWORD PTR _deviceExtension$[ebp], ecx
; Line 1120
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  00017	0f b6 d0	 movzx	 edx, al
  0001a	85 d2		 test	 edx, edx
  0001c	74 20		 je	 SHORT $LN5@CreateThre
  0001e	6a 00		 push	 0
  00020	68 60 04 00 00	 push	 1120			; 00000460H
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@KKOENIAD@KeGetCurrentIrql?$CI?$CJ?5?$DN?$DN?5PASSIVE_LE@FNODOBFM@
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  00035	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  0003c	eb 07		 jmp	 SHORT $LN6@CreateThre
$LN5@CreateThre:
  0003e	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
$LN6@CreateThre:
; Line 1122
  00045	8b 45 f8	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00048	83 c0 20	 add	 eax, 32			; 00000020H
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _InitializeListHead@4
; Line 1124
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  00054	83 c1 28	 add	 ecx, 40			; 00000028H
  00057	51		 push	 ecx
  00058	e8 00 00 00 00	 call	 _KeInitializeSpinLock@4
; Line 1127
  0005d	6a 01		 push	 1
  0005f	6a 00		 push	 0
  00061	8b 55 f8	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  00064	83 c2 0c	 add	 edx, 12			; 0000000cH
  00067	52		 push	 edx
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeInitializeEvent@12
; Line 1129
  0006e	6a 00		 push	 0
  00070	6a 01		 push	 1
  00072	8b 45 f8	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00075	83 c0 2c	 add	 eax, 44			; 0000002cH
  00078	50		 push	 eax
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeInitializeEvent@12
; Line 1131
  0007f	8b 4d f8	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  00082	c6 41 40 00	 mov	 BYTE PTR [ecx+64], 0
; Line 1141
  00086	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  00089	52		 push	 edx
  0008a	68 00 00 00 00	 push	 OFFSET _Thread@4
  0008f	6a 00		 push	 0
  00091	6a 00		 push	 0
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	8d 45 fc	 lea	 eax, DWORD PTR _thread_handle$[ebp]
  0009a	50		 push	 eax
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PsCreateSystemThread@28
  000a1	89 45 f4	 mov	 DWORD PTR _status$[ebp], eax
; Line 1143
  000a4	83 7d f4 00	 cmp	 DWORD PTR _status$[ebp], 0
  000a8	7d 05		 jge	 SHORT $LN2@CreateThre
; Line 1146
  000aa	8b 45 f4	 mov	 eax, DWORD PTR _status$[ebp]
  000ad	eb 59		 jmp	 SHORT $LN3@CreateThre
$LN2@CreateThre:
; Line 1156
  000af	6a 00		 push	 0
  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  000b4	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	6a 00		 push	 0
  000bc	68 ff 03 1f 00	 push	 2032639			; 001f03ffH
  000c1	8b 55 fc	 mov	 edx, DWORD PTR _thread_handle$[ebp]
  000c4	52		 push	 edx
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ObReferenceObjectByHandle@24
  000cb	89 45 f4	 mov	 DWORD PTR _status$[ebp], eax
; Line 1158
  000ce	83 7d f4 00	 cmp	 DWORD PTR _status$[ebp], 0
  000d2	7d 27		 jge	 SHORT $LN1@CreateThre
; Line 1160
  000d4	8b 45 fc	 mov	 eax, DWORD PTR _thread_handle$[ebp]
  000d7	50		 push	 eax
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ZwClose@4
; Line 1162
  000de	8b 4d f8	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  000e1	c6 41 40 01	 mov	 BYTE PTR [ecx+64], 1
; Line 1168
  000e5	6a 00		 push	 0
  000e7	6a 00		 push	 0
  000e9	8b 55 f8	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  000ec	83 c2 2c	 add	 edx, 44			; 0000002cH
  000ef	52		 push	 edx
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeSetEvent@12
; Line 1170
  000f6	8b 45 f4	 mov	 eax, DWORD PTR _status$[ebp]
  000f9	eb 0d		 jmp	 SHORT $LN3@CreateThre
$LN1@CreateThre:
; Line 1173
  000fb	8b 45 fc	 mov	 eax, DWORD PTR _thread_handle$[ebp]
  000fe	50		 push	 eax
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ZwClose@4
; Line 1174
  00105	8b 45 f4	 mov	 eax, DWORD PTR _status$[ebp]
$LN3@CreateThre:
; Line 1175
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 04 00	 ret	 4
_CreateThread@4 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _InitializeListHead@4
_TEXT	SEGMENT
_ListHead$ = 8						; size = 4
_InitializeListHead@4 PROC				; COMDAT
; File c:\winddk\6000\inc\ddk\wdm.h
; Line 6663
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
; Line 6664
  00005	8b 45 08	 mov	 eax, DWORD PTR _ListHead$[ebp]
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _ListHead$[ebp]
  0000b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0000e	8b 55 08	 mov	 edx, DWORD PTR _ListHead$[ebp]
  00011	8b 45 08	 mov	 eax, DWORD PTR _ListHead$[ebp]
  00014	89 02		 mov	 DWORD PTR [edx], eax
; Line 6665
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
_InitializeListHead@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@MDLALILK@DeviceObject?5?$CB?$DN?5NULL?$AA@FNODOBFM@ ;  ?? ::FNODOBFM::`string'
EXTRN	__imp_@ObfDereferenceObject@4:PROC
;	COMDAT ??_C@_0BF@MDLALILK@DeviceObject?5?$CB?$DN?5NULL?$AA@FNODOBFM@
; File f:\tech\blkmover\cur_ver\sys\2000\iomon.c
text$s	SEGMENT
??_C@_0BF@MDLALILK@DeviceObject?5?$CB?$DN?5NULL?$AA@FNODOBFM@ DB 'DeviceO'
	DB	'bject != NULL', 00H				;  ?? ::FNODOBFM::`string'
; Function compile flags: /Odtp
text$s	ENDS
;	COMDAT _DeleteThread@4
_TEXT	SEGMENT
tv79 = -8						; size = 4
_deviceExtension$ = -4					; size = 4
_DeviceObject$ = 8					; size = 4
_DeleteThread@4 PROC					; COMDAT
; Line 1181
  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 08	 sub	 esp, 8
; Line 1184
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0000e	0f b6 c0	 movzx	 eax, al
  00011	83 f8 01	 cmp	 eax, 1
  00014	7e 19		 jle	 SHORT $LN1@DeleteThre
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeGetCurrentIrql@0
  0001c	0f b6 c8	 movzx	 ecx, al
  0001f	51		 push	 ecx
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FOPNHIJF@EX?3?5Pageable?5code?5called?5at?5IRQL@FNODOBFM@
  00025	e8 00 00 00 00	 call	 _DbgPrint
  0002a	83 c4 08	 add	 esp, 8
__annotation$23940:
  0002d	cd 2c		 int	 44			; 0000002cH
$LN1@DeleteThre:
; Line 1185
  0002f	83 7d 08 00	 cmp	 DWORD PTR _DeviceObject$[ebp], 0
  00033	75 20		 jne	 SHORT $LN4@DeleteThre
  00035	6a 00		 push	 0
  00037	68 a1 04 00 00	 push	 1185			; 000004a1H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MECBGJFF@f?3?2tech?2blkmover?2cur_ver?2sys?2200@FNODOBFM@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MDLALILK@DeviceObject?5?$CB?$DN?5NULL?$AA@FNODOBFM@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlAssert@16
  0004c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
  00053	eb 07		 jmp	 SHORT $LN5@DeleteThre
$LN4@DeleteThre:
  00055	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv79[ebp], 1
$LN5@DeleteThre:
; Line 1187
  0005c	8b 55 08	 mov	 edx, DWORD PTR _DeviceObject$[ebp]
  0005f	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00062	89 45 fc	 mov	 DWORD PTR _deviceExtension$[ebp], eax
; Line 1189
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _deviceExtension$[ebp]
  00068	c6 41 40 01	 mov	 BYTE PTR [ecx+64], 1
; Line 1195
  0006c	6a 00		 push	 0
  0006e	6a 00		 push	 0
  00070	8b 55 fc	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  00073	83 c2 2c	 add	 edx, 44			; 0000002cH
  00076	52		 push	 edx
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeSetEvent@12
; Line 1204
  0007d	6a 00		 push	 0
  0007f	6a 00		 push	 0
  00081	6a 00		 push	 0
  00083	6a 06		 push	 6
  00085	8b 45 fc	 mov	 eax, DWORD PTR _deviceExtension$[ebp]
  00088	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0008b	51		 push	 ecx
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KeWaitForSingleObject@20
; Line 1206
  00092	8b 55 fc	 mov	 edx, DWORD PTR _deviceExtension$[ebp]
  00095	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_@ObfDereferenceObject@4
; Line 1207
  0009e	33 c0		 xor	 eax, eax
; Line 1208
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
_DeleteThread@4 ENDP
_TEXT	ENDS
END
